"use strict";(self.webpackChunknestjs_mod_com=self.webpackChunknestjs_mod_com||[]).push([[75],{6667:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>R,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>E,toc:()=>i});var t=s(4848),r=s(8453);const o={},a="\u041a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0432 Redis \u043d\u0430 NestJS",E={id:"ru-posts/fullstack/2024-11-20",title:"\u041a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0432 Redis \u043d\u0430 NestJS",description:"\u041d\u0430 \u043a\u0430\u0436\u0434\u043e\u043c \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043a \u0431\u044d\u043a\u0435\u043d\u0434\u0443 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043f\u043e \u043f\u0440\u043e\u0444\u0438\u043b\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u044d\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0443 \u043d\u0430 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u0431\u044d\u043a\u0435\u043d\u0434\u0430, \u0434\u043b\u044f \u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0442\u0432\u0435\u0442 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445.",source:"@site/docs/ru-posts/fullstack/2024-11-20.md",sourceDirName:"ru-posts/fullstack",slug:"/ru-posts/fullstack/2024-11-20",permalink:"/docs/ru-posts/fullstack/2024-11-20",draft:!1,unlisted:!1,editUrl:"https://github.com/nestjs-mod/nestjs-mod.com/blob/master/docs/ru-posts/fullstack/2024-11-20.md",tags:[],version:"current",frontMatter:{},sidebar:"ruPostsSidebar",previous:{title:"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0433\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430 https://min.io \u0432 \u0444\u0443\u043b\u0441\u0442\u0435\u043a \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043d\u0430 NestJS \u0438 Angular",permalink:"/docs/ru-posts/fullstack/2024-11-15"},next:{title:"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0447\u0435\u0440\u0435\u0437 WebSockets \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0435\u0433\u043e \u0432 Angular-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438",permalink:"/docs/ru-posts/fullstack/2024-11-21"}},R={},i=[{value:"1. \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438",id:"1-\u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c-\u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438",level:3},{value:"2. \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0432 \u0431\u044d\u043a\u0435\u043d\u0434",id:"2-\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c-\u043d\u043e\u0432\u044b\u0435-\u043c\u043e\u0434\u0443\u043b\u0438-\u0432-\u0431\u044d\u043a\u0435\u043d\u0434",level:3},{value:"3. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430 \u043f\u043e \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435",id:"3-\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c-\u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e-\u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e-\u043a\u043e\u0434\u0430-\u043f\u043e-\u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435",level:3},{value:"4. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0441 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438 \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0447\u0435\u0440\u0435\u0437 E2E-\u0442\u0435\u0441\u0442\u044b",id:"4-\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c-\u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443-\u0441-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438-\u0432-\u0440\u0435\u0436\u0438\u043c\u0435-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438-\u0438-\u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c-\u0447\u0435\u0440\u0435\u0437-e2e-\u0442\u0435\u0441\u0442\u044b",level:3},{value:"5. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432 WebhookModule-\u043c\u043e\u0434\u0443\u043b\u044c",id:"5-\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c-\u0441\u0435\u0440\u0432\u0438\u0441-\u0434\u043b\u044f-\u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f-\u0432-webhookmodule-\u043c\u043e\u0434\u0443\u043b\u044c",level:3},{value:"6. \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b\u044b \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 docker-compose \u0438 kubernetes",id:"6-\u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c-\u0444\u0430\u0439\u043b\u044b-\u0438-\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c-\u043d\u043e\u0432\u044b\u0435-\u0434\u043b\u044f-\u0437\u0430\u043f\u0443\u0441\u043a\u0430-docker-compose-\u0438-kubernetes",level:3},{value:"\u0417\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435",id:"\u0437\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435",level:3},{value:"\u041f\u043b\u0430\u043d\u044b",id:"\u043f\u043b\u0430\u043d\u044b",level:3},{value:"\u0421\u0441\u044b\u043b\u043a\u0438",id:"\u0441\u0441\u044b\u043b\u043a\u0438",level:3}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"\u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435-\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438-\u0432-redis-\u043d\u0430-nestjs",children:"\u041a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0432 Redis \u043d\u0430 NestJS"}),"\n",(0,t.jsx)(n.p,{children:"\u041d\u0430 \u043a\u0430\u0436\u0434\u043e\u043c \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043a \u0431\u044d\u043a\u0435\u043d\u0434\u0443 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043f\u043e \u043f\u0440\u043e\u0444\u0438\u043b\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u044d\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0443 \u043d\u0430 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u0431\u044d\u043a\u0435\u043d\u0434\u0430, \u0434\u043b\u044f \u0443\u0441\u043a\u043e\u0440\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0442\u0432\u0435\u0442 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445."}),"\n",(0,t.jsxs)(n.p,{children:["\u0412 \u044d\u0442\u043e\u043c \u043f\u043e\u0441\u0442\u0435 \u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0443 ",(0,t.jsx)(n.code,{children:"Redis"})," \u043a \u043f\u0440\u043e\u0435\u043a\u0442\u0443 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u044e \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0447\u0435\u0440\u0435\u0437 ",(0,t.jsx)(n.code,{children:"@nestjs-mod/cache-manager"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["\u041f\u0440\u043e\u0435\u043a\u0442 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0432 ",(0,t.jsx)(n.code,{children:"Docker Compose"})," \u0438 ",(0,t.jsx)(n.code,{children:"Kubernetes"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"1-\u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c-\u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438",children:"1. \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438"}),"\n",(0,t.jsxs)(n.p,{children:["\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c ",(0,t.jsx)(n.code,{children:"JS"}),"-\u043a\u043b\u0438\u0435\u043d\u0442 \u0438 ",(0,t.jsx)(n.code,{children:"NestJS"}),"-\u043c\u043e\u0434\u0443\u043b\u044c \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 ",(0,t.jsx)(n.code,{children:"cache-manager"})," \u0438 ",(0,t.jsx)(n.code,{children:"Redis"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"\u041a\u043e\u043c\u0430\u043d\u0434\u044b"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install --save redis cache-manager-redis-yet cache-manager @nestjs-mod/cache-manager\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"\u0412\u044b\u0432\u043e\u0434 \u043a\u043e\u043d\u0441\u043e\u043b\u0438"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ npm install --save redis cache-manager-redis-yet cache-manager @nestjs-mod/cache-manager\nnpm warn deprecated cache-manager-redis-yet@5.1.5: With cache-manager v6 we now are using Keyv\n\nadded 17 packages, removed 2 packages, and audited 2934 packages in 19s\n\n360 packages are looking for funding\n  run `npm fund` for details\n\n41 vulnerabilities (19 low, 7 moderate, 15 high)\n\nTo address issues that do not require attention, run:\n  npm audit fix\n\nTo address all issues possible (including breaking changes), run:\n  npm audit fix --force\n\nSome issues need review, and may require choosing\na different dependency.\n\nRun `npm audit` for details.\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c-\u043d\u043e\u0432\u044b\u0435-\u043c\u043e\u0434\u0443\u043b\u0438-\u0432-\u0431\u044d\u043a\u0435\u043d\u0434",children:"2. \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0432 \u0431\u044d\u043a\u0435\u043d\u0434"}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"apps/server/src/main.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"\nimport {\n  DOCKER_COMPOSE_FILE,\n  DockerCompose,\n  DockerComposeAuthorizer,\n  DockerComposeMinio,\n  DockerComposePostgreSQL,\n} from '@nestjs-mod/docker-compose';\n// ...\nimport { MinioModule } from '@nestjs-mod/minio';\n// ...\n\nimport { ExecutionContext } from '@nestjs/common';\n// ...\nbootstrapNestApplication({\n  modules: {\n   // ...\n\n    core: [\n      CacheManagerModule.forRoot({\n        staticConfiguration: {\n          type: isInfrastructureMode() ? 'memory' : 'redis',\n        },\n      }),\n    ],\n    infrastructure: [\n      DockerComposeMinio.forRoot({\n        staticConfiguration: { image: 'bitnami/minio:2024.11.7' },\n      }),\n    ]}\n    );\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c-\u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e-\u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e-\u043a\u043e\u0434\u0430-\u043f\u043e-\u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435",children:"3. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430 \u043f\u043e \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"\u041a\u043e\u043c\u0430\u043d\u0434\u044b"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run docs:infrastructure\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0432 ",(0,t.jsx)(n.code,{children:"docker-compose"}),"-\u0444\u0430\u0439\u043b\u0435 \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u0441\u0435\u0440\u0432\u0438\u0441 ",(0,t.jsx)(n.code,{children:"server-redis"})," \u0438 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u043d\u043e\u0432\u0430\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f ",(0,t.jsx)(n.code,{children:"SERVER_REDIS_URL"}),", \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043d\u0443\u0436\u043d\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c."]}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"apps/server/docker-compose-prod.yml"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"server-redis:\n  image: 'bitnami/redis:7.4.1'\n  container_name: 'server-redis'\n  volumes:\n    - 'server-redis-volume:/bitnami/redis/data'\n  ports:\n    - '6379:6379'\n  networks:\n    - 'server-network'\n  environment:\n    REDIS_DISABLE_COMMANDS: '${SERVER_REDIS_REDIS_DISABLE_COMMANDS}'\n    REDIS_IO_THREADS: '${SERVER_REDIS_REDIS_IO_THREADS}'\n    REDIS_IO_THREADS_DO_READS: '${SERVER_REDIS_REDIS_IO_THREADS_DO_READS}'\n  healthcheck:\n    test:\n      - 'CMD-SHELL'\n      - 'redis-cli ping | grep PONG'\n    interval: '5s'\n    timeout: '5s'\n    retries: 5\n  tty: true\n  restart: 'always'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:".env"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# ...\nSERVER_REDIS_URL=redis://:CHmeOQrZWUHwgahrfzsrzuREOxgAENsC@localhost:6379\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u041f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430 \u043f\u043e \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435, \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"\u041a\u043e\u043c\u0430\u043d\u0434\u044b"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run docs:infrastructure\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"apps/server/docker-compose-prod.yml"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"server-redis:\n  image: 'bitnami/redis:7.4.1'\n  container_name: 'server-redis'\n  volumes:\n    - 'server-redis-volume:/bitnami/redis/data'\n  ports:\n    - '6379:6379'\n  networks:\n    - 'server-network'\n  environment:\n    REDIS_DATABASE: '${SERVER_REDIS_REDIS_DATABASE}'\n    REDIS_PASSWORD: '${SERVER_REDIS_REDIS_PASSWORD}'\n    REDIS_DISABLE_COMMANDS: '${SERVER_REDIS_REDIS_DISABLE_COMMANDS}'\n    REDIS_IO_THREADS: '${SERVER_REDIS_REDIS_IO_THREADS}'\n    REDIS_IO_THREADS_DO_READS: '${SERVER_REDIS_REDIS_IO_THREADS_DO_READS}'\n  healthcheck:\n    test:\n      - 'CMD-SHELL'\n      - 'redis-cli --no-auth-warning -a $$REDIS_PASSWORD ping | grep PONG'\n    interval: '5s'\n    timeout: '5s'\n    retries: 5\n  tty: true\n  restart: 'always'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c-\u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443-\u0441-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438-\u0432-\u0440\u0435\u0436\u0438\u043c\u0435-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438-\u0438-\u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c-\u0447\u0435\u0440\u0435\u0437-e2e-\u0442\u0435\u0441\u0442\u044b",children:"4. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0441 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438 \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0447\u0435\u0440\u0435\u0437 E2E-\u0442\u0435\u0441\u0442\u044b"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"\u041a\u043e\u043c\u0430\u043d\u0434\u044b"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run pm2-full:dev:start\nnpm run pm2-full:dev:test:e2e\n"})}),"\n",(0,t.jsx)(n.h3,{id:"5-\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c-\u0441\u0435\u0440\u0432\u0438\u0441-\u0434\u043b\u044f-\u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f-\u0432-webhookmodule-\u043c\u043e\u0434\u0443\u043b\u044c",children:"5. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432 WebhookModule-\u043c\u043e\u0434\u0443\u043b\u044c"}),"\n",(0,t.jsxs)(n.p,{children:["\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"libs\\feature\\webhook\\src\\lib\\services\\webhook-cache.service.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { CacheManagerService } from '@nestjs-mod/cache-manager';\nimport { InjectPrismaClient } from '@nestjs-mod/prisma';\nimport { Injectable } from '@nestjs/common';\nimport { PrismaClient, WebhookUser } from '@prisma/webhook-client';\nimport { WEBHOOK_FEATURE } from '../webhook.constants';\nimport { WebhookConfiguration } from '../webhook.configuration';\n\n@Injectable()\nexport class WebhookCacheService {\n  constructor(\n    @InjectPrismaClient(WEBHOOK_FEATURE)\n    private readonly prismaClient: PrismaClient,\n    private readonly webhookConfiguration: WebhookConfiguration,\n    private readonly cacheManagerService: CacheManagerService\n  ) {}\n\n  async clearCacheByExternalUserId(externalUserId: string) {\n    const webhookUsers = await this.prismaClient.webhookUser.findMany({\n      where: { externalUserId },\n    });\n    for (const webhookUser of webhookUsers) {\n      await this.cacheManagerService.del(this.getUserCacheKey(webhookUser));\n    }\n  }\n\n  async getCachedUserByExternalUserId(externalUserId: string, externalTenantId?: string) {\n    const cached = await this.cacheManagerService.get<WebhookUser | null>(\n      this.getUserCacheKey({\n        externalUserId,\n        externalTenantId,\n      })\n    );\n    if (cached) {\n      return cached;\n    }\n    const user = await this.prismaClient.webhookUser.findFirst({\n      where: {\n        externalUserId,\n        ...(externalTenantId ? { externalTenantId } : {}),\n      },\n    });\n    if (user) {\n      await this.cacheManagerService.set(this.getUserCacheKey({ externalTenantId, externalUserId }), user, this.webhookConfiguration.cacheTTL);\n      return user;\n    }\n    return null;\n  }\n\n  private getUserCacheKey({ externalTenantId, externalUserId }: { externalTenantId: string | undefined; externalUserId: string }): string {\n    return `${externalTenantId}_${externalUserId}`;\n  }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u0414\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u043a\u044d\u0448\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043d\u0430 15 \u0441\u0435\u043a\u0443\u043d\u0434, \u0432\u0440\u0435\u043c\u044f \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e \u043c\u043e\u0434\u0443\u043b\u044f."}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"libs\\feature\\webhook\\src\\lib\\webhook.configuration.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { ConfigModel, ConfigModelProperty } from '@nestjs-mod/common';\nimport { WebhookEvent } from './types/webhook-event-object';\n\n@ConfigModel()\nexport class WebhookConfiguration {\n  @ConfigModelProperty({\n    description: 'List of available events.',\n  })\n  events!: WebhookEvent[];\n\n  @ConfigModelProperty({\n    description: 'TTL for cached data.',\n    default: 15_000,\n  })\n  cacheTTL?: number;\n}\n\n// ...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u0412 ",(0,t.jsx)(n.code,{children:"WebhookGuard"})," \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0447\u0435\u0440\u0435\u0437 \u043e\u0440\u043c \u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u043a\u044d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f."]}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"libs\\feature\\webhook\\src\\lib\\webhook.guard.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"//...\nimport { WebhookCacheService } from './services/webhook-cache.service';\n\n@Injectable()\nexport class WebhookGuard implements CanActivate {\n  private logger = new Logger(WebhookGuard.name);\n\n  constructor(\n    //...\n    private readonly webhookCacheService: WebhookCacheService\n  ) {}\n\n  //...\n\n  private async tryGetOrCreateCurrentUserWithExternalUserId(req: WebhookRequest, externalTenantId: string | undefined, externalUserId: string) {\n    if (!req.webhookUser) {\n      if (!externalTenantId || !isUUID(externalTenantId)) {\n        throw new WebhookError(WebhookErrorEnum.EXTERNAL_TENANT_ID_NOT_SET);\n      }\n      if (this.webhookEnvironments.autoCreateUser) {\n        req.webhookUser = await this.webhookCacheService.getCachedUserByExternalUserId(externalUserId, externalTenantId);\n\n        if (!req.webhookUser) {\n          await this.prismaClient.webhookUser.create({\n            data: { externalTenantId, externalUserId, userRole: 'User' },\n          });\n        }\n      }\n      req.webhookUser = await this.webhookCacheService.getCachedUserByExternalUserId(externalUserId, externalTenantId);\n    }\n  }\n\n  private async tryGetCurrentSuperAdminUserWithExternalUserId(req: WebhookRequest, externalUserId: string) {\n    if (!req.webhookUser && this.webhookEnvironments.superAdminExternalUserId === externalUserId) {\n      req.webhookUser = await this.webhookCacheService.getCachedUserByExternalUserId(externalUserId);\n    }\n  }\n  //...\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u0412 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0435 \u0441 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432\u044b\u0437\u043e\u0432 \u0438\u043d\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043a\u044d\u0448\u0430 \u043f\u0440\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0438 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f."}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"libs\\feature\\webhook\\src\\lib\\controllers\\webhook-users.controller.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"//...\nimport { WebhookCacheService } from '../services/webhook-cache.service';\n\n@ApiExtraModels(WebhookError)\n@ApiBadRequestResponse({\n  schema: { allOf: refs(WebhookError) },\n})\n@ApiTags('webhook')\n@CheckWebhookRole([WebhookRole.Admin])\n@Controller('/webhook/users')\nexport class WebhookUsersController {\n  constructor(\n    //...\n    private readonly webhookCacheService: WebhookCacheService\n  ) {}\n\n  //...\n\n  @Put(':id')\n  @ApiOkResponse({ type: WebhookUserObject })\n  async updateOne(@CurrentWebhookExternalTenantId() externalTenantId: string, @CurrentWebhookUser() webhookUser: WebhookUser, @Param('id', new ParseUUIDPipe()) id: string, @Body() args: UpdateWebhookUserArgs) {\n    const result = await this.prismaClient.webhookUser.update({\n      data: { ...args },\n      where: {\n        id,\n        ...this.webhookToolsService.externalTenantIdQuery(webhookUser, webhookUser.userRole === 'Admin' ? undefined : externalTenantId),\n      },\n    });\n    await this.webhookCacheService.clearCacheByExternalUserId(webhookUser.externalUserId);\n    return result;\n  }\n\n  @Delete(':id')\n  @ApiOkResponse({ type: StatusResponse })\n  async deleteOne(@CurrentWebhookExternalTenantId() externalTenantId: string, @CurrentWebhookUser() webhookUser: WebhookUser, @Param('id', new ParseUUIDPipe()) id: string) {\n    await this.prismaClient.webhookUser.delete({\n      where: {\n        id,\n        ...this.webhookToolsService.externalTenantIdQuery(webhookUser, webhookUser.userRole === 'Admin' ? undefined : externalTenantId),\n      },\n    });\n    await this.webhookCacheService.clearCacheByExternalUserId(id);\n    return { message: 'ok' };\n  }\n  //...\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0441\u0435\u0440\u0432\u0438\u0441 \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u043d\u0430\u0438\u044f \u0432 \u043c\u043e\u0434\u0443\u043b\u044c ",(0,t.jsx)(n.code,{children:"WebhookModule"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"libs/core/webhook/src/lib/webhook.module.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"//...\nimport { CacheManagerModule } from '@nestjs-mod/cache-manager';\nimport { WebhookCacheService } from './services/webhook-cache.service';\n\nexport const { WebhookModule } = createNestModule({\n  moduleName: WEBHOOK_MODULE,\n  moduleCategory: NestModuleCategory.feature,\n  staticEnvironmentsModel: WebhookEnvironments,\n  staticConfigurationModel: WebhookStaticConfiguration,\n  configurationModel: WebhookConfiguration,\n  imports: [\n    //...\n    CacheManagerModule.forFeature({\n      featureModuleName: WEBHOOK_FEATURE,\n    }),\n  ],\n  providers: [\n    //...\n    WebhookCacheService,\n  ],\n  //...\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"6-\u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c-\u0444\u0430\u0439\u043b\u044b-\u0438-\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c-\u043d\u043e\u0432\u044b\u0435-\u0434\u043b\u044f-\u0437\u0430\u043f\u0443\u0441\u043a\u0430-docker-compose-\u0438-kubernetes",children:"6. \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b\u044b \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 docker-compose \u0438 kubernetes"}),"\n",(0,t.jsxs)(n.p,{children:["\u041f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432\u043e \u0432\u0441\u0435\u0445 \u0444\u0430\u0439\u043b\u0430\u0445 \u044f \u043d\u0435 \u0431\u0443\u0434\u0443, \u0438\u0445 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043f\u043e \u043a\u043e\u043c\u043c\u0438\u0442\u0443 \u0441 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438 \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0430, \u043d\u0438\u0436\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0439 ",(0,t.jsx)(n.code,{children:"docker-compose-full.yml"})," \u0438 \u0435\u0433\u043e \u0444\u0430\u0439\u043b \u0441 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f."]}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:".docker/docker-compose-full.yml"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"version: '3'\nnetworks:\n  nestjs-mod-fullstack-network:\n    driver: 'bridge'\nservices:\n  nestjs-mod-fullstack-postgre-sql:\n    image: 'bitnami/postgresql:15.5.0'\n    container_name: 'nestjs-mod-fullstack-postgre-sql'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    healthcheck:\n      test:\n        - 'CMD-SHELL'\n        - 'pg_isready -U postgres'\n      interval: '5s'\n      timeout: '5s'\n      retries: 5\n    tty: true\n    restart: 'always'\n    environment:\n      POSTGRESQL_USERNAME: '${SERVER_POSTGRE_SQL_POSTGRESQL_USERNAME}'\n      POSTGRESQL_PASSWORD: '${SERVER_POSTGRE_SQL_POSTGRESQL_PASSWORD}'\n      POSTGRESQL_DATABASE: '${SERVER_POSTGRE_SQL_POSTGRESQL_DATABASE}'\n    volumes:\n      - 'nestjs-mod-fullstack-postgre-sql-volume:/bitnami/postgresql'\n  nestjs-mod-fullstack-authorizer:\n    image: 'lakhansamani/authorizer:1.4.4'\n    container_name: 'nestjs-mod-fullstack-authorizer'\n    ports:\n      - '8000:8080'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    environment:\n      DATABASE_URL: '${SERVER_AUTHORIZER_DATABASE_URL}'\n      DATABASE_TYPE: '${SERVER_AUTHORIZER_DATABASE_TYPE}'\n      DATABASE_NAME: '${SERVER_AUTHORIZER_DATABASE_NAME}'\n      ADMIN_SECRET: '${SERVER_AUTHORIZER_ADMIN_SECRET}'\n      PORT: '${SERVER_AUTHORIZER_PORT}'\n      AUTHORIZER_URL: '${SERVER_AUTHORIZER_URL}'\n      COOKIE_NAME: '${SERVER_AUTHORIZER_COOKIE_NAME}'\n      SMTP_HOST: '${SERVER_AUTHORIZER_SMTP_HOST}'\n      SMTP_PORT: '${SERVER_AUTHORIZER_SMTP_PORT}'\n      SMTP_USERNAME: '${SERVER_AUTHORIZER_SMTP_USERNAME}'\n      SMTP_PASSWORD: '${SERVER_AUTHORIZER_SMTP_PASSWORD}'\n      SENDER_EMAIL: '${SERVER_AUTHORIZER_SENDER_EMAIL}'\n      SENDER_NAME: '${SERVER_AUTHORIZER_SENDER_NAME}'\n      DISABLE_PLAYGROUND: '${SERVER_AUTHORIZER_DISABLE_PLAYGROUND}'\n      ACCESS_TOKEN_EXPIRY_TIME: '${SERVER_AUTHORIZER_ACCESS_TOKEN_EXPIRY_TIME}'\n      DISABLE_STRONG_PASSWORD: '${SERVER_AUTHORIZER_DISABLE_STRONG_PASSWORD}'\n      DISABLE_EMAIL_VERIFICATION: '${SERVER_AUTHORIZER_DISABLE_EMAIL_VERIFICATION}'\n      ORGANIZATION_NAME: '${SERVER_AUTHORIZER_ORGANIZATION_NAME}'\n      IS_SMS_SERVICE_ENABLED: '${SERVER_AUTHORIZER_IS_SMS_SERVICE_ENABLED}'\n      IS_EMAIL_SERVICE_ENABLED: '${SERVER_AUTHORIZER_IS_SMS_SERVICE_ENABLED}'\n      ENV: '${SERVER_AUTHORIZER_ENV}'\n      RESET_PASSWORD_URL: '${SERVER_AUTHORIZER_RESET_PASSWORD_URL}'\n      ROLES: '${SERVER_AUTHORIZER_ROLES}'\n      DEFAULT_ROLES: '${SERVER_AUTHORIZER_DEFAULT_ROLES}'\n      JWT_ROLE_CLAIM: '${SERVER_AUTHORIZER_JWT_ROLE_CLAIM}'\n      ORGANIZATION_LOGO: '${SERVER_AUTHORIZER_ORGANIZATION_LOGO}'\n    tty: true\n    restart: 'always'\n    depends_on:\n      nestjs-mod-fullstack-postgre-sql:\n        condition: service_healthy\n      nestjs-mod-fullstack-postgre-sql-migrations:\n        condition: service_completed_successfully\n  nestjs-mod-fullstack-minio:\n    image: 'bitnami/minio:2024.11.7'\n    container_name: 'nestjs-mod-fullstack-minio'\n    volumes:\n      - 'nestjs-mod-fullstack-minio-volume:/bitnami/minio/data'\n    ports:\n      - '9000:9000'\n      - '9001:9001'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    environment:\n      MINIO_ROOT_USER: '${SERVER_MINIO_MINIO_ROOT_USER}'\n      MINIO_ROOT_PASSWORD: '${SERVER_MINIO_MINIO_ROOT_PASSWORD}'\n    healthcheck:\n      test:\n        - 'CMD-SHELL'\n        - 'mc'\n        - 'ready'\n        - 'local'\n      interval: '5s'\n      timeout: '5s'\n      retries: 5\n    tty: true\n    restart: 'always'\n  nestjs-mod-fullstack-redis:\n    image: 'bitnami/redis:7.4.1'\n    container_name: 'nestjs-mod-fullstack-redis'\n    volumes:\n      - 'nestjs-mod-fullstack-redis-volume:/bitnami/redis/data'\n    ports:\n      - '6379:6379'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    environment:\n      REDIS_DATABASE: '${SERVER_REDIS_REDIS_DATABASE}'\n      REDIS_PASSWORD: '${SERVER_REDIS_REDIS_PASSWORD}'\n      REDIS_DISABLE_COMMANDS: '${SERVER_REDIS_REDIS_DISABLE_COMMANDS}'\n      REDIS_IO_THREADS: '${SERVER_REDIS_REDIS_IO_THREADS}'\n      REDIS_IO_THREADS_DO_READS: '${SERVER_REDIS_REDIS_IO_THREADS_DO_READS}'\n    healthcheck:\n      test:\n        - 'CMD-SHELL'\n        - 'redis-cli --no-auth-warning -a $$REDIS_PASSWORD ping | grep PONG'\n      interval: '5s'\n      timeout: '5s'\n      retries: 5\n    tty: true\n    restart: 'always'\n  nestjs-mod-fullstack-postgre-sql-migrations:\n    image: 'ghcr.io/nestjs-mod/nestjs-mod-fullstack-migrations:${ROOT_VERSION}'\n    container_name: 'nestjs-mod-fullstack-postgre-sql-migrations'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    tty: true\n    environment:\n      NX_SKIP_NX_CACHE: 'true'\n      SERVER_ROOT_DATABASE_URL: '${SERVER_ROOT_DATABASE_URL}'\n      SERVER_APP_DATABASE_URL: '${SERVER_APP_DATABASE_URL}'\n      SERVER_WEBHOOK_DATABASE_URL: '${SERVER_WEBHOOK_DATABASE_URL}'\n      SERVER_AUTHORIZER_DATABASE_URL: '${SERVER_AUTHORIZER_DATABASE_URL}'\n    depends_on:\n      nestjs-mod-fullstack-postgre-sql:\n        condition: 'service_healthy'\n    working_dir: '/usr/src/app'\n    volumes:\n      - './../apps:/usr/src/app/apps'\n      - './../libs:/usr/src/app/libs'\n  nestjs-mod-fullstack-server:\n    image: 'ghcr.io/nestjs-mod/nestjs-mod-fullstack-server:${SERVER_VERSION}'\n    container_name: 'nestjs-mod-fullstack-server'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    extra_hosts:\n      - 'host.docker.internal:host-gateway'\n    healthcheck:\n      test: ['CMD-SHELL', 'npx -y wait-on --timeout= --interval=1000 --window --verbose --log http://localhost:${SERVER_PORT}/api/health']\n      interval: 30s\n      timeout: 10s\n      retries: 10\n    tty: true\n    environment:\n      NODE_TLS_REJECT_UNAUTHORIZED: '0'\n      SERVER_PORT: '${SERVER_PORT}'\n      SERVER_APP_DATABASE_URL: '${SERVER_APP_DATABASE_URL}'\n      SERVER_WEBHOOK_DATABASE_URL: '${SERVER_WEBHOOK_DATABASE_URL}'\n      SERVER_WEBHOOK_SUPER_ADMIN_EXTERNAL_USER_ID: '${SERVER_WEBHOOK_SUPER_ADMIN_EXTERNAL_USER_ID}'\n      SERVER_AUTH_ADMIN_EMAIL: '${SERVER_AUTH_ADMIN_EMAIL}'\n      SERVER_AUTH_ADMIN_USERNAME: '${SERVER_AUTH_ADMIN_USERNAME}'\n      SERVER_AUTH_ADMIN_PASSWORD: '${SERVER_AUTH_ADMIN_PASSWORD}'\n      SERVER_AUTHORIZER_URL: '${SERVER_AUTHORIZER_URL}'\n      SERVER_AUTHORIZER_REDIRECT_URL: '${SERVER_AUTHORIZER_REDIRECT_URL}'\n      SERVER_AUTHORIZER_AUTHORIZER_URL: '${SERVER_AUTHORIZER_AUTHORIZER_URL}'\n      SERVER_AUTHORIZER_ADMIN_SECRET: '${SERVER_AUTHORIZER_ADMIN_SECRET}'\n      SERVER_MINIO_SERVER_HOST: '${SERVER_MINIO_SERVER_HOST}'\n      SERVER_MINIO_ACCESS_KEY: '${SERVER_MINIO_ACCESS_KEY}'\n      SERVER_MINIO_SECRET_KEY: '${SERVER_MINIO_SECRET_KEY}'\n      SERVER_REDIS_URL: '${SERVER_REDIS_URL}'\n    restart: 'always'\n    depends_on:\n      nestjs-mod-fullstack-authorizer:\n        condition: 'service_started'\n      nestjs-mod-fullstack-minio:\n        condition: 'service_started'\n      nestjs-mod-fullstack-redis:\n        condition: 'service_healthy'\n      nestjs-mod-fullstack-postgre-sql:\n        condition: service_healthy\n      nestjs-mod-fullstack-postgre-sql-migrations:\n        condition: service_completed_successfully\n  nestjs-mod-fullstack-nginx:\n    image: 'ghcr.io/nestjs-mod/nestjs-mod-fullstack-nginx:${CLIENT_VERSION}'\n    container_name: 'nestjs-mod-fullstack-nginx'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    healthcheck:\n      test: ['CMD-SHELL', 'curl -so /dev/null http://localhost:${NGINX_PORT} || exit 1']\n      interval: 30s\n      timeout: 10s\n      retries: 10\n    environment:\n      SERVER_PORT: '${SERVER_PORT}'\n      NGINX_PORT: '${NGINX_PORT}'\n      CLIENT_AUTHORIZER_URL: '${CLIENT_AUTHORIZER_URL}'\n      CLIENT_MINIO_URL: '${CLIENT_MINIO_URL}'\n      CLIENT_WEBHOOK_SUPER_ADMIN_EXTERNAL_USER_ID: '${CLIENT_WEBHOOK_SUPER_ADMIN_EXTERNAL_USER_ID}'\n    restart: 'always'\n    depends_on:\n      nestjs-mod-fullstack-server:\n        condition: service_healthy\n    ports:\n      - '${NGINX_PORT}:${NGINX_PORT}'\n  nestjs-mod-fullstack-e2e-tests:\n    image: 'ghcr.io/nestjs-mod/nestjs-mod-fullstack-e2e-tests:${ROOT_VERSION}'\n    container_name: 'nestjs-mod-fullstack-e2e-tests'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    environment:\n      IS_DOCKER_COMPOSE: 'true'\n      BASE_URL: 'http://nestjs-mod-fullstack-nginx:${NGINX_PORT}'\n      SERVER_AUTHORIZER_URL: 'http://nestjs-mod-fullstack-authorizer:8080'\n      SERVER_MINIO_URL: 'http://nestjs-mod-fullstack-minio:9000'\n      SERVER_URL: 'http://nestjs-mod-fullstack-server:8080'\n      SERVER_AUTH_ADMIN_EMAIL: '${SERVER_AUTH_ADMIN_EMAIL}'\n      SERVER_AUTH_ADMIN_USERNAME: '${SERVER_AUTH_ADMIN_USERNAME}'\n      SERVER_AUTH_ADMIN_PASSWORD: '${SERVER_AUTH_ADMIN_PASSWORD}'\n      SERVER_AUTHORIZER_ADMIN_SECRET: '${SERVER_AUTHORIZER_ADMIN_SECRET}'\n    depends_on:\n      nestjs-mod-fullstack-nginx:\n        condition: service_healthy\n    working_dir: '/usr/src/app'\n    volumes:\n      - './../apps:/usr/src/app/apps'\n      - './../libs:/usr/src/app/libs'\n  nestjs-mod-fullstack-https-portal:\n    image: steveltn/https-portal:1\n    container_name: 'nestjs-mod-fullstack-https-portal'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    ports:\n      - '80:80'\n      - '443:443'\n    links:\n      - nestjs-mod-fullstack-nginx\n    restart: always\n    environment:\n      STAGE: '${HTTPS_PORTAL_STAGE}'\n      DOMAINS: '${SERVER_DOMAIN} -> http://nestjs-mod-fullstack-nginx:${NGINX_PORT}'\n    depends_on:\n      nestjs-mod-fullstack-nginx:\n        condition: service_healthy\n    volumes:\n      - nestjs-mod-fullstack-https-portal-volume:/var/lib/https-portal\nvolumes:\n  nestjs-mod-fullstack-postgre-sql-volume:\n    name: 'nestjs-mod-fullstack-postgre-sql-volume'\n  nestjs-mod-fullstack-https-portal-volume:\n    name: 'nestjs-mod-fullstack-https-portal-volume'\n  nestjs-mod-fullstack-minio-volume:\n    name: 'nestjs-mod-fullstack-minio-volume'\n  nestjs-mod-fullstack-redis-volume:\n    name: 'nestjs-mod-fullstack-redis-volume'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:".docker/docker-compose-full.env"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"SERVER_PORT=9090\nNGINX_PORT=8080\nSERVER_ROOT_DATABASE_URL=postgres://postgres:postgres_password@nestjs-mod-fullstack-postgre-sql:5432/postgres?schema=public\nSERVER_APP_DATABASE_URL=postgres://app:app_password@nestjs-mod-fullstack-postgre-sql:5432/app?schema=public\nSERVER_WEBHOOK_DATABASE_URL=postgres://webhook:webhook_password@nestjs-mod-fullstack-postgre-sql:5432/webhook?schema=public\nSERVER_POSTGRE_SQL_POSTGRESQL_USERNAME=postgres\nSERVER_POSTGRE_SQL_POSTGRESQL_PASSWORD=postgres_password\nSERVER_POSTGRE_SQL_POSTGRESQL_DATABASE=postgres\nSERVER_DOMAIN=example.com\nHTTPS_PORTAL_STAGE=local # local|stage|production\n\nCLIENT_AUTHORIZER_URL=http://localhost:8000\nCLIENT_MINIO_URL=http://localhost:9000\nSERVER_AUTHORIZER_REDIRECT_URL=http://localhost:8080\nSERVER_AUTH_ADMIN_EMAIL=nestjs-mod-fullstack@site15.ru\nSERVER_AUTH_ADMIN_USERNAME=admin\nSERVER_AUTH_ADMIN_PASSWORD=SbxcbII7RUvCOe9TDXnKhfRrLJW5cGDA\nSERVER_URL=http://localhost:9090/api\nSERVER_AUTHORIZER_URL=http://localhost:8000\nSERVER_MINIO_URL=http://localhost:9000\nSERVER_AUTHORIZER_ADMIN_SECRET=VfKSfPPljhHBXCEohnitursmgDxfAyiD\nSERVER_AUTHORIZER_DATABASE_TYPE=postgres\nSERVER_AUTHORIZER_DATABASE_URL=postgres://Yk42KA4sOb:B7Ep2MwlRR6fAx0frXGWVTGP850qAxM6@nestjs-mod-fullstack-postgre-sql:5432/authorizer\nSERVER_AUTHORIZER_DATABASE_NAME=authorizer\nSERVER_AUTHORIZER_PORT=8080\nSERVER_AUTHORIZER_AUTHORIZER_URL=http://nestjs-mod-fullstack-authorizer:8080\nSERVER_AUTHORIZER_COOKIE_NAME=authorizer\nSERVER_AUTHORIZER_DISABLE_PLAYGROUND=true\nSERVER_AUTHORIZER_ACCESS_TOKEN_EXPIRY_TIME=30m\nSERVER_AUTHORIZER_DISABLE_STRONG_PASSWORD=true\nSERVER_AUTHORIZER_DISABLE_EMAIL_VERIFICATION=true\nSERVER_AUTHORIZER_ORGANIZATION_NAME=NestJSModFullstack\nSERVER_AUTHORIZER_IS_EMAIL_SERVICE_ENABLED=true\nSERVER_AUTHORIZER_IS_SMS_SERVICE_ENABLED=false\nSERVER_AUTHORIZER_RESET_PASSWORD_URL=/reset-password\nSERVER_AUTHORIZER_ROLES=user,admin\nSERVER_AUTHORIZER_DEFAULT_ROLES=user\nSERVER_AUTHORIZER_JWT_ROLE_CLAIM=role\n\nSERVER_MINIO_SERVER_HOST=nestjs-mod-fullstack-minio\nSERVER_MINIO_ACCESS_KEY=FWGmrAGaeMKM\nSERVER_MINIO_SECRET_KEY=QatVJuLoZRARlJguoZMpoKvZMJHzvuOR\nSERVER_MINIO_ROOT_USER=FWGmrAGaeMKM\nSERVER_MINIO_ROOT_PASSWORD=QatVJuLoZRARlJguoZMpoKvZMJHzvuOR\nSERVER_MINIO_MINIO_ROOT_USER=FWGmrAGaeMKM\nSERVER_MINIO_MINIO_ROOT_PASSWORD=QatVJuLoZRARlJguoZMpoKvZMJHzvuOR\n\nSERVER_REDIS_REDIS_DATABASE=0\nSERVER_REDIS_REDIS_PASSWORD=CHmeOQrZWUHwgahrfzsrzuREOxgAENsC\nSERVER_REDIS_REDIS_DISABLE_COMMANDS=\nSERVER_REDIS_REDIS_IO_THREADS=\nSERVER_REDIS_REDIS_IO_THREADS_DO_READS=\n\nSERVER_REDIS_URL=redis://:CHmeOQrZWUHwgahrfzsrzuREOxgAENsC@nestjs-mod-fullstack-redis:6379\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u0437\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435",children:"\u0417\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435"}),"\n",(0,t.jsx)(n.p,{children:"\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043f\u043e\u0441\u0442\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0438\u043d\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043a\u044d\u0448\u0430, \u0435\u0441\u043b\u0438 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439 \u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u043e\u043b\u044c\u0448\u0435, \u0442\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u043e\u0434\u0443\u043c\u044b\u0432\u0430\u0442\u044c \u0438\u043d\u043e\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0438\u043d\u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438, \u0434\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u043f\u0438\u0441\u0430\u0442\u044c \u043c\u0435\u043d\u044c\u0448\u0435 \u043a\u043e\u0434\u0430."}),"\n",(0,t.jsx)(n.h3,{id:"\u043f\u043b\u0430\u043d\u044b",children:"\u041f\u043b\u0430\u043d\u044b"}),"\n",(0,t.jsxs)(n.p,{children:["\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u043f\u043e\u0441\u0442\u0435 \u044f \u0434\u043e\u0431\u0430\u0432\u043b\u044e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0447\u0435\u0440\u0435\u0437 ",(0,t.jsx)(n.code,{children:"WebSockets"})," \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0435\u0433\u043e \u0432 ",(0,t.jsx)(n.code,{children:"Angular"}),"-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438..."]}),"\n",(0,t.jsx)(n.h3,{id:"\u0441\u0441\u044b\u043b\u043a\u0438",children:"\u0421\u0441\u044b\u043b\u043a\u0438"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://nestjs.com",children:"https://nestjs.com"})," - \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u0430\u0439\u0442 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://nestjs-mod.com",children:"https://nestjs-mod.com"})," - \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u0430\u0439\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0443\u0442\u0438\u043b\u0438\u0442"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://fullstack.nestjs-mod.com",children:"https://fullstack.nestjs-mod.com"})," - \u0441\u0430\u0439\u0442 \u0438\u0437 \u043f\u043e\u0441\u0442\u0430"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack"})," - \u043f\u0440\u043e\u0435\u043a\u0442 \u0438\u0437 \u043f\u043e\u0441\u0442\u0430"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/compare/06f453a5d6350a562766216a4f87d70547af8292..82e050c24a0d1a2111f499460896c6d00e0f5af4",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack/compare/06f453a5d6350a562766216a4f87d70547af8292..82e050c24a0d1a2111f499460896c6d00e0f5af4"})," - \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"#nestjs #redis #nestjsmod #fullstack\n#2024-11-20"})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>E});var t=s(6540);const r={},o=t.createContext(r);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function E(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);