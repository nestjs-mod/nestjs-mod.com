"use strict";(self.webpackChunknestjs_mod_com=self.webpackChunknestjs_mod_com||[]).push([[320],{8252:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var o=t(4848),i=t(8453);const r={},s="@nestjs-mod/common",l={id:"packages/common/common",title:"@nestjs-mod/common",description:"A collection of utilities for unifying NestJS applications and modules",source:"@site/docs/packages/common/common.md",sourceDirName:"packages/common",slug:"/packages/common/",permalink:"/docs/packages/common/",draft:!1,unlisted:!1,editUrl:"https://github.com/nestjs-mod/nestjs-mod.com/blob/master/docs/packages/common/common.md",tags:[],version:"current",frontMatter:{},sidebar:"packagesSidebar",previous:{title:"Common",permalink:"/docs/category/common"},next:{title:"@nestjs-mod/misc",permalink:"/docs/packages/common/misc"}},a={},d=[{value:"Installation",id:"installation",level:2},{value:"Utilities",id:"utilities",level:2},{value:"Modules",id:"modules",level:2},{value:"Utilities descriptions",id:"utilities-descriptions",level:2},{value:"Config model",id:"config-model",level:3},{value:"Decorators",id:"decorators",level:4},{value:"Function",id:"function",level:4},{value:"Usage",id:"usage",level:4},{value:"Env model",id:"env-model",level:3},{value:"Decorators",id:"decorators-1",level:4},{value:"Function",id:"function-1",level:4},{value:"Usage",id:"usage-1",level:4},{value:"NestJS application",id:"nestjs-application",level:3},{value:"Function",id:"function-2",level:3},{value:"Usage",id:"usage-2",level:4},{value:"Usage with project name and contextName",id:"usage-with-project-name-and-contextname",level:4},{value:"NestJS module",id:"nestjs-module",level:2},{value:"Decorators",id:"decorators-2",level:4},{value:"Function",id:"function-3",level:4},{value:"Usage",id:"usage-3",level:3},{value:"Modules descriptions",id:"modules-descriptions",level:2},{value:"InfrastructureMarkdownReportGenerator",id:"infrastructuremarkdownreportgenerator",level:3},{value:"Use in NestJS-mod",id:"use-in-nestjs-mod",level:4},{value:"Shared providers",id:"shared-providers",level:4},{value:"Static configuration",id:"static-configuration",level:4},{value:"InfrastructureMarkdownReportStorage",id:"infrastructuremarkdownreportstorage",level:3},{value:"Use in NestJS-mod",id:"use-in-nestjs-mod-1",level:4},{value:"Shared providers",id:"shared-providers-1",level:4},{value:"DefaultNestApplicationInitializer",id:"defaultnestapplicationinitializer",level:3},{value:"Use in NestJS-mod",id:"use-in-nestjs-mod-2",level:4},{value:"Static configuration",id:"static-configuration-1",level:4},{value:"DefaultNestApplicationListener",id:"defaultnestapplicationlistener",level:3},{value:"Use in NestJS-mod",id:"use-in-nestjs-mod-3",level:4},{value:"Static environments",id:"static-environments",level:4},{value:"Static configuration",id:"static-configuration-2",level:4},{value:"ProjectUtils",id:"projectutils",level:3},{value:"Use in NestJS-mod",id:"use-in-nestjs-mod-4",level:4},{value:"Shared providers",id:"shared-providers-2",level:4},{value:"Static configuration",id:"static-configuration-3",level:4},{value:"Links",id:"links",level:2},{value:"License",id:"license",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"nestjs-modcommon",children:"@nestjs-mod/common"}),"\n",(0,o.jsx)(n.p,{children:"A collection of utilities for unifying NestJS applications and modules"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://npmjs.org/package/@nestjs-mod/common",children:(0,o.jsx)(n.img,{src:"https://badgen.net/npm/v/@nestjs-mod/common",alt:"NPM version"})})," ",(0,o.jsx)(n.a,{href:"https://npmjs.org/package/@nestjs-mod/common",children:(0,o.jsx)(n.img,{src:"https://badgen.net/npm/dm/@nestjs-mod/common",alt:"monthly downloads"})})," ",(0,o.jsx)(n.a,{href:"https://t.me/nestjs_mod",children:(0,o.jsx)(n.img,{src:"https://img.shields.io/badge/group-telegram-blue.svg?maxAge=2592000",alt:"Telegram bot"})})]}),"\n",(0,o.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm i --save @nestjs-mod/common\n"})}),"\n",(0,o.jsx)(n.h2,{id:"utilities",children:"Utilities"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Link"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#config-model",children:"Config model"})}),(0,o.jsx)(n.td,{children:"Decorators for describing the module configuration and a function for its serialization and validation."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#env-model",children:"Env model"})}),(0,o.jsx)(n.td,{children:"Decorators for describing module environment variables and functions for its serialization and verification."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#nestjs-application",children:"NestJS application"})}),(0,o.jsx)(n.td,{children:"Function for sequential import of nestModules."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#nestjs-module",children:"NestJS module"})}),(0,o.jsx)(n.td,{children:"Function for creating a configurable module with the ability to use multi-providing."})]})]})]}),"\n",(0,o.jsx)(n.h2,{id:"modules",children:"Modules"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Link"}),(0,o.jsx)(n.th,{children:"Category"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#infrastructuremarkdownreportgenerator",children:"InfrastructureMarkdownReportGenerator"})}),(0,o.jsx)(n.td,{children:"infrastructure"}),(0,o.jsx)(n.td,{children:"Infrastructure markdown report generator."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#infrastructuremarkdownreportstorage",children:"InfrastructureMarkdownReportStorage"})}),(0,o.jsx)(n.td,{children:"infrastructure"}),(0,o.jsx)(n.td,{children:"Infrastructure markdown report storage"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#defaultnestapplicationinitializer",children:"DefaultNestApplicationInitializer"})}),(0,o.jsx)(n.td,{children:"system"}),(0,o.jsx)(n.td,{children:"Default NestJS application initializer."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#defaultnestapplicationlistener",children:"DefaultNestApplicationListener"})}),(0,o.jsx)(n.td,{children:"system"}),(0,o.jsx)(n.td,{children:"Default NestJS application listener."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"#projectutils",children:"ProjectUtils"})}),(0,o.jsx)(n.td,{children:"system"}),(0,o.jsx)(n.td,{children:"Utilities for setting global application parameters, such as project name, description, and settings validation parameters."})]})]})]}),"\n",(0,o.jsx)(n.h2,{id:"utilities-descriptions",children:"Utilities descriptions"}),"\n",(0,o.jsx)(n.h3,{id:"config-model",children:"Config model"}),"\n",(0,o.jsx)(n.p,{children:"Decorators for describing the module configuration and a function for its serialization and validation.\nValues for this type of configuration must be described in code."}),"\n",(0,o.jsx)(n.h4,{id:"decorators",children:"Decorators"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"ConfigModel"}),", ",(0,o.jsx)(n.code,{children:"ConfigModelProperty"})]}),"\n",(0,o.jsx)(n.h4,{id:"function",children:"Function"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"configTransform"})}),"\n",(0,o.jsx)(n.h4,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { ConfigModel, ConfigModelProperty, configTransform } from '@nestjs-mod/common';\nimport { DynamicModule, Module } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { IsNotEmpty } from 'class-validator';\n\n// We describe the configuration.\n@ConfigModel()\nclass AppConfig {\n  @ConfigModelProperty()\n  @IsNotEmpty()\n  option!: string;\n}\n\n// We describe the module.\n@Module({ providers: [AppConfig] })\nclass AppModule {\n  static forRoot(config: Partial<AppConfig>): DynamicModule {\n    return {\n      module: AppModule,\n      providers: [\n        {\n          provide: `${AppConfig.name}_loader`,\n          useFactory: async (emptyAppConfig: AppConfig) => {\n            if (config.constructor !== Object) {\n              Object.setPrototypeOf(emptyAppConfig, config);\n            }\n            const obj = await configTransform({\n              model: AppConfig,\n              data: config,\n            });\n            Object.assign(emptyAppConfig, obj.data);\n          },\n          inject: [AppConfig],\n        },\n      ],\n    };\n  }\n}\n\n// Let's try to launch the application - Example with throw validation error.\nasync function bootstrap1() {\n  const app = await NestFactory.create(AppModule.forRoot({}));\n  await app.listen(3000);\n}\n\n// Now we get a config validation error.\n// throw new ConfigModelValidationErrors(validateErrors);\n// isNotEmpty: option should not be empty\nbootstrap1();\n\n// Let's try to launch the application - Example of start without error.\nasync function bootstrap2() {\n  const app = await NestFactory.create(AppModule.forRoot({ option: 'value1' }));\n  console.log(app.get(AppConfig)); // output: { option: 'value1' }\n  await app.listen(3000);\n}\n\nbootstrap2();\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#utilities",children:"Back to Top"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"env-model",children:"Env model"}),"\n",(0,o.jsx)(n.p,{children:"Decorators for describing module environment variables and functions for its serialization and verification.\nValues can be automatically read from process.env."}),"\n",(0,o.jsx)(n.h4,{id:"decorators-1",children:"Decorators"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"EnvModel"}),", ",(0,o.jsx)(n.code,{children:"EnvModelProperty"})]}),"\n",(0,o.jsx)(n.h4,{id:"function-1",children:"Function"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"envTransform"})}),"\n",(0,o.jsx)(n.h4,{id:"usage-1",children:"Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { EnvModel, EnvModelProperty, envTransform } from '@nestjs-mod/common';\nimport { DynamicModule, Module } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { IsNotEmpty } from 'class-validator';\n\n// We describe the configuration.\n@EnvModel()\nclass AppEnv {\n  @EnvModelProperty()\n  @IsNotEmpty()\n  option!: string;\n}\n\n// We describe the module.\n@Module({ providers: [AppEnv] })\nclass AppModule {\n  static forRoot(env: Partial<AppEnv>): DynamicModule {\n    return {\n      module: AppModule,\n      providers: [\n        {\n          provide: `${AppEnv.name}_loader`,\n          useFactory: async (emptyAppEnv: AppEnv) => {\n            if (env.constructor !== Object) {\n              Object.setPrototypeOf(emptyAppEnv, env);\n            }\n            const obj = await envTransform({\n              model: AppEnv,\n              data: env,\n            });\n            Object.assign(emptyAppEnv, obj.data);\n          },\n          inject: [AppEnv],\n        },\n      ],\n    };\n  }\n}\n\n// Let's try to launch the application - Example with throw validation error.\nasync function bootstrap1() {\n  const app = await NestFactory.create(AppModule.forRoot({}));\n  await app.listen(3000);\n}\n\n// Now we get a config validation error.\n// throw new ConfigModelValidationErrors(validateErrors);\n// isNotEmpty: option should not be empty\nbootstrap1();\n\n// Let's try to launch the application - Example of start without error.\nasync function bootstrap2() {\n  const app = await NestFactory.create(AppModule.forRoot({ option: 'value1' }));\n  console.log(app.get(AppEnv)); // output: { option: 'value1' }\n  await app.listen(3000);\n}\n\nbootstrap2();\n\n// Let's try to launch the application - Example of use environment variables and start without error.\nasync function bootstrap3() {\n  process.env['OPTION'] = 'value1';\n  const app = await NestFactory.create(AppModule.forRoot({}));\n  console.log(app.get(AppEnv)); // output: { option: 'value1' }\n  await app.listen(3000);\n}\n\nbootstrap3();\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#utilities",children:"Back to Top"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"nestjs-application",children:"NestJS application"}),"\n",(0,o.jsx)(n.p,{children:"Function for sequential import of nestModules.\nWhen importing, all preWrapApplication methods of modules are run at the beginning, then all wrapApplication methods, and at the very end all postWrapApplication methods."}),"\n",(0,o.jsx)(n.p,{children:"Types of modules (list in order of processing):"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"System modules"})," - System modules necessary for the operation of the entire application (examples: launching a NestJS application, launching microservices, etc.). Only NestJS-mod compatible modules."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Core modules"})," - Core modules necessary for the operation of feature and integration modules (examples: main module with connection to the database, main module for connecting to aws, etc.). NestJS and NestJS-mod compatible modules."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Feature modules"})," - Feature modules with business logic of the application. NestJS and NestJS-mod compatible modules."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Integration modules"})," - Integration modules are necessary to organize communication between feature or core modules (example: after creating a user in the UsersModule feature module, you need to send him a letter from the NotificationsModule core module). NestJS and NestJS-mod compatible modules."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Infrastructure modules"})," - Infrastructure modules are needed to create configurations that launch various external services (examples: docker-compose file for raising a database, gitlab configuration for deploying an application). Only NestJS-mod compatible modules."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"function-2",children:"Function"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"bootstrapNestApplication"})}),"\n",(0,o.jsx)(n.h4,{id:"usage-2",children:"Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import {\n  isInfrastructureMode,\n  DefaultNestApplicationInitializer,\n  DefaultNestApplicationListener,\n  EnvModel,\n  EnvModelProperty,\n  bootstrapNestApplication,\n  createNestModule,\n} from '@nestjs-mod/common';\nimport { Injectable } from '@nestjs/common';\nimport { IsNotEmpty } from 'class-validator';\n\n@EnvModel()\nclass AppEnv {\n  @EnvModelProperty()\n  @IsNotEmpty()\n  option!: string;\n}\n\n@Injectable()\nclass AppService {\n  constructor(private readonly appEnv: AppEnv) {}\n\n  getEnv() {\n    return this.appEnv;\n  }\n}\n\nconst { AppModule } = createNestModule({\n  moduleName: 'AppModule',\n  environmentsModel: AppEnv,\n  providers: [AppService],\n});\n\nprocess.env['OPTION'] = 'value1';\n\nbootstrapNestApplication({\n  modules: {\n    system: [\n      DefaultNestApplicationInitializer.forRoot(),\n      DefaultNestApplicationListener.forRoot({\n        staticEnvironments: { port: 3000 },\n        staticConfiguration: {\n          preListen: async ({ app }) => {\n            if (app) {\n              const appService = app.get(AppService);\n              console.log(appService.getEnv()); // output: { option: 'value1' }\n            }\n          },\n        },\n      }),\n    ],\n    feature: [AppModule.forRoot()],\n  },\n});\n"})}),"\n",(0,o.jsx)(n.h4,{id:"usage-with-project-name-and-contextname",children:"Usage with project name and contextName"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"  isInfrastructureMode,\nimport {\n  DefaultNestApplicationInitializer,\n  DefaultNestApplicationListener,\n  EnvModel,\n  EnvModelProperty,\n  bootstrapNestApplication,\n  createNestModule,\n} from '@nestjs-mod/common';\nimport { Injectable } from '@nestjs/common';\nimport { IsNotEmpty } from 'class-validator';\n\n@EnvModel()\nclass AppEnv {\n  @EnvModelProperty()\n  @IsNotEmpty()\n  option!: string;\n}\n\n@Injectable()\nclass AppService {\n  constructor(private readonly appEnv: AppEnv) {}\n\n  getEnv() {\n    return this.appEnv;\n  }\n}\n\nconst { AppModule } = createNestModule({\n  moduleName: 'AppModule',\n  environmentsModel: AppEnv,\n  providers: [AppService],\n});\n\nprocess.env['TEST_APP_CTX_OPTION'] = 'value1';\n\nbootstrapNestApplication({\n  project: { name: 'TestApp', description: 'Test application' },\n  modules: {\n    system: [\n      DefaultNestApplicationInitializer.forRoot(),\n      DefaultNestApplicationListener.forRoot({\n        staticEnvironments: { port: 3000 },\n        staticConfiguration: {\n          preListen: async ({ app }) => {\n            if (app) {\n              const appService = app.get(AppService);\n              console.log(appService.getEnv()); // output: { option: 'value1' }\n            }\n          },\n        },\n      }),\n    ],\n    feature: [AppModule.forRoot({ contextName: 'CTX' })],\n  },\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#utilities",children:"Back to Top"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"nestjs-module",children:"NestJS module"}),"\n",(0,o.jsx)(n.p,{children:"Function for creating a configurable module with the ability to use multi-providing.\nIt is possible to create and work with named module instances.\nModules can contain code for creating and managing the application (preWrapApplication, wrapApplication, postWrapApplication)."}),"\n",(0,o.jsx)(n.p,{children:"Type of config or env models used in module:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"environmentsModel"})," - Variables with primitive types used in the module, the values of which can be obtained from various sources, such as: process.env or consul key value."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"configurationModel"})," - Variables of primitive and complex types that are used in the module; values for them must be passed when connecting the module to the application."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"staticEnvironmentsModel"})," - Static variables with primitive types used in the module and can be used at the time of generating module metadata (import, controllers), the values of which can be obtained from various sources, such as: process.env or consul key value."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"staticConfigurationModel"})," - Static variables of primitive and complex types that are used in the module and can be used at the time of generating module metadata (import, controllers); values for them must be passed when connecting the module to the application."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"featureConfigurationModel"})," - Feature variables of primitive and complex types that can be added to the current module from other modules (example: a transport for sending a message can be defined as a generalized interface, but the implementation itself will be added from a module for working with a specific transport or from an integration module)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"featureEnvironmentsModel"})," - Feature variables with primitive types used in the module, the values of which can be obtained from various sources, such as: process.env or consul key value."]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"decorators-2",children:"Decorators"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"InjectFeatures"}),", ",(0,o.jsx)(n.code,{children:"InjectService"}),", ",(0,o.jsx)(n.code,{children:"InjectAllFeatures"}),", ",(0,o.jsx)(n.code,{children:"InjectFeatureEnvironments"}),", ",(0,o.jsx)(n.code,{children:"InjectAllFeatureEnvironments"})]}),"\n",(0,o.jsx)(n.h4,{id:"function-3",children:"Function"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"createNestModule"}),", ",(0,o.jsx)(n.code,{children:"getNestModuleDecorators"})]}),"\n",(0,o.jsx)(n.h3,{id:"usage-3",children:"Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import {\n  ConfigModel,\n  ConfigModelProperty,\n  EnvModel,\n  EnvModelProperty,\n  createNestModule,\n  getNestModuleDecorators,\n  InjectableFeatureConfigurationType,\n} from '@nestjs-mod/common';\nimport { Injectable } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { IsNotEmpty } from 'class-validator';\n\n// App1Module\n\nconst { InjectFeatures } = getNestModuleDecorators({\n  moduleName: 'App1Module',\n});\n\n@ConfigModel()\nclass AppFeatureConfig {\n  @ConfigModelProperty()\n  @IsNotEmpty()\n  featureOptionConfig!: string;\n}\n\n@Injectable()\nclass AppFeaturesService {\n  constructor(\n    @InjectFeatures()\n    private readonly appFeatureConfigs: InjectableFeatureConfigurationType<AppFeatureConfig>[]\n  ) {}\n\n  getFeatureConfigs() {\n    return this.appFeatureConfigs.map(({ featureConfiguration }) => featureConfiguration);\n  }\n}\n\nconst { App1Module } = createNestModule({\n  moduleName: 'App1Module',\n  sharedProviders: [AppFeaturesService],\n  featureConfigurationModel: AppFeatureConfig,\n});\n\n@ConfigModel()\nclass App2Config {\n  @ConfigModelProperty()\n  @IsNotEmpty()\n  option!: string;\n}\n\n@Injectable()\nclass App2Service {\n  constructor(private readonly appFeaturesService: AppFeaturesService, private readonly app2Config: App2Config) {}\n\n  getFeatureConfigs() {\n    return this.appFeaturesService.getFeatureConfigs();\n  }\n\n  getConfig() {\n    return this.app2Config;\n  }\n}\n\n// App2Module\n\nconst { App2Module } = createNestModule({\n  moduleName: 'App2Module',\n  imports: [\n    App1Module.forFeature({\n      featureModuleName: 'App2Module',\n      featureConfiguration: { featureOptionConfig: 'featureOptionConfig-app2' },\n    }),\n  ],\n  providers: [App2Service],\n  configurationModel: App2Config,\n});\n\n@EnvModel()\nclass App3Env {\n  @EnvModelProperty()\n  @IsNotEmpty()\n  option!: string;\n}\n\n@Injectable()\nclass App3Service {\n  constructor(private readonly appFeaturesService: AppFeaturesService, private readonly app3Env: App3Env) {}\n\n  getFeatureConfigs() {\n    return this.appFeaturesService.getFeatureConfigs();\n  }\n\n  getEnv() {\n    return this.app3Env;\n  }\n}\n\nconst { App3Module } = createNestModule({\n  moduleName: 'App3Module',\n  imports: [\n    App1Module.forFeature({\n      featureModuleName: 'App2Module',\n      featureConfiguration: { featureOptionConfig: 'featureOptionConfig-app3' },\n    }),\n  ],\n  providers: [App3Service],\n  environmentsModel: App3Env,\n});\n\nconst { AppModule } = createNestModule({\n  moduleName: 'AppModule',\n  imports: [\n    App1Module.forRoot(),\n    App2Module.forRoot({ configuration: { option: 'appConfig3value' } }),\n    App3Module.forRoot({ environments: { option: 'appEnv2value' } }),\n  ],\n});\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule.forRoot());\n  const appFeatureScannerService = app.get(AppFeaturesService);\n  const app2Service = app.get(App2Service);\n  const app3Service = app.get(App3Service);\n\n  console.log(appFeatureScannerService.getFeatureConfigs()); // output: [{ featureOptionConfig: 'featureOptionConfig-app2' }, { featureOptionConfig: 'featureOptionConfig-app3' }]\n  console.log(app2Service.getFeatureConfigs()); // output: [{ featureOptionConfig: 'featureOptionConfig-app2' }, { featureOptionConfig: 'featureOptionConfig-app3' }]\n  console.log(app3Service.getFeatureConfigs()); // output: [{ featureOptionConfig: 'featureOptionConfig-app2' }, { featureOptionConfig: 'featureOptionConfig-app3' }]\n  console.log(app2Service.getConfig()); // output: { option: 'appConfig3value' }\n  console.log(app3Service.getEnv()); // output: { option: 'appEnv2value' }\n}\n\nbootstrap();\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#utilities",children:"Back to Top"})}),"\n",(0,o.jsx)(n.h2,{id:"modules-descriptions",children:"Modules descriptions"}),"\n",(0,o.jsx)(n.h3,{id:"infrastructuremarkdownreportgenerator",children:"InfrastructureMarkdownReportGenerator"}),"\n",(0,o.jsx)(n.p,{children:"Infrastructure markdown report generator."}),"\n",(0,o.jsx)(n.h4,{id:"use-in-nestjs-mod",children:"Use in NestJS-mod"}),"\n",(0,o.jsx)(n.p,{children:"Use with options."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { bootstrapNestApplication, InfrastructureMarkdownReportGenerator } from '@nestjs-mod/common';\nimport { join } from 'path';\n\nconst appFolder = join(__dirname, '..', '..', '..', 'apps', 'example-basic');\n\nbootstrapNestApplication({\n  modules: {\n    infrastructure: [\n      InfrastructureMarkdownReportGenerator.forRoot({\n        staticConfiguration: {\n          markdownFile: join(appFolder, 'INFRASTRUCTURE.MD'),\n          skipEmptySettings: true,\n        },\n      }),\n    ],\n  },\n});\n"})}),"\n",(0,o.jsx)(n.h4,{id:"shared-providers",children:"Shared providers"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"DynamicNestModuleMetadataMarkdownReportGenerator"})}),"\n",(0,o.jsx)(n.h4,{id:"static-configuration",children:"Static configuration"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Key"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Constraints"}),(0,o.jsx)(n.th,{children:"Default"}),(0,o.jsx)(n.th,{children:"Value"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"markdownFile"})}),(0,o.jsx)(n.td,{children:"Name of the markdown-file in which to save the infrastructure report"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"skipEmptySettings"})}),(0,o.jsx)(n.td,{children:"Skip empty values of env and config models"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]})]})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#modules",children:"Back to Top"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"infrastructuremarkdownreportstorage",children:"InfrastructureMarkdownReportStorage"}),"\n",(0,o.jsx)(n.p,{children:"Infrastructure markdown report storage"}),"\n",(0,o.jsx)(n.h4,{id:"use-in-nestjs-mod-1",children:"Use in NestJS-mod"}),"\n",(0,o.jsx)(n.p,{children:"Use the forRoot method to create a global report store."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { bootstrapNestApplication, InfrastructureMarkdownReportStorage } from '@nestjs-mod/common';\n\nbootstrapNestApplication({\n  modules: {\n    infrastructure: [InfrastructureMarkdownReportStorage.forRoot()],\n  },\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:"An example of using global storage in a module."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import {\n  bootstrapNestApplication,\n  createNestModule,\n  DefaultNestApplicationInitializer,\n  DefaultNestApplicationListener,\n  InfrastructureMarkdownReportGenerator,\n  InfrastructureMarkdownReportStorage,\n  InfrastructureMarkdownReportStorageService,\n} from '@nestjs-mod/common';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nclass AppReportService {\n  constructor(private readonly infrastructureMarkdownReportStorage: InfrastructureMarkdownReportStorageService) {}\n\n  getReport() {\n    return this.infrastructureMarkdownReportStorage.report;\n  }\n}\n\nconst { App1Module } = createNestModule({\n  moduleName: 'App1Module',\n  imports: [InfrastructureMarkdownReportStorage.forFeature()],\n  providers: [AppReportService],\n});\n\nbootstrapNestApplication({\n  modules: {\n    infrastructure: [InfrastructureMarkdownReportStorage.forRoot(), InfrastructureMarkdownReportGenerator.forRoot()],\n    system: [\n      DefaultNestApplicationInitializer.forRoot(),\n      DefaultNestApplicationListener.forRoot({\n        staticConfiguration: {\n          postListen: async ({ app }) => {\n            if (app) {\n              const appReportService = app.get(AppReportService);\n\n              console.log(appReportService.getReport()); // # TestApp ...\n            }\n          },\n        },\n        staticEnvironments: { port: 3012 },\n      }),\n    ],\n    feature: [App1Module.forRoot()],\n  },\n});\n"})}),"\n",(0,o.jsx)(n.h4,{id:"shared-providers-1",children:"Shared providers"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"InfrastructureMarkdownReportStorageService"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#modules",children:"Back to Top"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"defaultnestapplicationinitializer",children:"DefaultNestApplicationInitializer"}),"\n",(0,o.jsx)(n.p,{children:"Default NestJS application initializer."}),"\n",(0,o.jsx)(n.h4,{id:"use-in-nestjs-mod-2",children:"Use in NestJS-mod"}),"\n",(0,o.jsx)(n.p,{children:"Use without options."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { bootstrapNestApplication, DefaultNestApplicationInitializer } from '@nestjs-mod/common';\n\nbootstrapNestApplication({\n  modules: {\n    system: [DefaultNestApplicationInitializer.forRoot()],\n  },\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:"Example of change cors options."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { bootstrapNestApplication, DefaultNestApplicationInitializer } from '@nestjs-mod/common';\n\nbootstrapNestApplication({\n  modules: {\n    system: [\n      DefaultNestApplicationInitializer.forRoot({\n        staticConfiguration: {\n          cors: {\n            origin: '*',\n            methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n            preflightContinue: false,\n            optionsSuccessStatus: 204,\n          },\n        },\n      }),\n    ],\n  },\n});\n"})}),"\n",(0,o.jsx)(n.h4,{id:"static-configuration-1",children:"Static configuration"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Key"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Constraints"}),(0,o.jsx)(n.th,{children:"Default"}),(0,o.jsx)(n.th,{children:"Value"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"cors"})}),(0,o.jsxs)(n.td,{children:["CORS options from ",(0,o.jsx)(n.a,{href:"https://github.com/expressjs/cors#configuration-options",children:"CORS package"})]}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:'{"credentials":true,"methods":"GET,HEAD,PUT,PATCH,POST,DELETE"}'})}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"bodyParser"})}),(0,o.jsx)(n.td,{children:"Whether to use underlying platform body parser."}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"httpsOptions"})}),(0,o.jsx)(n.td,{children:"Set of configurable HTTPS options"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"rawBody"})}),(0,o.jsxs)(n.td,{children:["Whether to register the raw request body on the request. Use ",(0,o.jsx)(n.code,{children:"req.rawBody"}),"."]}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"defaultLogger"})}),(0,o.jsx)(n.td,{children:"Default logger for application"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"logger"})}),(0,o.jsxs)(n.td,{children:["Specifies the logger to use. Pass ",(0,o.jsx)(n.code,{children:"false"})," to turn off logging."]}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"abortOnError"})}),(0,o.jsxs)(n.td,{children:["Whether to abort the process on Error. By default, the process is exited. Pass ",(0,o.jsx)(n.code,{children:"false"})," to override the default behavior. If ",(0,o.jsx)(n.code,{children:"false"})," is passed, Nest will not exit the application and instead will rethrow the exception. @default true"]}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"bufferLogs"})}),(0,o.jsx)(n.td,{children:'If enabled, logs will be buffered until the "Logger#flush" method is called. @default false'}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"autoFlushLogs"})}),(0,o.jsx)(n.td,{children:"If enabled, logs will be automatically flushed and buffer detached when application initialization process either completes or fails. @default true"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"preview"})}),(0,o.jsx)(n.td,{children:"Whether to run application in the preview mode. In the preview mode, providers/controllers are not instantiated & resolved. @default false"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"snapshot"})}),(0,o.jsx)(n.td,{children:"Whether to generate a serialized graph snapshot. @default false"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"forceCloseConnections"})}),(0,o.jsx)(n.td,{children:"Force close open HTTP connections. Useful if restarting your application hangs due to keep-alive connections in the HTTP adapter."}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})}),(0,o.jsx)(n.td,{children:"-"})]})]})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#modules",children:"Back to Top"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"defaultnestapplicationlistener",children:"DefaultNestApplicationListener"}),"\n",(0,o.jsx)(n.p,{children:"Default NestJS application listener."}),"\n",(0,o.jsx)(n.h4,{id:"use-in-nestjs-mod-3",children:"Use in NestJS-mod"}),"\n",(0,o.jsx)(n.p,{children:"Use with manual environments and custom configuration."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import {\n  bootstrapNestApplication,\n  DefaultNestApplicationInitializer,\n  DefaultNestApplicationListener,\n  isInfrastructureMode,\n} from '@nestjs-mod/common';\nimport { Logger } from '@nestjs/common';\n\nbootstrapNestApplication({\n  modules: {\n    system: [\n      DefaultNestApplicationInitializer.forRoot(),\n      DefaultNestApplicationListener.forRoot({\n        staticEnvironments: { port: 3000 },\n        staticConfiguration: {\n          mode: isInfrastructureMode() ? 'silent' : 'listen',\n          preListen: async ({ app }) => {\n            if (app) {\n              app.setGlobalPrefix('api');\n            }\n          },\n          postListen: async ({ current }) => {\n            Logger.log(\n              `\ud83d\ude80 Application is running on: http://${current.staticEnvironments?.hostname || 'localhost'}:${\n                current.staticEnvironments?.port\n              }/api`\n            );\n          },\n        },\n      }),\n    ],\n  },\n});\n"})}),"\n",(0,o.jsx)(n.h4,{id:"static-environments",children:"Static environments"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Key"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Sources"}),(0,o.jsx)(n.th,{children:"Constraints"}),(0,o.jsx)(n.th,{children:"Default"}),(0,o.jsx)(n.th,{children:"Value"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"port"})}),(0,o.jsx)(n.td,{children:"The port on which to run the server."}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"obj['port']"}),", ",(0,o.jsx)(n.code,{children:"process.env['PORT']"})]}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.strong,{children:"isNotEmpty"})," (port should not be empty)"]}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"hostname"})}),(0,o.jsx)(n.td,{children:"Hostname on which to listen for incoming packets."}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"obj['hostname']"}),", ",(0,o.jsx)(n.code,{children:"process.env['HOSTNAME']"})]}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]})]})]}),"\n",(0,o.jsx)(n.h4,{id:"static-configuration-2",children:"Static configuration"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Key"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Constraints"}),(0,o.jsx)(n.th,{children:"Default"}),(0,o.jsx)(n.th,{children:"Value"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"mode"})}),(0,o.jsx)(n.td,{children:"Mode of start application: init - for run NestJS life cycle, listen - for full start NestJS application"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"listen"})}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"preListen"})}),(0,o.jsx)(n.td,{children:"Method for additional actions before listening"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"postListen"})}),(0,o.jsx)(n.td,{children:"Method for additional actions after listening"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"defaultLogger"})}),(0,o.jsx)(n.td,{children:"Default logger for application"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"enableShutdownHooks"})}),(0,o.jsx)(n.td,{children:"Enable shutdown hooks"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"globalPrefix"})}),(0,o.jsx)(n.td,{children:"Global prefix"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"api"})}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"logApplicationStart"})}),(0,o.jsx)(n.td,{children:"Log application start"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})}),(0,o.jsx)(n.td,{children:"-"})]})]})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#modules",children:"Back to Top"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"projectutils",children:"ProjectUtils"}),"\n",(0,o.jsx)(n.p,{children:"Utilities for setting global application parameters, such as project name, description, and settings validation parameters."}),"\n",(0,o.jsx)(n.h4,{id:"use-in-nestjs-mod-4",children:"Use in NestJS-mod"}),"\n",(0,o.jsx)(n.p,{children:"Use with options."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { DOT_ENV_FILE, PACKAGE_JSON_FILE, ProjectUtils, bootstrapNestApplication } from '@nestjs-mod/common';\nimport { join } from 'path';\n\nconst rootFolder = join(__dirname, '..', '..', '..');\nconst appFolder = join(rootFolder, 'apps', 'example-basic');\n\nbootstrapNestApplication({\n  modules: {\n    system: [\n      ProjectUtils.forRoot({\n        staticConfiguration: {\n          applicationPackageJsonFile: join(appFolder, PACKAGE_JSON_FILE),\n          packageJsonFile: join(rootFolder, PACKAGE_JSON_FILE),\n          envFile: join(rootFolder, DOT_ENV_FILE),\n        },\n      }),\n    ],\n  },\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:"An example of access to module services with forFeature."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import {\n  DOT_ENV_FILE,\n  DefaultNestApplicationInitializer,\n  DefaultNestApplicationListener,\n  DotEnvService,\n  PACKAGE_JSON_FILE,\n  ProjectUtils,\n  bootstrapNestApplication,\n  createNestModule,\n} from '@nestjs-mod/common';\nimport { Injectable } from '@nestjs/common';\nimport { join } from 'path';\n\n@Injectable()\nclass GetEnv {\n  constructor(private readonly dotEnvService: DotEnvService) {}\n  getEnv() {\n    return this.dotEnvService.read();\n  }\n\n  getKeys() {\n    return this.dotEnvService.keys(true);\n  }\n}\nconst { AppModule } = createNestModule({\n  moduleName: 'AppModule',\n  imports: [ProjectUtils.forFeature()],\n  providers: [GetEnv],\n});\n\nconst rootFolder = join(__dirname, '..', '..', '..');\nconst appFolder = join(rootFolder, 'apps', 'example-basic');\n\nprocess.env.TEST_APP_PORT = '2000';\nprocess.env.TEST_APP_HOSTNAME = 'host';\n\nbootstrapNestApplication({\n  project: {\n    name: 'test-app',\n    description: 'Description for test-app',\n  },\n  globalEnvironmentsOptions: { debug: true },\n  modules: {\n    system: [\n      ProjectUtils.forRoot({\n        staticConfiguration: {\n          applicationPackageJsonFile: join(appFolder, PACKAGE_JSON_FILE),\n          envFile: join(rootFolder, DOT_ENV_FILE),\n        },\n      }),\n      DefaultNestApplicationInitializer.forRoot(),\n      DefaultNestApplicationListener.forRoot({\n        staticConfiguration: {\n          mode: 'silent',\n          postListen: async ({ app }) => {\n            if (app) {\n              const getEnv = app.get(GetEnv);\n              console.log(await getEnv.getEnv()); // output: { TEST_APP_PORT: '2000', TEST_APP_HOSTNAME: 'host' }\n            }\n          },\n        },\n      }),\n    ],\n    feature: [AppModule.forRoot()],\n  },\n});\n"})}),"\n",(0,o.jsxs)(n.p,{children:["When launched in the infrastructure documentation generation mode, the module creates an ",(0,o.jsx)(n.code,{children:".env"})," file with a list of all required variables, as well as an example ",(0,o.jsx)(n.code,{children:"example.env"}),", where you can enter example variable values."]}),"\n",(0,o.jsx)(n.h4,{id:"shared-providers-2",children:"Shared providers"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"WrapApplicationOptionsService"}),", ",(0,o.jsx)(n.code,{children:"DotEnvService"}),", ",(0,o.jsx)(n.code,{children:"PackageJsonService"}),", ",(0,o.jsx)(n.code,{children:"ApplicationPackageJsonService"}),", ",(0,o.jsx)(n.code,{children:"GitignoreService"}),", ",(0,o.jsx)(n.code,{children:"NxProjectJsonService"}),", ",(0,o.jsx)(n.code,{children:"ProjectUtilsPatcherService"})]}),"\n",(0,o.jsx)(n.h4,{id:"static-configuration-3",children:"Static configuration"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Key"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Constraints"}),(0,o.jsx)(n.th,{children:"Default"}),(0,o.jsx)(n.th,{children:"Value"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"applicationPackageJsonFile"})}),(0,o.jsx)(n.td,{children:"Application package.json-file"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"packageJsonFile"})}),(0,o.jsx)(n.td,{children:"Root package.json-file"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"nxProjectJsonFile"})}),(0,o.jsx)(n.td,{children:"Application project.json-file (nx)"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"envFile"})}),(0,o.jsx)(n.td,{children:"Dot-env file with environment variables"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"updateEnvFile"})}),(0,o.jsx)(n.td,{children:"Update env-file"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"updateProjectOptions"})}),(0,o.jsx)(n.td,{children:"Update project properties"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"updateGlobalConfigurationAndEnvironmentsOptions"})}),(0,o.jsx)(n.td,{children:"Update configuration and environments options"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})}),(0,o.jsx)(n.td,{children:"-"})]})]})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"#modules",children:"Back to Top"})}),"\n",(0,o.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod",children:"https://github.com/nestjs-mod/nestjs-mod"})," - A collection of utilities for unifying NestJS applications and modules"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-contrib",children:"https://github.com/nestjs-mod/nestjs-mod-contrib"})," - Contrib repository for the NestJS-mod"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-example",children:"https://github.com/nestjs-mod/nestjs-mod-example"})," - Example application built with ",(0,o.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod/tree/master/libs/schematics",children:"@nestjs-mod/schematics"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod/blob/master/apps/example-basic/INFRASTRUCTURE.MD",children:"https://github.com/nestjs-mod/nestjs-mod/blob/master/apps/example-basic/INFRASTRUCTURE.MD"})," - A simple example of infrastructure documentation."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-contrib/blob/master/apps/example-prisma/INFRASTRUCTURE.MD",children:"https://github.com/nestjs-mod/nestjs-mod-contrib/blob/master/apps/example-prisma/INFRASTRUCTURE.MD"})," - An extended example of infrastructure documentation with a docker-compose file and a data base."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://dev.to/endykaufman/collection-of-nestjs-mod-utilities-for-unifying-applications-and-modules-on-nestjs-5256",children:"https://dev.to/endykaufman/collection-of-nestjs-mod-utilities-for-unifying-applications-and-modules-on-nestjs-5256"})," - Article about the project NestJS-mod"]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://habr.com/ru/articles/788916",children:"https://habr.com/ru/articles/788916"})," - \u041a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u0443\u0442\u0438\u043b\u0438\u0442 NestJS-mod \u0434\u043b\u044f \u0443\u043d\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0438 \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u043d\u0430 NestJS"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,o.jsx)(n.p,{children:"MIT"})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var o=t(6540);const i={},r=o.createContext(i);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);