"use strict";(self.webpackChunknestjs_mod_com=self.webpackChunknestjs_mod_com||[]).push([[2719],{8085:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var s=t(4848),o=t(8453);const r={},a='Manual deployment of NestJS and Angular applications on a dedicated server via "Docker Compose" and "PM2"',i={id:"en-posts/fullstack/2024-08-22",title:'Manual deployment of NestJS and Angular applications on a dedicated server via "Docker Compose" and "PM2"',description:"We buy a dedicated server and configure SSH access to it from a local computer.",source:"@site/docs/en-posts/fullstack/2024-08-22.md",sourceDirName:"en-posts/fullstack",slug:"/en-posts/fullstack/2024-08-22",permalink:"/docs/en-posts/fullstack/2024-08-22",draft:!1,unlisted:!1,editUrl:"https://github.com/nestjs-mod/nestjs-mod.com/blob/master/docs/en-posts/fullstack/2024-08-22.md",tags:[],version:"current",frontMatter:{},sidebar:"enPostsSidebar",previous:{title:"Build applications on NestJS and Angular and run them in two versions: via PM2 and via Docker Compose",permalink:"/docs/en-posts/fullstack/2024-08-20"},next:{title:"Adding the CI/CD config for deployment NestJS and Angular applications to a dedicated server using GitHub Actions",permalink:"/docs/en-posts/fullstack/2024-08-26"}},l={},d=[{value:"1. Find a free or buy a dedicated server",id:"1-find-a-free-or-buy-a-dedicated-server",level:3},{value:"2. After purchase, you need to set a password if it has not been set, different sites have their own interfaces for this, in my case, setting the password is on the page https://ztv.su/clientarea.php?action=productdetails&amp;id=33376#tabChangepw .",id:"2-after-purchase-you-need-to-set-a-password-if-it-has-not-been-set-different-sites-have-their-own-interfaces-for-this-in-my-case-setting-the-password-is-on-the-page-httpsztvsuclientareaphpactionproductdetailsid33376tabchangepw-",level:3},{value:"3. Connecting to a remote server",id:"3-connecting-to-a-remote-server",level:3},{value:"4. Installing all necessary packages on a dedicated server",id:"4-installing-all-necessary-packages-on-a-dedicated-server",level:3},{value:"5. SSH key generation on a dedicated server",id:"5-ssh-key-generation-on-a-dedicated-server",level:3},{value:"6. Linking a dedicated server&#39;s public key to GitHub",id:"6-linking-a-dedicated-servers-public-key-to-github",level:3},{value:"7. Cloning the project",id:"7-cloning-the-project",level:3},{value:"8. We install dependencies and run the launch and testing of two modes: PM2 production and Docker Compose",id:"8-we-install-dependencies-and-run-the-launch-and-testing-of-two-modes-pm2-production-and-docker-compose",level:3},{value:"9. On the local computer, we update and add new npm scripts",id:"9-on-the-local-computer-we-update-and-add-new-npm-scripts",level:3},{value:"10. On the local computer, we update the parameters of the container with migrations in the &quot;Docker Compose&quot; file",id:"10-on-the-local-computer-we-update-the-parameters-of-the-container-with-migrations-in-the-docker-compose-file",level:3},{value:"11. On the local computer, we open access to the Swagger interface of the backend in Nginx",id:"11-on-the-local-computer-we-open-access-to-the-swagger-interface-of-the-backend-in-nginx",level:3},{value:"12. On the local computer, we add the ability to disable the NestJS module for static output",id:"12-on-the-local-computer-we-add-the-ability-to-disable-the-nestjs-module-for-static-output",level:3},{value:"13. On the local computer, we run the launch and testing of two modes again: PM2 production and Docker Compose",id:"13-on-the-local-computer-we-run-the-launch-and-testing-of-two-modes-again-pm2-production-and-docker-compose",level:3},{value:"14. On the local computer, add an additional container with <code>https-portal</code> to <code>docker-compose-full.yml</code> for proxying <code>http</code> to <code>https</code> and adding the <code>restart: &#39;always&#39;</code> option to all (except migrations) containers",id:"14-on-the-local-computer-add-an-additional-container-with-https-portal-to-docker-compose-fullyml-for-proxying-http-to-https-and-adding-the-restart-always-option-to-all-except-migrations-containers",level:3},{value:"15. On the local computer, we add a new environment variable with our domain vps1724252356.tech0.ru",id:"15-on-the-local-computer-we-add-a-new-environment-variable-with-our-domain-vps1724252356tech0ru",level:3},{value:"16. On the local computer, commit the changes to the repository",id:"16-on-the-local-computer-commit-the-changes-to-the-repository",level:3},{value:"17. We connect to the remote server, get new changes and stop the &quot;PM2&quot; and &quot;Docker Compose&quot; modes",id:"17-we-connect-to-the-remote-server-get-new-changes-and-stop-the-pm2-and-docker-compose-modes",level:3},{value:"18. Restart all applications in the &quot;Docker Compose&quot; mode and run E2E tests, specify the server address https://vps1724252356.tech0.ru",id:"18-restart-all-applications-in-the-docker-compose-mode-and-run-e2e-tests-specify-the-server-address-httpsvps1724252356tech0ru",level:3},{value:"19. Restart all applications in PM2 production mode and run E2E tests, specify the server address http://vps1724252356.tech0.ru:3000",id:"19-restart-all-applications-in-pm2-production-mode-and-run-e2e-tests-specify-the-server-address-httpvps1724252356tech0ru3000",level:3},{value:"20. Setting up the automatic restart of PM2 production mode when restarting the dedicated server",id:"20-setting-up-the-automatic-restart-of-pm2-production-mode-when-restarting-the-dedicated-server",level:3},{value:"21. We reboot and check through the E2E test the operation of both modes",id:"21-we-reboot-and-check-through-the-e2e-test-the-operation-of-both-modes",level:3},{value:"Links",id:"links",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"manual-deployment-of-nestjs-and-angular-applications-on-a-dedicated-server-via-docker-compose-and-pm2",children:'Manual deployment of NestJS and Angular applications on a dedicated server via "Docker Compose" and "PM2"'}),"\n",(0,s.jsx)(n.p,{children:"We buy a dedicated server and configure SSH access to it from a local computer."}),"\n",(0,s.jsxs)(n.p,{children:["Adding ",(0,s.jsx)(n.a,{href:"https://github.com/SteveLTN/https-portal",children:"https://github.com/SteveLTN/https-portal"}),' in "Docker compose" for automatic generation and renewal of certificates.']}),"\n",(0,s.jsx)(n.h3,{id:"1-find-a-free-or-buy-a-dedicated-server",children:"1. Find a free or buy a dedicated server"}),"\n",(0,s.jsxs)(n.p,{children:['I will not describe the steps on this point, I have already described them earlier in the "Buy VPS" section of another post - ',(0,s.jsx)(n.a,{href:"https://dev.to/endykaufman/deploy-nestjs-project-to-vps-with-dokku-31c5",children:"Deploy nestjs project to VPS with dokku"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"As part of the current posts, I bought the cheapest dedicated server on the same site."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Operating system"}),": ",(0,s.jsx)(n.code,{children:"Ubuntu 22.04 x64"}),"\n",(0,s.jsx)(n.em,{children:"Access to the world"}),": ",(0,s.jsx)(n.code,{children:"100 MB/sec (shared)"}),"\n",(0,s.jsx)(n.em,{children:"RAM"}),": ",(0,s.jsx)(n.code,{children:"2GB"}),"\n",(0,s.jsx)(n.em,{children:"CPU"}),": ",(0,s.jsx)(n.code,{children:"2 vCPUs"}),"\n",(0,s.jsx)(n.em,{children:"Number of IPv4 address"}),": ",(0,s.jsx)(n.code,{children:"1"})]}),"\n",(0,s.jsxs)(n.p,{children:["When buying a dedicated server, I was also given a third-level domain: vps1724252356.tech0.ru in the future, this project will move to the domain ",(0,s.jsx)(n.a,{href:"https://fullstack.nestjs-mod.com",children:"https://fullstack.nestjs-mod.com"})," ."]}),"\n",(0,s.jsxs)(n.h3,{id:"2-after-purchase-you-need-to-set-a-password-if-it-has-not-been-set-different-sites-have-their-own-interfaces-for-this-in-my-case-setting-the-password-is-on-the-page-httpsztvsuclientareaphpactionproductdetailsid33376tabchangepw-",children:["2. After purchase, you need to set a password if it has not been set, different sites have their own interfaces for this, in my case, setting the password is on the page ",(0,s.jsx)(n.a,{href:"https://ztv.su/clientarea.php?action=productdetails&id=33376#tabChangepw",children:"https://ztv.su/clientarea.php?action=productdetails&id=33376#tabChangepw"})," ."]}),"\n",(0,s.jsx)(n.p,{children:'We copy our local public SSH to a remote server, at startup you will be prompted to enter a password, you need to enter your password and press "Enter".'}),"\n",(0,s.jsxs)(n.p,{children:["If there was no SSH key on the computer, then you need to create it using the ",(0,s.jsx)(n.code,{children:"ssh-keygen"})," command"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ssh-copy-id root@194.226.49.162\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ ssh-copy-id root@194.226.49.162\n/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: \"/home/user/.ssh/id_rsa.pub\"\nThe authenticity of host '194.226.49.162 (194.226.49.162)' can't be established.\nECDSA key fingerprint is SHA256:SOME_SYMBOLS.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\n/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\n/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\nroot@194.226.49.162's password:\n\nNumber of key(s) added: 1\n\nNow try logging into the machine, with:   \"ssh 'root@194.226.49.162'\"\nand check to make sure that only the key(s) you wanted were added.\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-connecting-to-a-remote-server",children:"3. Connecting to a remote server"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ssh root@194.226.49.162\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ ssh root@194.226.49.162\nWelcome to Ubuntu 22.04.3 LTS (GNU/Linux 5.15.0-91-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Wed Aug 21 18:42:37 MSK 2024\n\n  System load:  0.02734375        Processes:             103\n  Usage of /:   9.4% of 24.05GB   Users logged in:       0\n  Memory usage: 10%               IPv4 address for eth0: 194.226.49.162\n  Swap usage:   0%\n\n * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s\n   just raised the bar for easy, resilient and secure K8s cluster deployment.\n\n   https://ubuntu.com/engage/secure-kubernetes-at-the-edge\n\nExpanded Security Maintenance for Applications is not enabled.\n\n0 updates can be applied immediately.\n\nEnable ESM Apps to receive additional future security updates.\nSee https://ubuntu.com/esm or run: sudo pro status\n\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\n\nLast login: Wed Aug 21 18:41:46 2024 from X.X.X.X\nroot@vps1724252356:~#\n"})}),"\n",(0,s.jsx)(n.h3,{id:"4-installing-all-necessary-packages-on-a-dedicated-server",children:"4. Installing all necessary packages on a dedicated server"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'sudo snap install curl\n\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsh get-docker.sh\nsudo groupadd docker\nsudo usermod -aG docker $USER\n\nsudo apt install git -y\n\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash\nexport NVM_DIR="$HOME/.nvm" && . "$NVM_DIR/nvm.sh" --no-use\nnvm install v20\nnvm use v20\n\nnpm install --global yarn\n\nsudo apt install default-jre -y\n\nsudo apt install -y unzip\n\necho fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\n\nsudo reboot\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'root@vps1724252356:~# sudo snap install curl\ncurl 8.1.2 from Wouter van Bommel (woutervb) installed\n\nroot@vps1724252356:~# curl -fsSL https://get.docker.com -o get-docker.sh\nsh get-docker.sh\nsudo groupadd docker\nsudo usermod -aG docker $USER\n# Executing docker install script, commit: 0d6f72e671ba87f7aa4c6991646a1a5b9f9dae84\n+ sh -c apt-get update -qq >/dev/null\n+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq ca-certificates curl >/dev/null\n+ sh -c install -m 0755 -d /etc/apt/keyrings\n+ sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" -o /etc/apt/keyrings/docker.asc\n+ sh -c chmod a+r /etc/apt/keyrings/docker.asc\n+ sh -c echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu jammy stable" > /etc/apt/sources.list.d/docker.list\n+ sh -c apt-get update -qq >/dev/null\n+ sh -c DEBIAN_FRONTEND=noninteractive apt-get install -y -qq docker-ce docker-ce-cli containerd.io docker-compose-plugin docker-ce-rootless-extras docker-buildx-plugin >/dev/null\n+ sh -c docker version\nClient: Docker Engine - Community\n Version:           27.1.2\n API version:       1.46\n Go version:        go1.21.13\n Git commit:        d01f264\n Built:             Mon Aug 12 11:50:12 2024\n OS/Arch:           linux/amd64\n Context:           default\n\nServer: Docker Engine - Community\n Engine:\n  Version:          27.1.2\n  API version:      1.46 (minimum version 1.24)\n  Go version:       go1.21.13\n  Git commit:       f9522e5\n  Built:            Mon Aug 12 11:50:12 2024\n  OS/Arch:          linux/amd64\n  Experimental:     false\n containerd:\n  Version:          1.7.20\n  GitCommit:        8fc6bcff51318944179630522a095cc9dbf9f353\n runc:\n  Version:          1.1.13\n  GitCommit:        v1.1.13-0-g58aa920\n docker-init:\n  Version:          0.19.0\n  GitCommit:        de40ad0\n\n================================================================================\n\nTo run Docker as a non-privileged user, consider setting up the\nDocker daemon in rootless mode for your user:\n\n    dockerd-rootless-setuptool.sh install\n\nVisit https://docs.docker.com/go/rootless/ to learn about rootless mode.\n\n\nTo run the Docker daemon as a fully privileged service, but granting non-root\nusers access, refer to https://docs.docker.com/go/daemon-access/\n\nWARNING: Access to the remote API on a privileged Docker daemon is equivalent\n         to root access on the host. Refer to the \'Docker daemon attack surface\'\n         documentation for details: https://docs.docker.com/go/attack-surface/\n\n================================================================================\n\ngroupadd: group \'docker\' already exists\n\nroot@vps1724252356:~# sudo apt install git -y\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nSuggested packages:\n  git-daemon-run | git-daemon-sysvinit git-doc git-email git-gui gitk gitweb git-cvs git-mediawiki git-svn\nThe following packages will be upgraded:\n  git\n1 upgraded, 0 newly installed, 0 to remove and 137 not upgraded.\nNeed to get 3165 kB of archives.\nAfter this operation, 16.4 kB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 git amd64 1:2.34.1-1ubuntu1.11 [3165 kB]\nFetched 3165 kB in 1s (2408 kB/s)\n(Reading database ... 94596 files and directories currently installed.)\nPreparing to unpack .../git_1%3a2.34.1-1ubuntu1.11_amd64.deb ...\nUnpacking git (1:2.34.1-1ubuntu1.11) over (1:2.34.1-1ubuntu1.10) ...\nSetting up git (1:2.34.1-1ubuntu1.11) ...\nScanning processes...\nScanning linux images...\n\nRunning kernel seems to be up-to-date.\n\nNo services need to be restarted.\n\nNo containers need to be restarted.\n\nNo user sessions are running outdated binaries.\n\nNo VM guests are running outdated hypervisor (qemu) binaries on this host.\n\nroot@vps1724252356:~# curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash\nexport NVM_DIR="$HOME/.nvm" && . "$NVM_DIR/nvm.sh" --no-use\nnvm install v20\nnvm use v20\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 15037  100 15037    0     0  36871      0 --:--:-- --:--:-- --:--:-- 36945\n=> Downloading nvm from git to \'/root/.nvm\'\n=> Cloning into \'/root/.nvm\'...\nremote: Enumerating objects: 376, done.\nremote: Counting objects: 100% (376/376), done.\nremote: Compressing objects: 100% (320/320), done.\nremote: Total 376 (delta 46), reused 176 (delta 29), pack-reused 0 (from 0)\nReceiving objects: 100% (376/376), 372.57 KiB | 2.13 MiB/s, done.\nResolving deltas: 100% (46/46), done.\n* (HEAD detached at FETCH_HEAD)\n  master\n=> Compressing and cleaning up git repository\n\n=> Appending nvm source string to /root/.bashrc\n=> Appending bash_completion source string to /root/.bashrc\n=> Close and reopen your terminal to start using nvm or run the following to use it now:\n\nexport NVM_DIR="$HOME/.nvm"\n[ -s "$NVM_DIR/nvm.sh" ] && \\. "$NVM_DIR/nvm.sh"  # This loads nvm\n[ -s "$NVM_DIR/bash_completion" ] && \\. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion\nDownloading and installing node v20.16.0...\nDownloading https://nodejs.org/dist/v20.16.0/node-v20.16.0-linux-x64.tar.xz...\n################################################################################################################################################################ 100.0%\nComputing checksum with sha256sum\nChecksums matched!\nNow using node v20.16.0 (npm v10.8.1)\nCreating default alias: default -> v20 (-> v20.16.0)\nNow using node v20.16.0 (npm v10.8.1)\n\nroot@vps1724252356:~# npm install --global yarn\n\nadded 1 package in 2s\nnpm notice\nnpm notice New patch version of npm available! 10.8.1 -> 10.8.2\nnpm notice Changelog: https://github.com/npm/cli/releases/tag/v10.8.2\nnpm notice To update run: npm install -g npm@10.8.2\nnpm notice\n\nroot@vps1724252356:~# sudo apt install -y unzip\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nSuggested packages:\n  zip\nThe following NEW packages will be installed:\n  unzip\n0 upgraded, 1 newly installed, 0 to remove and 137 not upgraded.\nNeed to get 175 kB of archives.\nAfter this operation, 386 kB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 unzip amd64 6.0-26ubuntu3.2 [175 kB]\nFetched 175 kB in 0s (485 kB/s)\nSelecting previously unselected package unzip.\n(Reading database ... 96234 files and directories currently installed.)\nPreparing to unpack .../unzip_6.0-26ubuntu3.2_amd64.deb ...\nUnpacking unzip (6.0-26ubuntu3.2) ...\nSetting up unzip (6.0-26ubuntu3.2) ...\nProcessing triggers for man-db (2.10.2-1) ...\nScanning processes...\nScanning linux images...\n\nRunning kernel seems to be up-to-date.\n\nNo services need to be restarted.\n\nNo containers need to be restarted.\n\nNo user sessions are running outdated binaries.\n\nNo VM guests are running outdated hypervisor (qemu) binaries on this host.\n\nroot@vps1724252356:~# sudo reboot\nConnection to 194.226.49.162 closed by remote host.\nConnection to 194.226.49.162 closed.\n'})}),"\n",(0,s.jsx)(n.h3,{id:"5-ssh-key-generation-on-a-dedicated-server",children:"5. SSH key generation on a dedicated server"}),"\n",(0,s.jsx)(n.p,{children:"This is necessary so that we can download the repository to a dedicated server"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ssh-keygen\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"root@vps1724252356:~# ssh-keygen\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/root/.ssh/id_rsa):\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /root/.ssh/id_rsa\nYour public key has been saved in /root/.ssh/id_rsa.pub\nThe key fingerprint is:\nSHA256:SOME_RANDOM_SYMBOLS root@vps1724252356\nThe key's randomart image is:\n+---[RSA 3072]----+\n|  .o*oo.         |\n+----[SHA256]-----+\n"})}),"\n",(0,s.jsx)(n.h3,{id:"6-linking-a-dedicated-servers-public-key-to-github",children:"6. Linking a dedicated server's public key to GitHub"}),"\n",(0,s.jsxs)(n.p,{children:["You need to run the command ",(0,s.jsx)(n.code,{children:"cat /root/.ssh/id_rsa.pub"})," and paste the answer into the project settings, I have them here: ",(0,s.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/settings/keys/new",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack/settings/keys/new"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"root@vps1724252356:~# cat /root/.ssh/id_rsa.pub\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# cat /root/.ssh/id_rsa.pub\nssh-rsa AAAARANDOM_SYMBOLS= root@vps1724252356\n"})}),"\n",(0,s.jsx)(n.h3,{id:"7-cloning-the-project",children:"7. Cloning the project"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone git@github.com:nestjs-mod/nestjs-mod-fullstack.git\ncd nestjs-mod-fullstack\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"root@vps1724252356:~# git clone git@github.com:nestjs-mod/nestjs-mod-fullstack.git\nCloning into 'nestjs-mod-fullstack'...\nThe authenticity of host 'github.com (140.82.121.3)' can't be established.\nED25519 key fingerprint is SHA256:+SOME_RANDOM_SYMBOLS.\nThis key is not known by any other names\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added 'github.com' (ED25519) to the list of known hosts.\nremote: Enumerating objects: 426, done.\nremote: Counting objects: 100% (426/426), done.\nremote: Compressing objects: 100% (294/294), done.\nremote: Total 426 (delta 190), reused 340 (delta 106), pack-reused 0 (from 0)\nReceiving objects: 100% (426/426), 536.69 KiB | 1.56 MiB/s, done.\nResolving deltas: 100% (190/190), done.\n\nroot@vps1724252356:~# cd nestjs-mod-fullstack\nroot@vps1724252356:~/nestjs-mod-fullstack#\n"})}),"\n",(0,s.jsx)(n.h3,{id:"8-we-install-dependencies-and-run-the-launch-and-testing-of-two-modes-pm2-production-and-docker-compose",children:"8. We install dependencies and run the launch and testing of two modes: PM2 production and Docker Compose"}),"\n",(0,s.jsx)(n.p,{children:"We run E2E tests by specifying the external global IP address of the applications."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm i\nnpx playwright install\nnpx playwright install-deps\n\nnpm run test\n\ncp example.env .env\nnpm run pm2-full:prod:start\nexport BASE_URL=http://194.226.49.162:3000 && npm run test:e2e\nnpm run pm2-full:prod:stop\n\nnpm run docker-compose-full:prod:start\nexport BASE_URL=http://194.226.49.162:8080 && npm run test:e2e\nnpm run docker-compose-full:prod:stop\n"})}),"\n",(0,s.jsx)(n.p,{children:'E2E testing in the "Docker Compose" mode failed with an error, in the next steps we will fix them on the local computer and then through a commit to the project repository, we will deliver them to a dedicated server.'}),"\n",(0,s.jsx)(n.h3,{id:"9-on-the-local-computer-we-update-and-add-new-npm-scripts",children:"9. On the local computer, we update and add new npm scripts"}),"\n",(0,s.jsx)(n.p,{children:"During local development, a separately installed docker-compose application was used to run, and a dedicated server uses compose built into Docker."}),"\n",(0,s.jsxs)(n.p,{children:["We are deleting the script for copying the ",(0,s.jsx)(n.code,{children:"copy-front-to-backend"})," statics, since now we go directly from the backend application to view the collected frontend statics."]}),"\n",(0,s.jsx)(n.p,{children:"To create databases and apply migrations, we created a separate npm script, since when trying to run two npm commands inside the container, only one was launched."}),"\n",(0,s.jsxs)(n.p,{children:["Updating the ",(0,s.jsx)(n.code,{children:"package.json"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    // ...\n    "_____docker-compose-full prod infra_____": "_____docker-compose-full prod infra_____",\n    "docker-compose-full:prod:start": "export NX_DAEMON=false && export DISABLE_SERVE_STATIC=true && npm run generate && npm run build -- -c production && npm run docker:build:server:latest && export COMPOSE_INTERACTIVE_NO_CLI=1 && docker compose -f ./.docker/docker-compose-full.yml --env-file ./.docker/docker-compose-full.env --compatibility up -d",\n    "docker-compose-full:prod:stop": "export COMPOSE_INTERACTIVE_NO_CLI=1 && docker compose -f ./.docker/docker-compose-full.yml --env-file ./.docker/docker-compose-full.env --compatibility down",\n    "docker-compose-full:prod:only-start": "export COMPOSE_INTERACTIVE_NO_CLI=1 && docker compose -f ./.docker/docker-compose-full.yml --env-file ./.docker/docker-compose-full.env --compatibility up -d",\n    "docker-compose-full:prod:fill:database": "npm run db:create && npm run flyway:migrate",\n    // ...\n    "_____docker-compose prod-infra_____": "_____docker-compose prod-infra_____",\n    "docker-compose:start-prod:server": "export COMPOSE_INTERACTIVE_NO_CLI=1 && docker compose -f ./apps/server/docker-compose-prod.yml --env-file ./apps/server/docker-compose-prod.env --compatibility up -d",\n    "docker-compose:stop-prod:server": "export COMPOSE_INTERACTIVE_NO_CLI=1 && docker compose -f ./apps/server/docker-compose-prod.yml --env-file ./apps/server/docker-compose-prod.env down"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"10-on-the-local-computer-we-update-the-parameters-of-the-container-with-migrations-in-the-docker-compose-file",children:'10. On the local computer, we update the parameters of the container with migrations in the "Docker Compose" file'}),"\n",(0,s.jsxs)(n.p,{children:["Updated file ",(0,s.jsx)(n.code,{children:".docker/docker-compose-full.yml"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"version: '3'\nnetworks:\n  nestjs-mod-fullstack-network:\n    driver: 'bridge'\nservices:\n  nestjs-mod-fullstack-postgre-sql:\n    image: 'bitnami/postgresql:15.5.0'\n    container_name: 'nestjs-mod-fullstack-postgre-sql'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    volumes:\n      - 'nestjs-mod-fullstack-postgre-sql-volume:/bitnami/postgresql'\n    healthcheck:\n      test:\n        - 'CMD-SHELL'\n        - 'pg_isready -U postgres'\n      interval: '5s'\n      timeout: '5s'\n      retries: 5\n    tty: true\n    restart: 'always'\n    environment:\n      POSTGRESQL_USERNAME: '${SERVER_POSTGRE_SQL_POSTGRESQL_USERNAME}'\n      POSTGRESQL_PASSWORD: '${SERVER_POSTGRE_SQL_POSTGRESQL_PASSWORD}'\n      POSTGRESQL_DATABASE: '${SERVER_POSTGRE_SQL_POSTGRESQL_DATABASE}'\n  nestjs-mod-fullstack-postgre-sql-migrations:\n    image: 'node:20-bullseye-slim'\n    container_name: 'nestjs-mod-fullstack-postgre-sql-migrations'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    working_dir: '/app'\n    volumes:\n      - './../:/app'\n    command: 'npm run docker-compose-full:prod:fill:database'\n    tty: true\n    environment:\n      NX_SKIP_NX_CACHE: 'true'\n      SERVER_ROOT_DATABASE_URL: '${SERVER_ROOT_DATABASE_URL}'\n      SERVER_APP_DATABASE_URL: '${SERVER_APP_DATABASE_URL}'\n    depends_on:\n      nestjs-mod-fullstack-postgre-sql:\n        condition: 'service_healthy'\n  nestjs-mod-fullstack-server:\n    image: 'nestjs-mod-fullstack-server:latest'\n    container_name: 'nestjs-mod-fullstack-server'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    healthcheck:\n      test: ['CMD-SHELL', 'npx -y wait-on --timeout= --interval=1000 --window --verbose --log http://localhost:8080/api/health']\n      interval: 30s\n      timeout: 10s\n      retries: 10\n    tty: true\n    environment:\n      SERVER_APP_DATABASE_URL: '${SERVER_APP_DATABASE_URL}'\n    restart: 'always'\n    depends_on:\n      nestjs-mod-fullstack-postgre-sql:\n        condition: service_healthy\n      nestjs-mod-fullstack-postgre-sql-migrations:\n        condition: service_completed_successfully\n  nestjs-mod-fullstack-nginx:\n    image: nginx:alpine\n    container_name: 'nestjs-mod-fullstack-nginx'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    volumes:\n      - ../.docker/nginx:/etc/nginx/conf.d\n      - ../dist/apps/client/browser:/usr/share/nginx/html\n    restart: 'always'\n    depends_on:\n      nestjs-mod-fullstack-server:\n        condition: service_healthy\n    ports:\n      - '8080:8080'\n  nestjs-mod-fullstack-https-portal:\n    image: steveltn/https-portal:1\n    container_name: 'nestjs-mod-fullstack-https-portal'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    ports:\n      - '80:80'\n      - '443:443'\n    links:\n      - nestjs-mod-fullstack-nginx\n    restart: always\n    environment:\n      STAGE: '${HTTPS_PORTAL_STAGE}'\n      FORCE_RENEW: 'true'\n      DOMAINS: '${SERVER_DOMAIN} -> http://nestjs-mod-fullstack-nginx:8080'\n    depends_on:\n      nestjs-mod-fullstack-nginx:\n        condition: service_started\n    volumes:\n      - nestjs-mod-fullstack-https-portal-volume:/var/lib/https-portal\nvolumes:\n  nestjs-mod-fullstack-postgre-sql-volume:\n    name: 'nestjs-mod-fullstack-postgre-sql-volume'\n  nestjs-mod-fullstack-https-portal-volume:\n    name: 'nestjs-mod-fullstack-https-portal-volume'\n"})}),"\n",(0,s.jsx)(n.h3,{id:"11-on-the-local-computer-we-open-access-to-the-swagger-interface-of-the-backend-in-nginx",children:"11. On the local computer, we open access to the Swagger interface of the backend in Nginx"}),"\n",(0,s.jsxs)(n.p,{children:["Updated file ",(0,s.jsx)(n.code,{children:".docker/nginx/nginx.conf"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"map $sent_http_content_type $expires {\n    \"text/html\" epoch;\n    \"text/html; charset=utf-8\" epoch;\n    default off;\n}\n\nmap $http_upgrade $connection_upgrade {\n    default upgrade;\n    '' close;\n}\n\nserver {\n    listen 8080;\n    server_name localhost;\n\n    gzip on;\n    gzip_proxied any;\n    gzip_types text/plain application/xml text/css application/javascript application/json;\n    gzip_min_length 1000;\n    gzip_vary on;\n    gzip_disable \"MSIE [1-6]\\.(?!.*SV1)\";\n\n    client_max_body_size 50m;\n    proxy_connect_timeout 5m;\n    proxy_send_timeout 5m;\n    proxy_read_timeout 5m;\n    send_timeout 5m;\n\n    proxy_max_temp_file_size 0;\n\n    root /usr/share/nginx/html;\n    index index.html;\n\n\n    location /api {\n        proxy_pass http://nestjs-mod-fullstack-server:8080;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection $connection_upgrade;\n        proxy_set_header Host $host;\n        proxy_set_header Origin $http_origin;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n        # kill cache\n        add_header Last-Modified $date_gmt;\n        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';\n        if_modified_since off;\n        expires off;\n        etag off;\n    }\n\n    location /swagger {\n        proxy_pass http://nestjs-mod-fullstack-server:8080;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection $connection_upgrade;\n        proxy_set_header Host $host;\n        proxy_set_header Origin $http_origin;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n        # kill cache\n        add_header Last-Modified $date_gmt;\n        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';\n        if_modified_since off;\n        expires off;\n        etag off;\n    }\n\n    location / {\n        expires $expires;\n        proxy_redirect off;\n        proxy_set_header Host $host;\n        proxy_set_header Origin $http_origin;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_read_timeout 1m;\n        proxy_connect_timeout 1m;\n        proxy_intercept_errors on;\n        error_page 404 =200 /index.html;\n        root /usr/share/nginx/html;\n    }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"12-on-the-local-computer-we-add-the-ability-to-disable-the-nestjs-module-for-static-output",children:"12. On the local computer, we add the ability to disable the NestJS module for static output"}),"\n",(0,s.jsx)(n.p,{children:'Since in the "Docker Compose" mode we distribute statics via Nginx, we do not need to build a backend with built-in statics and therefore do not need additional handlers to support static output.'}),"\n",(0,s.jsxs)(n.p,{children:["Updated file ",(0,s.jsx)(n.code,{children:"apps/server/src/app/app.module.ts"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { createNestModule, NestModuleCategory } from '@nestjs-mod/common';\n\nimport { PrismaModule } from '@nestjs-mod/prisma';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\nexport const { AppModule } = createNestModule({\n  moduleName: 'AppModule',\n  moduleCategory: NestModuleCategory.feature,\n  imports: [\n    PrismaModule.forFeature({ featureModuleName: 'app' }),\n    ...(process.env.DISABLE_SERVE_STATIC\n      ? []\n      : [\n          ServeStaticModule.forRoot({\n            rootPath: join(__dirname, 'assets', 'client'),\n          }),\n        ]),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"13-on-the-local-computer-we-run-the-launch-and-testing-of-two-modes-again-pm2-production-and-docker-compose",children:"13. On the local computer, we run the launch and testing of two modes again: PM2 production and Docker Compose"}),"\n",(0,s.jsx)(n.p,{children:"We run E2E tests by specifying the external global IP address of the applications."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm i\nnpx playwright install\nnpx playwright install-deps\n\nnpm run test\n\ncp example.env .env\nnpm run pm2-full:prod:start\nexport BASE_URL=http://194.226.49.162:3000 && npm run test:e2e\nnpm run pm2-full:prod:stop\n\nnpm run docker-compose-full:prod:start\nexport BASE_URL=http://194.226.49.162:8080 && npm run test:e2e\nnpm run docker-compose-full:prod:stop\n"})}),"\n",(0,s.jsx)(n.p,{children:"The tests were passed successfully"}),"\n",(0,s.jsxs)(n.h3,{id:"14-on-the-local-computer-add-an-additional-container-with-https-portal-to-docker-compose-fullyml-for-proxying-http-to-https-and-adding-the-restart-always-option-to-all-except-migrations-containers",children:["14. On the local computer, add an additional container with ",(0,s.jsx)(n.code,{children:"https-portal"})," to ",(0,s.jsx)(n.code,{children:"docker-compose-full.yml"})," for proxying ",(0,s.jsx)(n.code,{children:"http"})," to ",(0,s.jsx)(n.code,{children:"https"})," and adding the ",(0,s.jsx)(n.code,{children:"restart: 'always'"})," option to all (except migrations) containers"]}),"\n",(0,s.jsxs)(n.p,{children:["Updated file ",(0,s.jsx)(n.code,{children:".docker/docker-compose-full.yml"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"version: '3'\nnetworks:\n  nestjs-mod-fullstack-network:\n    driver: 'bridge'\nservices:\n  nestjs-mod-fullstack-postgre-sql:\n    image: 'bitnami/postgresql:15.5.0'\n    container_name: 'nestjs-mod-fullstack-postgre-sql'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    volumes:\n      - 'nestjs-mod-fullstack-postgre-sql-volume:/bitnami/postgresql'\n    healthcheck:\n      test:\n        - 'CMD-SHELL'\n        - 'pg_isready -U postgres'\n      interval: '5s'\n      timeout: '5s'\n      retries: 5\n    tty: true\n    restart: 'always'\n    environment:\n      POSTGRESQL_USERNAME: '${SERVER_POSTGRE_SQL_POSTGRESQL_USERNAME}'\n      POSTGRESQL_PASSWORD: '${SERVER_POSTGRE_SQL_POSTGRESQL_PASSWORD}'\n      POSTGRESQL_DATABASE: '${SERVER_POSTGRE_SQL_POSTGRESQL_DATABASE}'\n  nestjs-mod-fullstack-postgre-sql-migrations:\n    image: 'node:20-bullseye-slim'\n    container_name: 'nestjs-mod-fullstack-postgre-sql-migrations'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    working_dir: '/app'\n    volumes:\n      - './../:/app'\n    command: 'npm run docker-compose-full:prod:fill:database'\n    tty: true\n    environment:\n      NX_SKIP_NX_CACHE: 'true'\n      SERVER_ROOT_DATABASE_URL: '${SERVER_ROOT_DATABASE_URL}'\n      SERVER_APP_DATABASE_URL: '${SERVER_APP_DATABASE_URL}'\n    depends_on:\n      nestjs-mod-fullstack-postgre-sql:\n        condition: 'service_healthy'\n  nestjs-mod-fullstack-server:\n    image: 'nestjs-mod-fullstack-server:latest'\n    container_name: 'nestjs-mod-fullstack-server'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    healthcheck:\n      test: ['CMD-SHELL', 'npx -y wait-on --timeout= --interval=1000 --window --verbose --log http://localhost:8080/api/health']\n      interval: 30s\n      timeout: 10s\n      retries: 10\n    tty: true\n    environment:\n      SERVER_APP_DATABASE_URL: '${SERVER_APP_DATABASE_URL}'\n    restart: 'always'\n    depends_on:\n      nestjs-mod-fullstack-postgre-sql:\n        condition: service_healthy\n      nestjs-mod-fullstack-postgre-sql-migrations:\n        condition: service_completed_successfully\n  nestjs-mod-fullstack-nginx:\n    image: nginx:alpine\n    container_name: 'nestjs-mod-fullstack-nginx'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    volumes:\n      - ../.docker/nginx:/etc/nginx/conf.d\n      - ../dist/apps/client/browser:/usr/share/nginx/html\n    restart: 'always'\n    depends_on:\n      nestjs-mod-fullstack-server:\n        condition: service_healthy\n    ports:\n      - '8080:8080'\n  nestjs-mod-fullstack-https-portal:\n    image: steveltn/https-portal:1\n    container_name: 'nestjs-mod-fullstack-https-portal'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    ports:\n      - '80:80'\n      - '443:443'\n    links:\n      - nestjs-mod-fullstack-nginx\n    restart: always\n    environment:\n      STAGE: '${HTTPS_PORTAL_STAGE}'\n      FORCE_RENEW: 'true'\n      DOMAINS: '${SERVER_DOMAIN} -> http://nestjs-mod-fullstack-nginx:8080'\n    depends_on:\n      nestjs-mod-fullstack-nginx:\n        condition: service_started\n    volumes:\n      - nestjs-mod-fullstack-https-portal-volume:/var/lib/https-portal\nvolumes:\n  nestjs-mod-fullstack-postgre-sql-volume:\n    name: 'nestjs-mod-fullstack-postgre-sql-volume'\n  nestjs-mod-fullstack-https-portal-volume:\n    name: 'nestjs-mod-fullstack-https-portal-volume'\n"})}),"\n",(0,s.jsx)(n.h3,{id:"15-on-the-local-computer-we-add-a-new-environment-variable-with-our-domain-vps1724252356tech0ru",children:"15. On the local computer, we add a new environment variable with our domain vps1724252356.tech0.ru"}),"\n",(0,s.jsxs)(n.p,{children:["Updated file ",(0,s.jsx)(n.code,{children:".docker/docker-compose-full.env"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"SERVER_ROOT_DATABASE_URL=postgres://postgres:postgres_password@nestjs-mod-fullstack-postgre-sql:5432/postgres?schema=public\nSERVER_APP_DATABASE_URL=postgres://app:app_password@nestjs-mod-fullstack-postgre-sql:5432/app?schema=public\nSERVER_POSTGRE_SQL_POSTGRESQL_USERNAME=postgres\nSERVER_POSTGRE_SQL_POSTGRESQL_PASSWORD=postgres_password\nSERVER_POSTGRE_SQL_POSTGRESQL_DATABASE=postgres\nSERVER_DOMAIN=vps1724252356.tech0.ru\nHTTPS_PORTAL_STAGE=production # local|production\n"})}),"\n",(0,s.jsx)(n.h3,{id:"16-on-the-local-computer-commit-the-changes-to-the-repository",children:"16. On the local computer, commit the changes to the repository"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'git commit -m "fix: some updates"\ngit push\n'})}),"\n",(0,s.jsx)(n.h3,{id:"17-we-connect-to-the-remote-server-get-new-changes-and-stop-the-pm2-and-docker-compose-modes",children:'17. We connect to the remote server, get new changes and stop the "PM2" and "Docker Compose" modes'}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ssh root@194.226.49.162\ncd nestjs-mod-fullstack\nnpm run pm2-full:prod:stop\nnpm run docker-compose-full:prod:stop\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"18-restart-all-applications-in-the-docker-compose-mode-and-run-e2e-tests-specify-the-server-address-httpsvps1724252356tech0ru",children:['18. Restart all applications in the "Docker Compose" mode and run E2E tests, specify the server address ',(0,s.jsx)(n.a,{href:"https://vps1724252356.tech0.ru",children:"https://vps1724252356.tech0.ru"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run docker-compose-full:prod:start\nexport BASE_URL=https://vps1724252356.tech0.ru && npm run test:e2e\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"root@vps1724252356:~/nestjs-mod-fullstack# npm run docker-compose-full:prod:start\n\n> @nestjs-mod-fullstack/source@0.0.0 docker-compose-full:prod:start\n> export NX_DAEMON=false && export DISABLE_SERVE_STATIC=true && npm run generate && npm run build -- -c production && npm run docker:build:server:latest && export COMPOSE_INTERACTIVE_NO_CLI=1 && docker compose -f ./.docker/docker-compose-full.yml --env-file ./.docker/docker-compose-full.env --compatibility up -d\n\n\n> @nestjs-mod-fullstack/source@0.0.0 generate\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=generate --skip-nx-cache=true && npm run make-ts-list && npm run lint:fix\n\n\n   \u2714  nx run server:generate (42s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target generate for project server (42s)\n\n\n> @nestjs-mod-fullstack/source@0.0.0 make-ts-list\n> ./node_modules/.bin/rucken make-ts-list\n\n\n> @nestjs-mod-fullstack/source@0.0.0 lint:fix\n> npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=lint --fix\n\n\n> @nestjs-mod-fullstack/source@0.0.0 tsc:lint\n> ./node_modules/.bin/tsc --noEmit -p tsconfig.base.json\n\n\n   \u2714  nx run app-angular-rest-sdk:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run client:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server-e2e:lint  [existing outputs match the cache, left as is]\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target lint for 4 projects (357ms)\n\n      With additional flags:\n        --fix=true\n\nNx read the output from the cache instead of running the command for 4 out of 4 tasks.\n\n\n> @nestjs-mod-fullstack/source@0.0.0 build\n> npm run generate && npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=build --skip-nx-cache=true -c production\n\n\n> @nestjs-mod-fullstack/source@0.0.0 generate\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=generate --skip-nx-cache=true && npm run make-ts-list && npm run lint:fix\n\n\n   \u2714  nx run server:generate (38s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target generate for project server (38s)\n\n\n> @nestjs-mod-fullstack/source@0.0.0 make-ts-list\n> ./node_modules/.bin/rucken make-ts-list\n\n\n> @nestjs-mod-fullstack/source@0.0.0 lint:fix\n> npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=lint --fix\n\n\n> @nestjs-mod-fullstack/source@0.0.0 tsc:lint\n> ./node_modules/.bin/tsc --noEmit -p tsconfig.base.json\n\n\n   \u2714  nx run app-angular-rest-sdk:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run client:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server-e2e:lint  [existing outputs match the cache, left as is]\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target lint for 4 projects (350ms)\n\n      With additional flags:\n        --fix=true\n\nNx read the output from the cache instead of running the command for 4 out of 4 tasks.\n\n\n> @nestjs-mod-fullstack/source@0.0.0 tsc:lint\n> ./node_modules/.bin/tsc --noEmit -p tsconfig.base.json\n\n\n   \u2714  nx run app-rest-sdk:build (8s)\n   \u2714  nx run app-angular-rest-sdk:build:production (9s)\n   \u2714  nx run server:build:production (13s)\n   \u2714  nx run client:build:production (19s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target build for 4 projects (28s)\n\n\n> @nestjs-mod-fullstack/source@0.0.0 docker:build:server:latest\n> docker build -t nestjs-mod-fullstack-server:latest -f ./.docker/server.Dockerfile . --progress=plain\n\n#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from server.Dockerfile\n#1 transferring dockerfile: 1.65kB done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/node:20.16.0-alpine\n#2 DONE 1.2s\n\n#3 [internal] load .dockerignore\n#3 transferring context: 79B 0.0s done\n#3 DONE 0.0s\n\n#4 [builder 1/7] FROM docker.io/library/node:20.16.0-alpine@sha256:eb8101caae9ac02229bd64c024919fe3d4504ff7f329da79ca60a04db08cef52\n#4 DONE 0.0s\n\n#5 [internal] load build context\n#5 transferring context: 1.20MB 0.2s done\n#5 DONE 0.2s\n\n#6 [builder 2/7] WORKDIR /usr/src/app\n#6 CACHED\n\n#7 [builder 3/7] COPY . .\n#7 DONE 0.2s\n\n#8 [builder 4/7] RUN apk add dumb-init\n#8 0.630 fetch https://dl-cdn.alpinelinux.org/alpine/v3.20/main/x86_64/APKINDEX.tar.gz\n#8 1.055 fetch https://dl-cdn.alpinelinux.org/alpine/v3.20/community/x86_64/APKINDEX.tar.gz\n#8 1.791 (1/1) Installing dumb-init (1.2.5-r3)\n#8 1.820 Executing busybox-1.36.1-r29.trigger\n#8 1.836 OK: 11 MiB in 17 packages\n#8 DONE 2.0s\n\n#9 [builder 5/7] RUN apk add jq\n#9 1.136 (1/2) Installing oniguruma (6.9.9-r0)\n#9 1.302 (2/2) Installing jq (1.7.1-r0)\n#9 1.361 Executing busybox-1.36.1-r29.trigger\n#9 1.379 OK: 12 MiB in 19 packages\n#9 DONE 1.7s\n\n#10 [builder 6/7] RUN echo $(cat package.json | jq 'del(.devDependencies)') > package.json\n#10 DONE 0.5s\n\n#11 [builder 7/7] RUN rm -rf nx.json package-lock.json .dockerignore &&     cp .docker/nx.json nx.json &&     cp .docker/.dockerignore .dockerignore &&     npm install &&     npm install --save-dev nx@19.5.3 prisma@5.18.0 prisma-class-generator@0.2.11 &&     echo '' > .env &&     npm run prisma:generate &&     rm -rf /usr/src/app/node_modules/@nx &&     rm -rf /usr/src/app/node_modules/@prisma-class-generator &&     rm -rf /usr/src/app/node_modules/@angular  &&     rm -rf /usr/src/app/node_modules/@swc  &&     rm -rf /usr/src/app/node_modules/@babel  &&     rm -rf /usr/src/app/node_modules/@angular-devkit &&     rm -rf /usr/src/app/node_modules/@ngneat &&     rm -rf /usr/src/app/node_modules/@types &&     rm -rf /usr/src/app/node_modules/@ng-packagr\n#11 112.9\n#11 112.9 added 408 packages, and audited 409 packages in 2m\n#11 112.9\n#11 112.9 53 packages are looking for funding\n#11 112.9   run `npm fund` for details\n#11 112.9\n#11 112.9 5 moderate severity vulnerabilities\n#11 112.9\n#11 112.9 To address all issues (including breaking changes), run:\n#11 112.9   npm audit fix --force\n#11 112.9\n#11 112.9 Run `npm audit` for details.\n#11 112.9 npm notice\n#11 112.9 npm notice New patch version of npm available! 10.8.1 -> 10.8.2\n#11 112.9 npm notice Changelog: https://github.com/npm/cli/releases/tag/v10.8.2\n#11 112.9 npm notice To update run: npm install -g npm@10.8.2\n#11 112.9 npm notice\n#11 166.3\n#11 166.3 added 106 packages, and audited 515 packages in 53s\n#11 166.3\n#11 166.3 66 packages are looking for funding\n#11 166.3   run `npm fund` for details\n#11 166.4\n#11 166.4 5 moderate severity vulnerabilities\n#11 166.4\n#11 166.4 To address all issues (including breaking changes), run:\n#11 166.4   npm audit fix --force\n#11 166.4\n#11 166.4 Run `npm audit` for details.\n#11 166.7\n#11 166.7 > @nestjs-mod-fullstack/source@0.0.0 prisma:generate\n#11 166.7 > ./node_modules/.bin/nx run-many -t=prisma-generate\n#11 166.7\n#11 169.4\n#11 169.4  NX   Running target prisma-generate for project server:\n#11 169.4\n#11 169.4 - server\n#11 169.4\n#11 169.4\n#11 177.6\n#11 177.6 > nx run server:prisma-generate\n#11 177.6\n#11 177.6 > ./node_modules/.bin/prisma generate --schema=./apps/server/src/prisma/app-schema.prisma\n#11 177.6\n#11 177.6 Environment variables loaded from .env\n#11 177.6 Prisma schema loaded from apps/server/src/prisma/app-schema.prisma\n#11 177.6 prisma:info [Prisma Class Generator]:Handler Registered.\n#11 177.6 prisma:info [Prisma Class Generator]:Generate /usr/src/app/apps/server/src/app/generated/rest/dto/app_demo.ts\n#11 177.6 prisma:info [Prisma Class Generator]:Generate /usr/src/app/apps/server/src/app/generated/rest/dto/migrations.ts\n#11 177.6\n#11 177.6 \u2714 Generated Prisma Client (v5.18.0, engine=binary) to ./node_modules/@prisma/app-client in 308ms\n#11 177.6\n#11 177.6 \u2714 Generated Prisma Class Generator to ./apps/server/src/app/generated/rest/dto in 408ms\n#11 177.6\n#11 177.6 Start by importing your Prisma Client (See: http://pris.ly/d/importing-client)\n#11 177.6\n#11 177.6 Tip: Easily identify and fix slow SQL queries in your app. Optimize helps you enhance your visibility: https://pris.ly/--optimize\n#11 177.6\n#11 177.6\n#11 177.6\n#11 177.6\n#11 177.6  NX   Successfully ran target prisma-generate for project server\n#11 177.6\n#11 177.6\n#11 DONE 178.9s\n\n#12 [stage-1 3/4] COPY --from=builder /usr/src/app/ /usr/src/app/\n#12 DONE 8.3s\n\n#13 [stage-1 4/4] COPY --from=builder /usr/bin/dumb-init /usr/bin/dumb-init\n#13 DONE 0.1s\n\n#14 exporting to image\n#14 exporting layers\n#14 exporting layers 8.7s done\n#14 writing image sha256:049c6f471ddfe18b811e6aac12cccd777dfab0bb1d599b00c91beb51d1ff188f done\n#14 naming to docker.io/library/nestjs-mod-fullstack-server:latest done\n#14 DONE 8.7s\nWARN[0000] /root/nestjs-mod-fullstack/.docker/docker-compose-full.yml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion\n[+] Running 5/5\n \u2714 Container nestjs-mod-fullstack-postgre-sql             Healthy                                                                                                13.9s\n \u2714 Container nestjs-mod-fullstack-postgre-sql-migrations  Exited                                                                                                 30.9s\n \u2714 Container nestjs-mod-fullstack-server                  Healthy                                                                                                65.1s\n \u2714 Container nestjs-mod-fullstack-nginx                   Started                                                                                                65.1s\n \u2714 Container nestjs-mod-fullstack-https-portal            Started                                                                                                65.2s\n\nroot@vps1724252356:~/nestjs-mod-fullstack# export BASE_URL=https://vps1724252356.tech0.ru && npm run test:e2e\n\n> @nestjs-mod-fullstack/source@0.0.0 test:e2e\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=e2e --skip-nx-cache=true --output-style=stream-without-prefixes\n\n\n\n> nx run client-e2e:e2e\n\n> playwright test\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n   \u2192  Executing 1/3 remaining tasks...\n\n\n   \u2714  nx run client-e2e:e2e (25s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n   \u2714  nx run server:build:production (14s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n   \u2192  Executing 1/1 remaining tasks...\n\n   \u2839  nx run server-e2e:e2e\n\n   \u2714  2/2 succeeded [0 read from cache]\n\n PASS   server-e2e  apps/server-e2e/src/server/server.spec.ts\n  GET /api\n    \u2713 should return a message (160 ms)\n   \u2714  nx run server-e2e:e2e (10s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target e2e for 2 projects and 1 task they depend on (50s)\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"19-restart-all-applications-in-pm2-production-mode-and-run-e2e-tests-specify-the-server-address-httpvps1724252356tech0ru3000",children:["19. Restart all applications in PM2 production mode and run E2E tests, specify the server address ",(0,s.jsx)(n.a,{href:"http://vps1724252356.tech0.ru:3000",children:"http://vps1724252356.tech0.ru:3000"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run pm2-full:prod:start\nexport BASE_URL=http://vps1724252356.tech0.ru:3000 && npm run test:e2e\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"root@vps1724252356:~/nestjs-mod-fullstack# npm run pm2-full:prod:start\n\n> @nestjs-mod-fullstack/source@0.0.0 pm2-full:prod:start\n> npm run generate && npm run build -- -c production && npm run docker-compose:start-prod:server && npm run db:create && npm run flyway:migrate && npm run pm2:start\n\n\n> @nestjs-mod-fullstack/source@0.0.0 generate\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=generate --skip-nx-cache=true && npm run make-ts-list && npm run lint:fix\n\n\n   \u2714  nx run server:generate (1m)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target generate for project server (1m)\n\n\n> @nestjs-mod-fullstack/source@0.0.0 make-ts-list\n> ./node_modules/.bin/rucken make-ts-list\n\n\n> @nestjs-mod-fullstack/source@0.0.0 lint:fix\n> npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=lint --fix\n\n\n> @nestjs-mod-fullstack/source@0.0.0 tsc:lint\n> ./node_modules/.bin/tsc --noEmit -p tsconfig.base.json\n\n\n   \u2714  nx run app-angular-rest-sdk:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run client:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server-e2e:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server:lint (4s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target lint for 4 projects (5s)\n\n      With additional flags:\n        --fix=true\n\nNx read the output from the cache instead of running the command for 3 out of 4 tasks.\n\n\n> @nestjs-mod-fullstack/source@0.0.0 build\n> npm run generate && npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=build --skip-nx-cache=true -c production\n\n\n> @nestjs-mod-fullstack/source@0.0.0 generate\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=generate --skip-nx-cache=true && npm run make-ts-list && npm run lint:fix\n\n\n   \u2714  nx run server:generate (43s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target generate for project server (43s)\n\n\n> @nestjs-mod-fullstack/source@0.0.0 make-ts-list\n> ./node_modules/.bin/rucken make-ts-list\n\n\n> @nestjs-mod-fullstack/source@0.0.0 lint:fix\n> npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=lint --fix\n\n\n> @nestjs-mod-fullstack/source@0.0.0 tsc:lint\n> ./node_modules/.bin/tsc --noEmit -p tsconfig.base.json\n\n\n   \u2714  nx run app-angular-rest-sdk:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run client:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server-e2e:lint  [existing outputs match the cache, left as is]\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target lint for 4 projects (373ms)\n\n      With additional flags:\n        --fix=true\n\nNx read the output from the cache instead of running the command for 4 out of 4 tasks.\n\n\n> @nestjs-mod-fullstack/source@0.0.0 tsc:lint\n> ./node_modules/.bin/tsc --noEmit -p tsconfig.base.json\n\n\n   \u2714  nx run app-rest-sdk:build (1m)\n   \u2714  nx run app-angular-rest-sdk:build:production (1m)\n   \u2714  nx run server:build:production (1m)\n   \u2714  nx run client:build:production (23s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target build for 4 projects (2m)\n\n\n> @nestjs-mod-fullstack/source@0.0.0 docker-compose:start-prod:server\n> export COMPOSE_INTERACTIVE_NO_CLI=1 && docker compose -f ./apps/server/docker-compose-prod.yml --env-file ./apps/server/docker-compose-prod.env --compatibility up -d\n\nWARN[0000] /root/nestjs-mod-fullstack/apps/server/docker-compose-prod.yml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion\n[+] Running 1/1\n \u2714 Container server-postgre-sql  Started                                                                                                                          0.7s\n\n> @nestjs-mod-fullstack/source@0.0.0 db:create\n> ./node_modules/.bin/nx run-many -t=db-create\n\n\n   \u2714  nx run server:db-create (3s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target db-create for project server (4s)\n\n\n> @nestjs-mod-fullstack/source@0.0.0 flyway:migrate\n> ./node_modules/.bin/nx run-many -t=flyway-migrate\n\n\n   \u2714  nx run server:flyway-migrate (5s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target flyway-migrate for project server (5s)\n\n\n> @nestjs-mod-fullstack/source@0.0.0 pm2:start\n> ./node_modules/.bin/pm2 start ./ecosystem-prod.config.json && npm run wait-on -- --log http://localhost:3000/api/health --log http://localhost:3000\n\n[PM2] Spawning PM2 daemon with pm2_home=/root/.pm2\n[PM2] PM2 Successfully daemonized\n[PM2][WARN] Applications nestjs-mod-fullstack not running, starting...\n[PM2] App [nestjs-mod-fullstack] launched (1 instances)\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 id \u2502 name                    \u2502 namespace   \u2502 version \u2502 mode    \u2502 pid      \u2502 uptime \u2502 \u21ba    \u2502 status    \u2502 cpu      \u2502 mem      \u2502 user     \u2502 watching \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 0  \u2502 nestjs-mod-fullstack    \u2502 default     \u2502 N/A     \u2502 fork    \u2502 505154   \u2502 0s     \u2502 0    \u2502 online    \u2502 0%       \u2502 28.8mb   \u2502 root     \u2502 disabled \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n> @nestjs-mod-fullstack/source@0.0.0 wait-on\n> ./node_modules/.bin/wait-on --timeout=240000 --interval=1000 --window --verbose --log http://localhost:3000/api/health --log http://localhost:3000\n\nwaiting for 2 resources: http://localhost:3000/api/health, http://localhost:3000\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\nmaking HTTP(S) head request to  url:http://localhost:3000 ...\n  HTTP(S) error for http://localhost:3000/api/health AggregateError\n  HTTP(S) error for http://localhost:3000 AggregateError\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\nmaking HTTP(S) head request to  url:http://localhost:3000 ...\n  HTTP(S) error for http://localhost:3000/api/health AggregateError\n  HTTP(S) error for http://localhost:3000 AggregateError\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\n  HTTP(S) error for http://localhost:3000/api/health AggregateError\nmaking HTTP(S) head request to  url:http://localhost:3000 ...\n  HTTP(S) error for http://localhost:3000 AggregateError\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\nmaking HTTP(S) head request to  url:http://localhost:3000 ...\n  HTTP(S) result for http://localhost:3000/api/health: {\n  status: 200,\n  statusText: 'OK',\n  headers: Object [AxiosHeaders] {\n    'x-powered-by': 'Express',\n    vary: 'Origin',\n    'access-control-allow-credentials': 'true',\n    'x-request-id': 'bd416d0d-2e53-4f4a-8402-58e367c833c5',\n    'cache-control': 'no-cache, no-store, must-revalidate',\n    'content-type': 'application/json; charset=utf-8',\n    'content-length': '107',\n    etag: 'W/\"6b-ouXVoNOXyOxnMfI7caewF8/p97A\"',\n    date: 'Thu, 22 Aug 2024 18:58:09 GMT',\n    connection: 'keep-alive',\n    'keep-alive': 'timeout=5'\n  },\n  data: ''\n}\nwaiting for 1 resources: http://localhost:3000\n  HTTP(S) result for http://localhost:3000: {\n  status: 200,\n  statusText: 'OK',\n  headers: Object [AxiosHeaders] {\n    'x-powered-by': 'Express',\n    vary: 'Origin',\n    'access-control-allow-credentials': 'true',\n    'accept-ranges': 'bytes',\n    'cache-control': 'public, max-age=0',\n    'last-modified': 'Thu, 22 Aug 2024 18:57:47 GMT',\n    etag: 'W/\"8e8-1917b73ba3d\"',\n    'content-type': 'text/html; charset=UTF-8',\n    'content-length': '2280',\n    date: 'Thu, 22 Aug 2024 18:58:09 GMT',\n    connection: 'keep-alive',\n    'keep-alive': 'timeout=5'\n  },\n  data: ''\n}\nwait-on(505210) complete\n\nroot@vps1724252356:~/nestjs-mod-fullstack# export BASE_URL=http://vps1724252356.tech0.ru:3000 && npm run test:e2e\n\n> @nestjs-mod-fullstack/source@0.0.0 test:e2e\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=e2e --skip-nx-cache=true --output-style=stream-without-prefixes\n\n\n\n> nx run client-e2e:e2e\n\n> playwright test\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n   \u2192  Executing 1/3 remaining tasks...\n\n\n   \u2714  nx run client-e2e:e2e (39s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n   \u2714  nx run server:build:production (16s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n   \u2192  Executing 1/1 remaining tasks...\n\n   \u2834  nx run server-e2e:e2e\n\n   \u2714  2/2 succeeded [0 read from cache]\n\n PASS   server-e2e  apps/server-e2e/src/server/server.spec.ts\n  GET /api\n    \u2713 should return a message (74 ms)\n   \u2714  nx run server-e2e:e2e (11s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target e2e for 2 projects and 1 task they depend on (1m)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"20-setting-up-the-automatic-restart-of-pm2-production-mode-when-restarting-the-dedicated-server",children:"20. Setting up the automatic restart of PM2 production mode when restarting the dedicated server"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"./node_modules/.bin/pm2 startup\n./node_modules/.bin/pm2 save\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"root@vps1724252356:~/nestjs-mod-fullstack# ./node_modules/.bin/pm2 startup\n[PM2] Init System found: systemd\nPlatform systemd\nTemplate\n[Unit]\nDescription=PM2 process manager\nDocumentation=https://pm2.keymetrics.io/\nAfter=network.target\n\n[Service]\nType=forking\nUser=root\nLimitNOFILE=infinity\nLimitNPROC=infinity\nLimitCORE=infinity\nEnvironment=PATH=/root/.vscode-server/cli/servers/Stable-fee1edb8d6d72a0ddff41e5f71a671c23ed924b9/server/bin/remote-cli:/root/.nvm/versions/node/v20.16.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin\nEnvironment=PM2_HOME=/root/.pm2\nPIDFile=/root/.pm2/pm2.pid\nRestart=on-failure\n\nExecStart=/root/nestjs-mod-fullstack/node_modules/pm2/bin/pm2 resurrect\nExecReload=/root/nestjs-mod-fullstack/node_modules/pm2/bin/pm2 reload all\nExecStop=/root/nestjs-mod-fullstack/node_modules/pm2/bin/pm2 kill\n\n[Install]\nWantedBy=multi-user.target\n\nTarget path\n/etc/systemd/system/pm2-root.service\nCommand list\n[ 'systemctl enable pm2-root' ]\n[PM2] Writing init configuration in /etc/systemd/system/pm2-root.service\n[PM2] Making script booting at startup...\n[PM2] [-] Executing: systemctl enable pm2-root...\nCreated symlink /etc/systemd/system/multi-user.target.wants/pm2-root.service \u2192 /etc/systemd/system/pm2-root.service.\n[PM2] [v] Command successfully executed.\n+---------------------------------------+\n[PM2] Freeze a process list on reboot via:\n$ pm2 save\n\n[PM2] Remove init script via:\n$ pm2 unstartup systemd\n\nroot@vps1724252356:~/nestjs-mod-fullstack# ./node_modules/.bin/pm2 save\n[PM2] Saving current process list...\n[PM2] Successfully saved in /root/.pm2/dump.pm2\n"})}),"\n",(0,s.jsx)(n.h3,{id:"21-we-reboot-and-check-through-the-e2e-test-the-operation-of-both-modes",children:"21. We reboot and check through the E2E test the operation of both modes"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo reboot\n\ncd nestjs-mod-fullstack\nexport BASE_URL=http://vps1724252356.tech0.ru:3000 && npm run test:e2e\nexport BASE_URL=https://vps1724252356.tech0.ru && npm run test:e2e\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"root@vps1724252356:~/nestjs-mod-fullstack# export BASE_URL=http://vps1724252356.tech0.ru:3000 && npm run test:e2e\n\n> @nestjs-mod-fullstack/source@0.0.0 test:e2e\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=e2e --skip-nx-cache=true --output-style=stream-without-prefixes\n\n\n\n> nx run client-e2e:e2e\n\n> playwright test\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n   \u2192  Executing 1/3 remaining tasks...\n\n\n   \u2714  nx run client-e2e:e2e (29s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n   \u2714  nx run server:build:production (15s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n   \u2192  Executing 1/1 remaining tasks...\n\n   \u280f  nx run server-e2e:e2e\n\n   \u2714  2/2 succeeded [0 read from cache]\n\n PASS   server-e2e  apps/server-e2e/src/server/server.spec.ts\n  GET /api\n    \u2713 should return a message (73 ms)\n   \u2714  nx run server-e2e:e2e (12s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target e2e for 2 projects and 1 task they depend on (56s)\n"})}),"\n",(0,s.jsx)(n.p,{children:"In the next post, I will add the CI/CD config for deployment to a dedicated server using GitHub Actions..."}),"\n",(0,s.jsx)(n.h3,{id:"links",children:"Links"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://nestjs.com",children:"https://nestjs.com"})," - the official website of the framework"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://nestjs-mod.com",children:"https://nestjs-mod.com"})," - the official website of additional utilities"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack"})," - the project from the post"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/commit/b9715a203364877a4ffae6e7cb3a1dff59ede6d6",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack/commit/b9715a203364877a4ffae6e7cb3a1dff59ede6d6"})," - commit to current changes"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"#pm2 #docker #nestjsmod #fullstack\n#2024-08-22"})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var s=t(6540);const o={},r=s.createContext(o);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);