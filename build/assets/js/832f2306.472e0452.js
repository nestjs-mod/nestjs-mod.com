"use strict";(self.webpackChunknestjs_mod_com=self.webpackChunknestjs_mod_com||[]).push([[7],{6953:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var r=n(4848),t=n(8453);const o={},i="@nestjs-mod/graphql",d={id:"packages/system/graphql/README",title:"@nestjs-mod/graphql",description:"GraphQL packages, providing an easy way to use GraphQL with the NestJS-mod, integrated//docs.nestjs.com/graphql/quick-start)",source:"@site/docs/packages/system/graphql/README.md",sourceDirName:"packages/system/graphql",slug:"/packages/system/graphql/",permalink:"/docs/packages/system/graphql/",draft:!1,unlisted:!1,editUrl:"https://github.com/nestjs-mod/nestjs-mod.com/blob/master/docs/packages/system/graphql/README.md",tags:[],version:"current",frontMatter:{},sidebar:"packagesSidebar",previous:{title:"@nestjs-mod/fastify",permalink:"/docs/packages/system/fastify"},next:{title:"@nestjs-mod/microservices",permalink:"/docs/packages/system/microservices"}},a={},l=[{value:"Installation",id:"installation",level:2},{value:"Modules",id:"modules",level:2},{value:"Modules descriptions",id:"modules-descriptions",level:2},{value:"GraphqlModule",id:"graphqlmodule",level:3},{value:"Use in NestJS",id:"use-in-nestjs",level:4},{value:"Use in NestJS-mod",id:"use-in-nestjs-mod",level:4},{value:"Configuration",id:"configuration",level:4},{value:"Links",id:"links",level:2},{value:"License",id:"license",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"nestjs-modgraphql",children:"@nestjs-mod/graphql"}),"\n",(0,r.jsxs)(s.p,{children:["GraphQL packages, providing an easy way to use GraphQL with the NestJS-mod, integrated: dataloader, included support for pipes, filters and interceptors in resolver fields, works with Fastify (Wrapper for ",(0,r.jsx)(s.a,{href:"https://docs.nestjs.com/graphql/quick-start",children:"https://docs.nestjs.com/graphql/quick-start"}),")"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"https://npmjs.org/package/@nestjs-mod/graphql",children:(0,r.jsx)(s.img,{src:"https://badgen.net/npm/v/@nestjs-mod/graphql",alt:"NPM version"})})," ",(0,r.jsx)(s.a,{href:"https://npmjs.org/package/@nestjs-mod/graphql",children:(0,r.jsx)(s.img,{src:"https://badgen.net/npm/dm/@nestjs-mod/graphql",alt:"monthly downloads"})})," ",(0,r.jsx)(s.a,{href:"https://t.me/nestjs_mod",children:(0,r.jsx)(s.img,{src:"https://img.shields.io/badge/group-telegram-blue.svg?maxAge=2592000",alt:"Telegram bot"})})]}),"\n",(0,r.jsx)(s.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"npm i --save @nestjs/apollo @apollo/server @nestjs/graphql @as-integrations/fastify @nestjs-mod/graphql\n"})}),"\n",(0,r.jsx)(s.h2,{id:"modules",children:"Modules"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Link"}),(0,r.jsx)(s.th,{children:"Category"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"#graphqlmodule",children:"GraphqlModule"})}),(0,r.jsx)(s.td,{children:"system"}),(0,r.jsxs)(s.td,{children:["GraphQL packages, providing an easy way to use GraphQL with the NestJS-mod, integrated: dataloader, included support for pipes, filters and interceptors in resolver fields, works with Fastify (Wrapper for ",(0,r.jsx)(s.a,{href:"https://docs.nestjs.com/graphql/quick-start",children:"https://docs.nestjs.com/graphql/quick-start"}),")"]})]})})]}),"\n",(0,r.jsx)(s.h2,{id:"modules-descriptions",children:"Modules descriptions"}),"\n",(0,r.jsx)(s.h3,{id:"graphqlmodule",children:"GraphqlModule"}),"\n",(0,r.jsxs)(s.p,{children:["GraphQL packages, providing an easy way to use GraphQL with the NestJS-mod, integrated: dataloader, included support for pipes, filters and interceptors in resolver fields, works with Fastify (Wrapper for ",(0,r.jsx)(s.a,{href:"https://docs.nestjs.com/graphql/quick-start",children:"https://docs.nestjs.com/graphql/quick-start"}),")"]}),"\n",(0,r.jsx)(s.h4,{id:"use-in-nestjs",children:"Use in NestJS"}),"\n",(0,r.jsxs)(s.p,{children:["Example of ",(0,r.jsx)(s.code,{children:"main.ts"})]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-typescript",children:"import { GRAPHQL_SCHEMA_FILE, GraphqlModule } from '@nestjs-mod/graphql';\nimport { Module } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { join } from 'path';\nimport { AppModule } from './app/app.module';\n\nconst rootFolder = join(__dirname, '..', '..', '..');\nconst appFolder = join(rootFolder, 'apps', 'example-graphql');\n\n@Module({\n  imports: [\n    GraphqlModule.forRoot({\n      configuration: {\n        autoSchemaFile: join(appFolder, GRAPHQL_SCHEMA_FILE),\n      },\n    }),\n    AppModule.forRoot(),\n  ],\n})\nexport class RootModule {}\n\nasync function bootstrap() {\n  const app = await NestFactory.create(RootModule);\n  await app.listen(3005);\n}\n\nbootstrap();\n"})}),"\n",(0,r.jsx)(s.p,{children:"Example of dataloader"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-typescript",children:"import { GraphqlDataLoader } from '@nestjs-mod/graphql';\nimport { Injectable } from '@nestjs/common';\nimport DataLoader from 'dataloader';\nimport { UserBalanceDto } from '../resolvers/dto/user-balance.dto';\nimport { BalanceOfUserService } from './balance-of-user.service';\n@Injectable()\nexport class BalanceOfUserDataloader implements GraphqlDataLoader<number, UserBalanceDto> {\n  constructor(private readonly balanceOfUserService: BalanceOfUserService) {}\n\n  generateDataLoader(): DataLoader<number, UserBalanceDto> {\n    return new DataLoader<number, UserBalanceDto>(async (userIds) =>\n      this.balanceOfUserService.getUserBalanceByUserIds(userIds)\n    );\n  }\n}\n"})}),"\n",(0,r.jsx)(s.p,{children:"Examples of resolver fields with dataloader and without"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-typescript",children:"/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { getRequestFromExecutionContext } from '@nestjs-mod/common';\nimport { Loader } from '@nestjs-mod/graphql';\nimport { NestjsPinoAsyncLocalStorage, X_REQUEST_ID } from '@nestjs-mod/pino';\nimport { Logger } from '@nestjs/common';\nimport { Args, Parent, ResolveField, Resolver, Subscription } from '@nestjs/graphql';\nimport DataLoader from 'dataloader';\nimport { BalanceOfUserDataloader } from '../services/balance-of-user.data-loader';\nimport { BalanceOfUserService } from '../services/balance-of-user.service';\nimport { CHANGE_USER_BALANCE_EVENT, UserBalanceDto } from './dto/user-balance.dto';\nimport { UserDto } from './dto/user.dto';\n\n@Resolver(UserDto)\nexport class BalanceOfUserResolver {\n  constructor(private readonly balanceOfUserService: BalanceOfUserService) {}\n\n  @ResolveField('balance', () => UserBalanceDto)\n  async balance(\n    @Parent()\n    userDto: UserDto\n  ): Promise<UserBalanceDto> {\n    return (await this.balanceOfUserService.getUserBalanceByUserIds([userDto.id]))[0];\n  }\n\n  @ResolveField('balanceOverDataLoader', () => UserBalanceDto)\n  async balanceOverDataLoader(\n    @Parent()\n    userDto: UserDto,\n    @Loader(BalanceOfUserDataloader)\n    balanceOfUserDataloader: DataLoader<number, UserBalanceDto>\n  ) {\n    return await balanceOfUserDataloader.load(userDto.id);\n  }\n}\n"})}),"\n",(0,r.jsx)(s.p,{children:"Example of work with headers"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-typescript",children:"import { Request } from '@nestjs-mod/common';\nimport { Args, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { StatusDto } from './dto/status.dto';\nimport { CreateUserDto, UserDto } from './dto/user.dto';\n\n@Resolver()\nexport class UsersResolvers {\n  static logger = new Logger(UsersResolvers.name);\n\n  private readonly usersStorage: UserDto[] = [\n    { id: 1, username: 'admin', custom: { one: 1 } },\n    { id: 2, username: 'user', custom: { two: 2 } },\n  ];\n\n  constructor(private readonly balanceOfUserService: BalanceOfUserService) {}\n\n  @Query(() => [UserDto])\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async users(@Request() req: any): Promise<UserDto[]> {\n    if (req.headers['x-throw-error']) {\n      throw new Error('Error from query!');\n    }\n    return this.usersStorage;\n  }\n\n  @Mutation(() => StatusDto)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async createUser(@Request() req: any, @Args() userDto: CreateUserDto) {\n    if (req.headers['x-throw-error']) {\n      throw new Error('Error from mutation!');\n    }\n    this.usersStorage.push({ ...userDto, id: +userDto.id });\n    return { status: 'OK' };\n  }\n\n  @Subscription(() => UserBalanceDto, {\n    name: CHANGE_USER_BALANCE_EVENT,\n    filter: (payload: UserBalanceDto, variables: { userId: string }) => {\n      return payload.userId === +variables.userId;\n    },\n    resolve: (payload: UserBalanceDto, _args, ctx) => {\n      const req = getRequestFromExecutionContext(ctx);\n      BalanceOfUserResolver.logger.log({\n        requestId: req.headers?.[X_REQUEST_ID],\n      });\n      // todo: requestId from request not apply in logger\n      BalanceOfUserResolver.logger.log({ [CHANGE_USER_BALANCE_EVENT]: payload });\n      if (req.headers['x-throw-error']) {\n        throw new Error('Error from subscription!');\n      }\n      return payload;\n    },\n  })\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onChangeUserBalance(@Args('userId') userId: string) {\n    return this.balanceOfUserService.asyncIterator<UserBalanceDto>(CHANGE_USER_BALANCE_EVENT);\n  }\n}\n"})}),"\n",(0,r.jsx)(s.h4,{id:"use-in-nestjs-mod",children:"Use in NestJS-mod"}),"\n",(0,r.jsxs)(s.p,{children:["An example of using forRoot with parameters and use dataloader, resolver fields and subscriptions, you can see the full example here ",(0,r.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod-contrib/tree/master/apps/example-graphql",children:"https://github.com/nestjs-mod/nestjs-mod-contrib/tree/master/apps/example-graphql"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-typescript",children:"import {\n  DefaultNestApplicationInitializer,\n  DefaultNestApplicationListener,\n  InfrastructureMarkdownReportGenerator,\n  PACKAGE_JSON_FILE,\n  ProjectUtils,\n  bootstrapNestApplication,\n  isInfrastructureMode,\n} from '@nestjs-mod/common';\nimport { FastifyNestApplicationInitializer, FastifyNestApplicationListener } from '@nestjs-mod/fastify';\nimport { GRAPHQL_SCHEMA_FILE, GraphqlModule } from '@nestjs-mod/graphql';\nimport { NestjsPinoLoggerModule } from '@nestjs-mod/pino';\nimport { ECOSYSTEM_CONFIG_FILE, Pm2 } from '@nestjs-mod/pm2';\nimport { TerminusHealthCheckModule } from '@nestjs-mod/terminus';\nimport { MemoryHealthIndicator } from '@nestjs/terminus';\nimport { join } from 'path';\nimport { AppModule } from './app/app.module';\n\nconst platform = process.env.PLATFORM === 'fastify' ? 'fastify' : 'express';\n\nconst rootFolder = join(__dirname, '..', '..', '..');\nconst appFolder = join(rootFolder, 'apps', 'example-graphql');\n\nbootstrapNestApplication({\n  modules: {\n    system: [\n      ProjectUtils.forRoot({\n        staticConfiguration: {\n          applicationPackageJsonFile: join(appFolder, PACKAGE_JSON_FILE),\n          packageJsonFile: join(rootFolder, PACKAGE_JSON_FILE),\n          envFile: join(rootFolder, '.env'),\n        },\n      }),\n      platform === 'express'\n        ? DefaultNestApplicationInitializer.forRoot({ staticConfiguration: { bufferLogs: true } })\n        : FastifyNestApplicationInitializer.forRoot({ staticConfiguration: { bufferLogs: true } }),\n      NestjsPinoLoggerModule.forRoot(),\n      TerminusHealthCheckModule.forRootAsync({\n        configurationFactory: (memoryHealthIndicator: MemoryHealthIndicator) => ({\n          standardHealthIndicators: [\n            { name: 'memory_heap', check: () => memoryHealthIndicator.checkHeap('memory_heap', 150 * 1024 * 1024) },\n          ],\n        }),\n        inject: [MemoryHealthIndicator],\n      }),\n      platform === 'express'\n        ? DefaultNestApplicationListener.forRoot({\n            staticConfiguration: {\n              // When running in infrastructure mode, the backend server does not start.\n              mode: isInfrastructureMode() ? 'silent' : 'listen',\n            },\n          })\n        : FastifyNestApplicationListener.forRoot({\n            staticConfiguration: {\n              // When running in infrastructure mode, the backend server does not start.\n              mode: isInfrastructureMode() ? 'silent' : 'listen',\n            },\n          }),\n      GraphqlModule.forRoot({\n        configuration: {\n          autoSchemaFile: join(appFolder, GRAPHQL_SCHEMA_FILE),\n        },\n      }),\n    ],\n    feature: [AppModule.forRoot()],\n    infrastructure: [\n      InfrastructureMarkdownReportGenerator.forRoot({\n        staticConfiguration: {\n          markdownFile: join(appFolder, 'INFRASTRUCTURE.MD'),\n          skipEmptySettings: true,\n        },\n      }),\n      Pm2.forRoot({\n        configuration: {\n          ecosystemConfigFile: join(rootFolder, ECOSYSTEM_CONFIG_FILE),\n          applicationScriptFile: join('dist/apps/example-graphql/main.js'),\n        },\n      }),\n    ],\n  },\n});\n"})}),"\n",(0,r.jsx)(s.h4,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Key"}),(0,r.jsx)(s.th,{children:"Description"}),(0,r.jsx)(s.th,{children:"Constraints"}),(0,r.jsx)(s.th,{children:"Default"}),(0,r.jsx)(s.th,{children:"Value"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"path"})}),(0,r.jsx)(s.td,{children:"Path to mount GraphQL API"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"/graphql"})}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"typeDefs"})}),(0,r.jsx)(s.td,{children:"Type definitions"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"typePaths"})}),(0,r.jsx)(s.td,{children:"Paths to files that contain GraphQL definitions"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"driver"})}),(0,r.jsx)(s.td,{children:"GraphQL server adapter"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"ApolloDriver extends apollo_base_driver_1.ApolloBaseDriver"}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"include"})}),(0,r.jsx)(s.td,{children:"An array of modules to scan when searching for resolvers"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"directiveResolvers"})}),(0,r.jsx)(s.td,{children:"Directive resolvers"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"schema"})}),(0,r.jsx)(s.td,{children:"Optional GraphQL schema (to be used or to be merged)"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"resolvers"})}),(0,r.jsx)(s.td,{children:"Extra resolvers to be registered."}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"definitions"})}),(0,r.jsx)(s.td,{children:"TypeScript definitions generator options"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"autoSchemaFile"})}),(0,r.jsx)(s.td,{children:"If enabled, GraphQL schema will be generated automatically"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"schema.gql"})}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"sortSchema"})}),(0,r.jsx)(s.td,{children:"Sort the schema lexicographically"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"buildSchemaOptions"})}),(0,r.jsx)(s.td,{children:'Options to be passed to the schema generator, only applicable if "autoSchemaFile" = true'}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"useGlobalPrefix"})}),(0,r.jsx)(s.td,{children:"Prepends the global prefix to the url @see [faq/global-prefix](Global Prefix)"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"fieldResolverEnhancers"})}),(0,r.jsx)(s.td,{children:"Enable/disable enhancers for @ResolveField()"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsxs)(s.td,{children:["[ ",(0,r.jsx)(s.code,{children:"interceptors"}),", ",(0,r.jsx)(s.code,{children:"guards"}),", ",(0,r.jsx)(s.code,{children:"filters"})," ]"]}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"resolverValidationOptions"})}),(0,r.jsx)(s.td,{children:"Resolver validation options."}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"inheritResolversFromInterfaces"})}),(0,r.jsx)(s.td,{children:"Inherit missing resolvers from their interface types defined in the resolvers object."}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"transformSchema"})}),(0,r.jsx)(s.td,{children:"Function to be applied to the schema letting you register custom transformations."}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"transformAutoSchemaFile"})}),(0,r.jsxs)(s.td,{children:["Apply ",(0,r.jsx)(s.code,{children:"transformSchema"})," to the ",(0,r.jsx)(s.code,{children:"autoSchemaFile"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"context"})}),(0,r.jsx)(s.td,{children:"Context function"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"defaultContextFunction"})}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"metadata"})}),(0,r.jsx)(s.td,{children:"Extra static metadata to be loaded into the specification"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"installSubscriptionHandlers"})}),(0,r.jsx)(s.td,{children:'If enabled, "subscriptions-transport-ws" will be automatically registered.'}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"true"})}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"subscriptions"})}),(0,r.jsx)(s.td,{children:"Subscriptions configuration."}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:'{"graphql-ws":{"path":"/graphql"}}'})}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"playground"})}),(0,r.jsx)(s.td,{children:"GraphQL playground options."}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:'{"settings":{"request.credentials":"include"}}'})}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"autoTransformHttpErrors"})}),(0,r.jsx)(s.td,{children:'If enabled, will register a global interceptor that automatically maps "HttpException" class instances to corresponding Apollo errors.'}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"optional"})}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"-"})]})]})]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"#modules",children:"Back to Top"})}),"\n",(0,r.jsx)(s.h2,{id:"links",children:"Links"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod",children:"https://github.com/nestjs-mod/nestjs-mod"})," - A collection of utilities for unifying NestJS applications and modules"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod-contrib",children:"https://github.com/nestjs-mod/nestjs-mod-contrib"})," - Contrib repository for the NestJS-mod"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod-example",children:"https://github.com/nestjs-mod/nestjs-mod-example"})," - Example application built with ",(0,r.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod/tree/master/libs/schematics",children:"@nestjs-mod/schematics"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod/blob/master/apps/example-basic/INFRASTRUCTURE.MD",children:"https://github.com/nestjs-mod/nestjs-mod/blob/master/apps/example-basic/INFRASTRUCTURE.MD"})," - A simple example of infrastructure documentation."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod-contrib/blob/master/apps/example-prisma/INFRASTRUCTURE.MD",children:"https://github.com/nestjs-mod/nestjs-mod-contrib/blob/master/apps/example-prisma/INFRASTRUCTURE.MD"})," - An extended example of infrastructure documentation with a docker-compose file and a data base."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://dev.to/endykaufman/collection-of-nestjs-mod-utilities-for-unifying-applications-and-modules-on-nestjs-5256",children:"https://dev.to/endykaufman/collection-of-nestjs-mod-utilities-for-unifying-applications-and-modules-on-nestjs-5256"})," - Article about the project NestJS-mod"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"license",children:"License"}),"\n",(0,r.jsx)(s.p,{children:"MIT"})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>d});var r=n(6540);const t={},o=r.createContext(t);function i(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);