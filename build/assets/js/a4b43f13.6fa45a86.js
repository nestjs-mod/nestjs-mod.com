"use strict";(self.webpackChunknestjs_mod_com=self.webpackChunknestjs_mod_com||[]).push([[4221],{376:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var a=t(4848),s=t(8453);const r={},i="Adding Swagger documentation to the NestJS-mod application and generating a REST client for the Angular application",o={id:"en-posts/fullstack/2024-08-14",title:"Adding Swagger documentation to the NestJS-mod application and generating a REST client for the Angular application",description:"Connecting the Swagger documentation generator to the backend.",source:"@site/docs/en-posts/fullstack/2024-08-14.md",sourceDirName:"en-posts/fullstack",slug:"/en-posts/fullstack/2024-08-14",permalink:"/docs/en-posts/fullstack/2024-08-14",draft:!1,unlisted:!1,editUrl:"https://github.com/nestjs-mod/nestjs-mod.com/blob/master/docs/en-posts/fullstack/2024-08-14.md",tags:[],version:"current",frontMatter:{},sidebar:"enPostsSidebar",previous:{title:"An example of a simple update of NestJS-mod libraries",permalink:"/docs/en-posts/fullstack/2024-08-14-updating-NestJS-mod-libraries"},next:{title:"Build applications on NestJS and Angular and run them in two versions: via PM2 and via Docker Compose",permalink:"/docs/en-posts/fullstack/2024-08-20"}},l={},d=[{value:"1. Install all the necessary packages",id:"1-install-all-the-necessary-packages",level:3},{value:"2. Creating an Angular library for working with the backend",id:"2-creating-an-angular-library-for-working-with-the-backend",level:3},{value:"3. Creating a NestJS library for working with the backend",id:"3-creating-a-nestjs-library-for-working-with-the-backend",level:3},{value:"4. Add an additional DTO generator to the Prisma",id:"4-add-an-additional-dto-generator-to-the-prisma",level:3},{value:"5. Adding support for Swagger documentation generation in the backend code",id:"5-adding-support-for-swagger-documentation-generation-in-the-backend-code",level:3},{value:"6. Adding a command to generate an SDK for working with the backend",id:"6-adding-a-command-to-generate-an-sdk-for-working-with-the-backend",level:3},{value:"7. For the Swagger generator to work, you need to install Java",id:"7-for-the-swagger-generator-to-work-you-need-to-install-java",level:3},{value:"8. Since the eslint library rules with the SDK differ from the application rules, we add the SDK folders to .eslintignore",id:"8-since-the-eslint-library-rules-with-the-sdk-differ-from-the-application-rules-we-add-the-sdk-folders-to-eslintignore",level:3},{value:"9. Since the generators create a configuration typescript for the tests, they automatically fall into the general index.ts, we need to add them to the exceptions of the index generator.ts files",id:"9-since-the-generators-create-a-configuration-typescript-for-the-tests-they-automatically-fall-into-the-general-indexts-we-need-to-add-them-to-the-exceptions-of-the-index-generatorts-files",level:3},{value:"10. Starting all generators",id:"10-starting-all-generators",level:3},{value:"11. We register the created DTOs for the methods in the AppController controller and create all the missing DTOs",id:"11-we-register-the-created-dtos-for-the-methods-in-the-appcontroller-controller-and-create-all-the-missing-dtos",level:3},{value:"12. Connecting the SDK module to work with the backend in an Angular application",id:"12-connecting-the-sdk-module-to-work-with-the-backend-in-an-angular-application",level:3},{value:"13. Changing HttpClient to DefaultRestService in the Angular component of the application that works with the backend",id:"13-changing-httpclient-to-defaultrestservice-in-the-angular-component-of-the-application-that-works-with-the-backend",level:3},{value:"14. Connecting the SDK to work with the backend in the Angular application unit test",id:"14-connecting-the-sdk-to-work-with-the-backend-in-the-angular-application-unit-test",level:3},{value:"15. Connecting the SDK to work with the backend in the E2E tests NestJS application",id:"15-connecting-the-sdk-to-work-with-the-backend-in-the-e2e-tests-nestjs-application",level:3},{value:"16. Running unit tests for NestJS and Angular applications",id:"16-running-unit-tests-for-nestjs-and-angular-applications",level:3},{value:"17. Launching E2E tests for NestJS and Angular applications",id:"17-launching-e2e-tests-for-nestjs-and-angular-applications",level:3},{value:"Links",id:"links",level:3}];function p(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"adding-swagger-documentation-to-the-nestjs-mod-application-and-generating-a-rest-client-for-the-angular-application",children:"Adding Swagger documentation to the NestJS-mod application and generating a REST client for the Angular application"}),"\n",(0,a.jsx)(n.p,{children:"Connecting the Swagger documentation generator to the backend."}),"\n",(0,a.jsxs)(n.p,{children:["Connection ",(0,a.jsx)(n.a,{href:"https://www.npmjs.com/package/prisma-class-generator",children:"https://www.npmjs.com/package/prisma-class-generator"})," to generate a DTO from a Prisma."]}),"\n",(0,a.jsx)(n.p,{children:"Creating an nx library for working with the backend."}),"\n",(0,a.jsxs)(n.p,{children:["Connection ",(0,a.jsx)(n.a,{href:"https://www.npmjs.com/package/@openapitools/openapi-generator-cli",children:"https://www.npmjs.com/package/@openapitools/openapi-generator-cli"})," to generate an SDK for working with the backend."]}),"\n",(0,a.jsx)(n.h3,{id:"1-install-all-the-necessary-packages",children:"1. Install all the necessary packages"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Commands"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Install all need dependencies\nnpm i --save @nestjs/swagger\n\n# Install all need dev-dependencies\nnpm i --save-dev prisma-class-generator @openapitools/openapi-generator-cli\n\n# Install all need peer-dependencies\nnpm i --save class-transformer class-validator\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Console output"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ npm i --save @nestjs/swagger\n\nadded 5 packages, removed 1 package, and audited 2512 packages in 14s\n\n300 packages are looking for funding\n  run `npm fund` for details\n\n17 vulnerabilities (6 moderate, 11 high)\n\nTo address issues that do not require attention, run:\n  npm audit fix\n\nTo address all issues (including breaking changes), run:\n  npm audit fix --force\n\nRun `npm audit` for details.\n\n$ npm i --save-dev prisma-class-generator @openapitools/openapi-generator-cli\n\nadded 50 packages, and audited 2562 packages in 15s\n\n304 packages are looking for funding\n  run `npm fund` for details\n\n18 vulnerabilities (6 moderate, 12 high)\n\nTo address issues that do not require attention, run:\n  npm audit fix\n\nTo address all issues (including breaking changes), run:\n  npm audit fix --force\n\nRun `npm audit` for details.\n\n$ npm i --save class-transformer class-validator\n\nadded 1 package, removed 1 package, and audited 2768 packages in 9s\n\n331 packages are looking for funding\n  run `npm fund` for details\n\n18 vulnerabilities (6 moderate, 12 high)\n\nTo address issues that do not require attention, run:\n  npm audit fix\n\nTo address all issues (including breaking changes), run:\n  npm audit fix --force\n\nRun `npm audit` for details.\n"})}),"\n",(0,a.jsx)(n.h3,{id:"2-creating-an-angular-library-for-working-with-the-backend",children:"2. Creating an Angular library for working with the backend"}),"\n",(0,a.jsx)(n.p,{children:"This library will be used to work with the backend."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Commands"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Create Angular library\n./node_modules/.bin/nx g @nx/angular:library app-angular-rest-sdk --buildable --publishable --directory=libs/sdk/app-angular-rest-sdk --simpleName=true --projectNameAndRootFormat=as-provided --strict=true --prefix=app-angular-rest-sdk --standalone=true --selector=app-angular-rest-sdk --changeDetection=OnPush --importPath=@nestjs-mod-fullstack/app-angular-rest-sdk\n\n# Change file with test options\nrm -rf libs/sdk/app-angular-rest-sdk/src/test-setup.ts\ncp apps/client/src/test-setup.ts libs/sdk/app-angular-rest-sdk/src/test-setup.ts\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Console output"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'$ ./node_modules/.bin/nx g @nx/angular:library app-angular-rest-sdk --buildable --publishable --directory=libs/sdk/app-angular-rest-sdk --simpleName=true --projectNameAndRootFormat=as-provided --strict=true --prefix=app-angular-rest-sdk --standalone=true --selector=app-angular-rest-sdk --changeDetection=OnPush --importPath=@nestjs-mod-fullstack/app-angular-rest-sdk\n\n NX  Generating @nx/angular:library\n\nUPDATE nx.json\nCREATE libs/sdk/app-angular-rest-sdk/project.json\nCREATE libs/sdk/app-angular-rest-sdk/README.md\nCREATE libs/sdk/app-angular-rest-sdk/ng-package.json\nCREATE libs/sdk/app-angular-rest-sdk/package.json\nCREATE libs/sdk/app-angular-rest-sdk/tsconfig.json\nCREATE libs/sdk/app-angular-rest-sdk/tsconfig.lib.json\nCREATE libs/sdk/app-angular-rest-sdk/tsconfig.lib.prod.json\nCREATE libs/sdk/app-angular-rest-sdk/src/index.ts\nCREATE libs/sdk/app-angular-rest-sdk/jest.config.ts\nCREATE libs/sdk/app-angular-rest-sdk/src/test-setup.ts\nCREATE libs/sdk/app-angular-rest-sdk/tsconfig.spec.json\nCREATE libs/sdk/app-angular-rest-sdk/src/lib/app-angular-rest-sdk/app-angular-rest-sdk.component.css\nCREATE libs/sdk/app-angular-rest-sdk/src/lib/app-angular-rest-sdk/app-angular-rest-sdk.component.html\nCREATE libs/sdk/app-angular-rest-sdk/src/lib/app-angular-rest-sdk/app-angular-rest-sdk.component.spec.ts\nCREATE libs/sdk/app-angular-rest-sdk/src/lib/app-angular-rest-sdk/app-angular-rest-sdk.component.ts\nCREATE libs/sdk/app-angular-rest-sdk/.eslintrc.json\nUPDATE package.json\nUPDATE tsconfig.base.json\n\nadded 31 packages, removed 37 packages, and audited 2556 packages in 12s\n\n304 packages are looking for funding\n  run `npm fund` for details\n\n16 vulnerabilities (4 moderate, 12 high)\n\nTo address issues that do not require attention, run:\n  npm audit fix\n\nTo address all issues (including breaking changes), run:\n  npm audit fix --force\n\nRun `npm audit` for details.\n\n NX   \ud83d\udc40 View Details of app-angular-rest-sdk\n\nRun "nx show project app-angular-rest-sdk" to view details about this project.\n'})}),"\n",(0,a.jsx)(n.h3,{id:"3-creating-a-nestjs-library-for-working-with-the-backend",children:"3. Creating a NestJS library for working with the backend"}),"\n",(0,a.jsx)(n.p,{children:"This library will be used from the backend's E2E tests."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Commands"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Create NestJS library\n./node_modules/.bin/nx g @nestjs-mod/schematics:library app-rest-sdk --buildable --publishable --directory=libs/sdk/app-rest-sdk --simpleName=true --projectNameAndRootFormat=as-provided --strict=true\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Console output"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ ./node_modules/.bin/nx g @nestjs-mod/schematics:library app-rest-sdk --buildable --publishable --directory=libs/sdk/app-rest-sdk --simpleName=true --projectNameAndRootFormat=as-provided --strict=true\n\n NX  Generating @nestjs-mod/schematics:library\n\nCREATE libs/sdk/app-rest-sdk/tsconfig.json\nCREATE libs/sdk/app-rest-sdk/src/index.ts\nCREATE libs/sdk/app-rest-sdk/tsconfig.lib.json\nCREATE libs/sdk/app-rest-sdk/README.md\nCREATE libs/sdk/app-rest-sdk/package.json\nCREATE libs/sdk/app-rest-sdk/project.json\nCREATE libs/sdk/app-rest-sdk/.eslintrc.json\nCREATE libs/sdk/app-rest-sdk/jest.config.ts\nCREATE libs/sdk/app-rest-sdk/tsconfig.spec.json\nUPDATE tsconfig.base.json\nCREATE libs/sdk/app-rest-sdk/src/lib/app-rest-sdk.configuration.ts\nCREATE libs/sdk/app-rest-sdk/src/lib/app-rest-sdk.environments.ts\nCREATE libs/sdk/app-rest-sdk/src/lib/app-rest-sdk.module.ts\n"})}),"\n",(0,a.jsx)(n.h3,{id:"4-add-an-additional-dto-generator-to-the-prisma",children:"4. Add an additional DTO generator to the Prisma"}),"\n",(0,a.jsxs)(n.p,{children:["Updated file ",(0,a.jsx)(n.code,{children:"apps/server/src/prisma/app-schema.prisma"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-prisma",children:'generator client {\n  provider   = "prisma-client-js"\n  output     = "../../../../node_modules/@prisma/app-client"\n  engineType = "binary"\n}\n\ngenerator prismaClassGenerator {\n  provider               = "prisma-class-generator"\n  output                 = "../app/generated/rest/dto"\n  dryRun                 = "false"\n  separateRelationFields = "false"\n  makeIndexFile          = "file"\n}\n\ndatasource db {\n  provider = "postgres"\n  url      = env("SERVER_APP_DATABASE_URL")\n}\n\nmodel AppDemo {\n  id        String   @id(map: "PK_APP_DEMO") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid\n  name      String   @unique(map: "UQ_APP_DEMO") @db.VarChar(128)\n  createdAt DateTime @default(now()) @db.Timestamp(6)\n  updatedAt DateTime @default(now()) @db.Timestamp(6)\n}\n\nmodel migrations {\n  installed_rank Int      @id(map: "__migrations_pk")\n  version        String?  @db.VarChar(50)\n  description    String   @db.VarChar(200)\n  type           String   @db.VarChar(20)\n  script         String   @db.VarChar(1000)\n  checksum       Int?\n  installed_by   String   @db.VarChar(100)\n  installed_on   DateTime @default(now()) @db.Timestamp(6)\n  execution_time Int\n  success        Boolean\n\n  @@index([success], map: "__migrations_s_idx")\n  @@map("__migrations")\n}\n\n'})}),"\n",(0,a.jsx)(n.h3,{id:"5-adding-support-for-swagger-documentation-generation-in-the-backend-code",children:"5. Adding support for Swagger documentation generation in the backend code"}),"\n",(0,a.jsxs)(n.p,{children:["Updated the ",(0,a.jsx)(n.code,{children:"apps/server/src/main.ts"})," file"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { DefaultNestApplicationInitializer, DefaultNestApplicationListener, InfrastructureMarkdownReportGenerator, PACKAGE_JSON_FILE, ProjectUtils, bootstrapNestApplication, isInfrastructureMode } from '@nestjs-mod/common';\nimport { DOCKER_COMPOSE_FILE, DockerCompose, DockerComposePostgreSQL } from '@nestjs-mod/docker-compose';\nimport { FLYWAY_JS_CONFIG_FILE, Flyway } from '@nestjs-mod/flyway';\nimport { NestjsPinoLoggerModule } from '@nestjs-mod/pino';\nimport { ECOSYSTEM_CONFIG_FILE, Pm2 } from '@nestjs-mod/pm2';\nimport { FakePrismaClient, PRISMA_SCHEMA_FILE, PrismaModule } from '@nestjs-mod/prisma';\nimport { TerminusHealthCheckModule } from '@nestjs-mod/terminus';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\nimport { MemoryHealthIndicator } from '@nestjs/terminus';\nimport { writeFileSync } from 'fs';\nimport { join, resolve } from 'path';\nimport { AppModule } from './app/app.module';\n\nconst appFeatureName = 'app';\nconst rootFolder = join(__dirname, '..', '..', '..');\nconst appFolder = join(rootFolder, 'apps', 'server');\n\nbootstrapNestApplication({\n  modules: {\n    system: [\n      ProjectUtils.forRoot({\n        staticConfiguration: {\n          applicationPackageJsonFile: join(appFolder, PACKAGE_JSON_FILE),\n          packageJsonFile: join(rootFolder, PACKAGE_JSON_FILE),\n          envFile: join(rootFolder, '.env'),\n        },\n      }),\n      DefaultNestApplicationInitializer.forRoot({\n        staticConfiguration: { bufferLogs: true },\n      }),\n      NestjsPinoLoggerModule.forRoot(),\n      TerminusHealthCheckModule.forRootAsync({\n        configurationFactory: (memoryHealthIndicator: MemoryHealthIndicator) => ({\n          standardHealthIndicators: [\n            {\n              name: 'memory_heap',\n              check: () => memoryHealthIndicator.checkHeap('memory_heap', 150 * 1024 * 1024),\n            },\n          ],\n        }),\n        inject: [MemoryHealthIndicator],\n      }),\n      DefaultNestApplicationListener.forRoot({\n        staticConfiguration: {\n          // When running in infrastructure mode, the backend server does not start.\n          mode: isInfrastructureMode() ? 'silent' : 'listen',\n          async preListen(options) {\n            if (options.app) {\n              options.app.setGlobalPrefix('api');\n\n              const swaggerConf = new DocumentBuilder().addBearerAuth().build();\n\n              const document = SwaggerModule.createDocument(options.app, swaggerConf);\n\n              SwaggerModule.setup('swagger', options.app, document);\n\n              if (isInfrastructureMode()) {\n                writeFileSync(resolve(__dirname, '..', '..', '..', 'app-swagger.json'), JSON.stringify(document));\n              }\n            }\n          },\n        },\n      }),\n    ],\n    core: [\n      PrismaModule.forRoot({\n        staticConfiguration: {\n          schemaFile: join(appFolder, 'src', 'prisma', `${appFeatureName}-${PRISMA_SCHEMA_FILE}`),\n          featureName: appFeatureName,\n          prismaModule: isInfrastructureMode() ? { PrismaClient: FakePrismaClient } : import(`@prisma/app-client`),\n          addMigrationScripts: false,\n        },\n      }),\n    ],\n    feature: [AppModule.forRoot()],\n    infrastructure: [\n      InfrastructureMarkdownReportGenerator.forRoot({\n        staticConfiguration: {\n          markdownFile: join(appFolder, 'INFRASTRUCTURE.MD'),\n          skipEmptySettings: true,\n        },\n      }),\n      Pm2.forRoot({\n        configuration: {\n          ecosystemConfigFile: join(rootFolder, ECOSYSTEM_CONFIG_FILE),\n          applicationScriptFile: join('dist/apps/server/main.js'),\n        },\n      }),\n      DockerCompose.forRoot({\n        configuration: {\n          dockerComposeFileVersion: '3',\n          dockerComposeFile: join(appFolder, DOCKER_COMPOSE_FILE),\n        },\n      }),\n      DockerComposePostgreSQL.forRoot(),\n      DockerComposePostgreSQL.forFeature({\n        featureModuleName: appFeatureName,\n      }),\n      Flyway.forRoot({\n        staticConfiguration: {\n          featureName: appFeatureName,\n          migrationsFolder: join(appFolder, 'src', 'migrations'),\n          configFile: join(rootFolder, FLYWAY_JS_CONFIG_FILE),\n        },\n      }),\n    ],\n  },\n});\n"})}),"\n",(0,a.jsx)(n.h3,{id:"6-adding-a-command-to-generate-an-sdk-for-working-with-the-backend",children:"6. Adding a command to generate an SDK for working with the backend"}),"\n",(0,a.jsxs)(n.p,{children:["The updated part of the ",(0,a.jsx)(n.code,{children:"apps/server/project' file.json"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "generate": {\n    "executor": "nx:run-commands",\n    "options": {\n      "commands": ["./node_modules/.bin/prisma generate --schema=./apps/server/src/prisma/app-schema.prisma", "./node_modules/.bin/rucken make-ts-list", "export NESTJS_MODE=infrastructure && ./node_modules/.bin/nx serve server --host=0.0.0.0 --watch=false", "rm -rf ./libs/sdk/app-angular-rest-sdk/src/lib && mkdir ./libs/sdk/app-angular-rest-sdk/src/lib && ./node_modules/.bin/openapi-generator-cli generate -i ./app-swagger.json -g typescript-angular -o ./libs/sdk/app-angular-rest-sdk/src/lib  --additional-properties=apiModulePrefix=RestClient,configurationPrefix=RestClient,fileNaming=kebab-case,modelFileSuffix=.interface,modelSuffix=Interface,enumNameSuffix=Type,enumPropertyNaming=original,serviceFileSuffix=-rest.service,serviceSuffix=RestService", "rm -rf ./libs/sdk/app-rest-sdk/src/lib && mkdir ./libs/sdk/app-rest-sdk/src/lib && ./node_modules/.bin/openapi-generator-cli generate -i ./app-swagger.json -g typescript-axios -o ./libs/sdk/app-rest-sdk/src/lib"],\n      "parallel": false,\n      "envFile": "./.env",\n      "color": true\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"7-for-the-swagger-generator-to-work-you-need-to-install-java",children:"7. For the Swagger generator to work, you need to install Java"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Commands"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo apt install default-jre\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Console output"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ sudo apt install default-jre\n[sudo] password for endy:\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\nThe following additional packages will be installed:\n  default-jre-headless openjdk-11-jre openjdk-11-jre-headless\nSuggested packages:\n  fonts-ipafont-gothic fonts-ipafont-mincho fonts-wqy-microhei | fonts-wqy-zenhei\nThe following NEW packages will be installed:\n  default-jre default-jre-headless openjdk-11-jre openjdk-11-jre-headless\n0 upgraded, 4 newly installed, 0 to remove and 9 not upgraded.\nNeed to get 38,5 MB of archives.\nAfter this operation, 177 MB of additional disk space will be used.\nDo you want to continue? [Y/n] Y\nGet:1 http://ru.archive.ubuntu.com/ubuntu focal-updates/main amd64 openjdk-11-jre-headless amd64 11.0.24+8-1ubuntu3~20.04 [38,3 MB]\nGet:2 http://ru.archive.ubuntu.com/ubuntu focal/main amd64 default-jre-headless amd64 2:1.11-72 [3\u202f192 B]\nGet:3 http://ru.archive.ubuntu.com/ubuntu focal-updates/main amd64 openjdk-11-jre amd64 11.0.24+8-1ubuntu3~20.04 [195 kB]\nGet:4 http://ru.archive.ubuntu.com/ubuntu focal/main amd64 default-jre amd64 2:1.11-72 [1\u202f084 B]\nFetched 38,5 MB in 6s (6\u202f643 kB/s)\nSelecting previously unselected package openjdk-11-jre-headless:amd64.\n(Reading database ... 224645 files and directories currently installed.)\nPreparing to unpack .../openjdk-11-jre-headless_11.0.24+8-1ubuntu3~20.04_amd64.deb ...\nUnpacking openjdk-11-jre-headless:amd64 (11.0.24+8-1ubuntu3~20.04) ...\nSelecting previously unselected package default-jre-headless.\nPreparing to unpack .../default-jre-headless_2%3a1.11-72_amd64.deb ...\nUnpacking default-jre-headless (2:1.11-72) ...\nSelecting previously unselected package openjdk-11-jre:amd64.\nPreparing to unpack .../openjdk-11-jre_11.0.24+8-1ubuntu3~20.04_amd64.deb ...\nUnpacking openjdk-11-jre:amd64 (11.0.24+8-1ubuntu3~20.04) ...\nSelecting previously unselected package default-jre.\nPreparing to unpack .../default-jre_2%3a1.11-72_amd64.deb ...\nUnpacking default-jre (2:1.11-72) ...\nSetting up openjdk-11-jre-headless:amd64 (11.0.24+8-1ubuntu3~20.04) ...\nupdate-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/java to provide /usr/bin/java (java) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/jjs to provide /usr/bin/jjs (jjs) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/keytool to provide /usr/bin/keytool (keytool) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/rmid to provide /usr/bin/rmid (rmid) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/rmiregistry to provide /usr/bin/rmiregistry (rmiregistry) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/pack200 to provide /usr/bin/pack200 (pack200) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/bin/unpack200 to provide /usr/bin/unpack200 (unpack200) in auto mode\nupdate-alternatives: using /usr/lib/jvm/java-11-openjdk-amd64/lib/jexec to provide /usr/bin/jexec (jexec) in auto mode\nSetting up openjdk-11-jre:amd64 (11.0.24+8-1ubuntu3~20.04) ...\nSetting up default-jre-headless (2:1.11-72) ...\nSetting up default-jre (2:1.11-72) ...\nProcessing triggers for mime-support (3.64ubuntu1) ...\nProcessing triggers for hicolor-icon-theme (0.17-2) ...\nProcessing triggers for gnome-menus (3.36.0-1ubuntu1) ...\nProcessing triggers for desktop-file-utils (0.24-1ubuntu3) ...\n"})}),"\n",(0,a.jsx)(n.h3,{id:"8-since-the-eslint-library-rules-with-the-sdk-differ-from-the-application-rules-we-add-the-sdk-folders-to-eslintignore",children:"8. Since the eslint library rules with the SDK differ from the application rules, we add the SDK folders to .eslintignore"}),"\n",(0,a.jsxs)(n.p,{children:["Updated ",(0,a.jsx)(n.code,{children:".eslintignore"})," file"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"node_modules\nlibs/sdk/app-rest-sdk/src/lib\nlibs/sdk/app-angular-rest-sdk/src/lib\n"})}),"\n",(0,a.jsx)(n.h3,{id:"9-since-the-generators-create-a-configuration-typescript-for-the-tests-they-automatically-fall-into-the-general-indexts-we-need-to-add-them-to-the-exceptions-of-the-index-generatorts-files",children:"9. Since the generators create a configuration typescript for the tests, they automatically fall into the general index.ts, we need to add them to the exceptions of the index generator.ts files"}),"\n",(0,a.jsxs)(n.p,{children:["Updated the ",(0,a.jsx)(n.code,{children:"rucken.json"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "makeTsList": {\n    "indexFileName": "index",\n    "excludes": [\n      "test-setup.ts", // <-- updates\n      "*node_modules*",\n      "*public_api.ts*",\n      "*.spec*",\n      "environment*",\n      "*e2e*",\n      "*.stories.ts",\n      "*.d.ts"\n    ]\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"10-starting-all-generators",children:"10. Starting all generators"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Commands"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm run generate\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Console output"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ npm run generate\n\n> @nestjs-mod-fullstack/source@0.0.0 generate\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=generate --skip-nx-cache=true && npm run make-ts-list && npm run lint:fix\n\n\n   \u2714  nx run server:generate (14s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target generate for project server (14s)\n\n\n> @nestjs-mod-fullstack/source@0.0.0 make-ts-list\n> ./node_modules/.bin/rucken make-ts-list\n\n\n> @nestjs-mod-fullstack/source@0.0.0 lint:fix\n> npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=lint --fix\n\n\n> @nestjs-mod-fullstack/source@0.0.0 tsc:lint\n> ./node_modules/.bin/tsc --noEmit -p tsconfig.base.json\n\n\n   \u2714  nx run client:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run app-angular-rest-sdk:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server-e2e:lint (1s)\n   \u2714  nx run server:lint (1s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target lint for 4 projects (1s)\n\n      With additional flags:\n        --fix=true\n\nNx read the output from the cache instead of running the command for 2 out of 4 tasks.\n\n\n NX   Nx detected  flaky tasks\n\n  client:lint\n  app-angular-rest-sdk:lint\n  server-e2e:lint\n\nFlaky tasks can disrupt your CI pipeline. Automatically retry them with Nx Cloud. Learn more at https://nx.dev/ci/features/flaky-tasks\n"})}),"\n",(0,a.jsx)(n.h3,{id:"11-we-register-the-created-dtos-for-the-methods-in-the-appcontroller-controller-and-create-all-the-missing-dtos",children:"11. We register the created DTOs for the methods in the AppController controller and create all the missing DTOs"}),"\n",(0,a.jsxs)(n.p,{children:["Updated the ",(0,a.jsx)(n.code,{children:"apps/server/src/app/app.controller.ts"})," file"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { Controller, Delete, Get, Param, Post } from '@nestjs/common';\n\nimport { InjectPrismaClient } from '@nestjs-mod/prisma';\nimport { ApiCreatedResponse, ApiProperty, ApiResponse } from '@nestjs/swagger';\nimport { PrismaClient as AppPrismaClient } from '@prisma/app-client';\nimport { randomUUID } from 'crypto';\nimport { AppService } from './app.service';\nimport { AppDemo } from './generated/rest/dto/app_demo';\n\nexport class AppData {\n  // <- updates\n  @ApiProperty({ type: String })\n  message: string;\n}\n\n@Controller()\nexport class AppController {\n  constructor(\n    @InjectPrismaClient()\n    private readonly appPrismaClient: AppPrismaClient,\n    private readonly appService: AppService\n  ) {}\n\n  @Get()\n  @ApiResponse({ type: AppData }) // <- updates\n  getData() {\n    return this.appService.getData();\n  }\n\n  @Post('/demo')\n  @ApiCreatedResponse({ type: AppDemo }) // <- updates\n  async demoCreateOne() {\n    return await this.appPrismaClient.appDemo.create({ data: { name: 'demo name' + randomUUID() } });\n  }\n\n  @Get('/demo/:id')\n  @ApiResponse({ type: AppDemo }) // <- updates\n  async demoFindOne(@Param('id') id: string) {\n    return await this.appPrismaClient.appDemo.findFirstOrThrow({ where: { id } });\n  }\n\n  @Delete('/demo/:id')\n  @ApiResponse({ type: AppDemo }) // <- updates\n  async demoDeleteOne(@Param('id') id: string) {\n    return await this.appPrismaClient.appDemo.delete({ where: { id } });\n  }\n\n  @Get('/demo')\n  @ApiResponse({ type: AppDemo, isArray: true }) // <- updates\n  async demoFindMany() {\n    return await this.appPrismaClient.appDemo.findMany();\n  }\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"12-connecting-the-sdk-module-to-work-with-the-backend-in-an-angular-application",children:"12. Connecting the SDK module to work with the backend in an Angular application"}),"\n",(0,a.jsxs)(n.p,{children:["Updated file ",(0,a.jsx)(n.code,{children:"apps/client/src/app/app.config.ts"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { provideHttpClient } from '@angular/common/http';\nimport { ApplicationConfig, importProvidersFrom, provideZoneChangeDetection } from '@angular/core';\nimport { provideClientHydration } from '@angular/platform-browser';\nimport { provideRouter } from '@angular/router';\nimport { RestClientApiModule, RestClientConfiguration } from '@nestjs-mod-fullstack/app-angular-rest-sdk';\nimport { appRoutes } from './app.routes';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideClientHydration(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(appRoutes),\n    provideHttpClient(),\n    importProvidersFrom(\n      RestClientApiModule.forRoot(\n        () =>\n          new RestClientConfiguration({\n            basePath: 'http://localhost:3000',\n          })\n      )\n    ),\n  ],\n};\n"})}),"\n",(0,a.jsx)(n.h3,{id:"13-changing-httpclient-to-defaultrestservice-in-the-angular-component-of-the-application-that-works-with-the-backend",children:"13. Changing HttpClient to DefaultRestService in the Angular component of the application that works with the backend"}),"\n",(0,a.jsxs)(n.p,{children:["Updated the ",(0,a.jsx)(n.code,{children:"apps/client/src/app/app.component.ts"})," file"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { DefaultRestService } from '@nestjs-mod-fullstack/app-angular-rest-sdk';\nimport { NxWelcomeComponent } from './nx-welcome.component';\n\n@Component({\n  standalone: true,\n  imports: [NxWelcomeComponent, RouterModule],\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent implements OnInit {\n  title = 'client';\n  serverMessage!: string;\n\n  constructor(private readonly defaultRestService: DefaultRestService) {}\n\n  ngOnInit() {\n    this.defaultRestService.appControllerGetData().subscribe((result) => (this.serverMessage = result.message));\n  }\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"14-connecting-the-sdk-to-work-with-the-backend-in-the-angular-application-unit-test",children:"14. Connecting the SDK to work with the backend in the Angular application unit test"}),"\n",(0,a.jsxs)(n.p,{children:["Updated file ",(0,a.jsx)(n.code,{children:"apps/client/src/app/app.component.spec.ts"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { HttpClientModule } from '@angular/common/http';\nimport { TestBed } from '@angular/core/testing';\nimport { RouterModule } from '@angular/router';\nimport { RestClientApiModule, RestClientConfiguration } from '@nestjs-mod-fullstack/app-angular-rest-sdk';\nimport { AppComponent } from './app.component';\nimport { NxWelcomeComponent } from './nx-welcome.component';\n\ndescribe('AppComponent', () => {\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [\n        AppComponent,\n        NxWelcomeComponent,\n        RouterModule.forRoot([]),\n        HttpClientModule, // <- updates\n        RestClientApiModule.forRoot(\n          // <- updates\n          () =>\n            new RestClientConfiguration({\n              basePath: 'http://localhost:3000',\n            })\n        ),\n      ],\n    }).compileComponents();\n  });\n\n  it('should render title', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    fixture.detectChanges();\n    const compiled = fixture.nativeElement as HTMLElement;\n    expect(compiled.querySelector('h1')?.textContent).toContain('Welcome client');\n  });\n\n  it(`should have as title 'client'`, () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    expect(app.title).toEqual('client');\n  });\n});\n"})}),"\n",(0,a.jsx)(n.h3,{id:"15-connecting-the-sdk-to-work-with-the-backend-in-the-e2e-tests-nestjs-application",children:"15. Connecting the SDK to work with the backend in the E2E tests NestJS application"}),"\n",(0,a.jsxs)(n.p,{children:["Updated file ",(0,a.jsx)(n.code,{children:"apps/server-e2e/src/server/server.spec.ts"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { Configuration, DefaultApi } from '@nestjs-mod-fullstack/app-rest-sdk';\n\ndescribe('GET /api', () => {\n  const defaultApi = new DefaultApi(new Configuration({ basePath: '/api' }));\n  let newDemoObject: { id: string };\n\n  it('should return a message', async () => {\n    const res = await defaultApi.appControllerGetData();\n\n    expect(res.status).toBe(200);\n    expect(res.data).toEqual({ message: 'Hello API' });\n  });\n\n  it('should create and return a demo object', async () => {\n    const res = await defaultApi.appControllerDemoCreateOne();\n\n    expect(res.status).toBe(201);\n    expect(res.data.name).toContain('demo name');\n\n    newDemoObject = res.data;\n  });\n\n  it('should get demo object by id', async () => {\n    const res = await defaultApi.appControllerDemoFindOne(newDemoObject.id);\n\n    expect(res.status).toBe(200);\n    expect(res.data).toMatchObject(newDemoObject);\n  });\n\n  it('should get all demo object', async () => {\n    const res = await defaultApi.appControllerDemoFindMany();\n\n    expect(res.status).toBe(200);\n    expect(res.data.filter((row) => row.id === newDemoObject.id)).toMatchObject([newDemoObject]);\n  });\n\n  it('should delete demo object by id', async () => {\n    const res = await defaultApi.appControllerDemoDeleteOne(newDemoObject.id);\n\n    expect(res.status).toBe(200);\n    expect(res.data).toMatchObject(newDemoObject);\n  });\n\n  it('should get all demo object', async () => {\n    const res = await defaultApi.appControllerDemoFindMany();\n\n    expect(res.status).toBe(200);\n    expect(res.data.filter((row) => row.id === newDemoObject.id)).toMatchObject([]);\n  });\n});\n"})}),"\n",(0,a.jsx)(n.h3,{id:"16-running-unit-tests-for-nestjs-and-angular-applications",children:"16. Running unit tests for NestJS and Angular applications"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Commands"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm run test\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Console output"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ npm run test\n\n> @nestjs-mod-fullstack/source@0.0.0 test\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=test --skip-nx-cache=true --passWithNoTests --output-style=stream-without-prefixes\n\n\n\n> nx run app-angular-rest-sdk:test --passWithNoTests\n\n\n> nx run app-rest-sdk:test --passWithNoTests\n\n\n> nx run client:test --passWithNoTests\n\n NX   Running target test for 4 projects\n\n   \u2714  nx run app-angular-rest-sdk:test (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n   \u2714  nx run app-rest-sdk:test (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 4 projects\n\n      With additional flags:\n        --passWithNoTests=true\n\n   \u2192  Executing 2/2 remaining tasks in parallel...\n   \u2714  nx run client:test (5s)\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 4 projects\n\n      With additional flags:\n   \u2714  nx run server:test (5s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target test for 4 projects (7s)\n\n      With additional flags:\n        --passWithNoTests=true\n"})}),"\n",(0,a.jsx)(n.h3,{id:"17-launching-e2e-tests-for-nestjs-and-angular-applications",children:"17. Launching E2E tests for NestJS and Angular applications"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Commands"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=e2e --skip-nx-cache=true --output-style=stream-without-prefixes\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"Console output"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=e2e --skip-nx-cache=true --output-style=stream-without-prefixes\n\n\n> nx run client-e2e:e2e\n\n> playwright test\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n   \u2192  Executing 1/3 remaining tasks...\n\n   \u2834  nx run client-e2e:e2e\n   \u2714  nx run client-e2e:e2e (7s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n   \u2714  nx run server:build:production (3s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n   \u2192  Executing 1/1 remaining tasks...\n\n   \u2826  nx run server-e2e:e2e\n\n   \u2714  2/2 succeeded [0 read from cache]\n\n PASS   server-e2e  apps/server-e2e/src/server/server.spec.ts\n  GET /api\n    \u2713 should return a message (27 ms)\n   \u2714  nx run server-e2e:e2e (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target e2e for 2 projects and 1 task they depend on (12s)\n\n\n NX   Nx detected a flaky task\n\n  server-e2e:e2e\n\nFlaky tasks can disrupt your CI pipeline. Automatically retry them with Nx Cloud. Learn more at https://nx.dev/ci/features/flaky-tasks\n"})}),"\n",(0,a.jsxs)(n.p,{children:["There are no pictures in the post, the application operation is checked through tests, Swagger documentation is available at: ",(0,a.jsx)(n.a,{href:"http://localhost:3000/swagger",children:"http://localhost:3000/swagger"})," ."]}),"\n",(0,a.jsx)(n.p,{children:"In the next post, I will build applications on NestJS and Angular and run them in two versions: via PM2 and via Docker Compose..."}),"\n",(0,a.jsx)(n.h3,{id:"links",children:"Links"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://nestjs.com",children:"https://nestjs.com"})," - the official website of the framework"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://nestjs-mod.com",children:"https://nestjs-mod.com"})," - the official website of additional utilities"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack"})," - the project from the post"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/commit/0353b23b1b65d1ff8e6e5f6185e235bbe05cf523",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack/commit/0353b23b1b65d1ff8e6e5f6185e235bbe05cf523"})," - commit to current changes"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"#nestjs #angular #nestjsmod #fullstack\n#2024-08-14"})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(6540);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);