"use strict";(self.webpackChunknestjs_mod_com=self.webpackChunknestjs_mod_com||[]).push([[49],{7219:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var t=s(4848),i=s(8453);const o={},a="Semantic versioning of NestJS and Angular applications in the NX monorepository",r={id:"en-posts/fullstack/2024-09-16",title:"Semantic versioning of NestJS and Angular applications in the NX monorepository",description:"Connecting and configuring the nx-semantic-release plugin for the NX monorepository to automatically create a release followed by the deployment of applications.",source:"@site/docs/en-posts/fullstack/2024-09-16.md",sourceDirName:"en-posts/fullstack",slug:"/en-posts/fullstack/2024-09-16",permalink:"/docs/en-posts/fullstack/2024-09-16",draft:!1,unlisted:!1,editUrl:"https://github.com/nestjs-mod/nestjs-mod.com/blob/master/docs/en-posts/fullstack/2024-09-16.md",tags:[],version:"current",frontMatter:{},sidebar:"enPostsSidebar",previous:{title:"Access to the site on NestJS and Angular by domain name with SSL certificate in Kubernetes via Ingress",permalink:"/docs/en-posts/fullstack/2024-09-15"},next:{title:"Adding lint-staged to NestJS and Angular applications",permalink:"/docs/en-posts/fullstack/2024-09-17"}},c={},l=[{value:"1. Adding an NX plugin for semantic versioning",id:"1-adding-an-nx-plugin-for-semantic-versioning",level:3},{value:"2. Adding the configuration for the plugin",id:"2-adding-the-configuration-for-the-plugin",level:3},{value:"3. Enabling semantic versioning for our applications",id:"3-enabling-semantic-versioning-for-our-applications",level:3},{value:"4. Adding additional tasks and steps to the CI/CD configuration to launch semantic versioning and create releases",id:"4-adding-additional-tasks-and-steps-to-the-cicd-configuration-to-launch-semantic-versioning-and-create-releases",level:3},{value:"5. Commit the changes and wait for CI/CD to work successfully",id:"5-commit-the-changes-and-wait-for-cicd-to-work-successfully",level:3},{value:"Conclusion",id:"conclusion",level:3},{value:"Plans",id:"plans",level:3},{value:"Links",id:"links",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"semantic-versioning-of-nestjs-and-angular-applications-in-the-nx-monorepository",children:"Semantic versioning of NestJS and Angular applications in the NX monorepository"}),"\n",(0,t.jsxs)(n.p,{children:["Connecting and configuring the ",(0,t.jsx)(n.code,{children:"nx-semantic-release"})," plugin for the NX monorepository to automatically create a release followed by the deployment of applications."]}),"\n",(0,t.jsx)(n.h3,{id:"1-adding-an-nx-plugin-for-semantic-versioning",children:"1. Adding an NX plugin for semantic versioning"}),"\n",(0,t.jsxs)(n.p,{children:["For versioning, we will use ",(0,t.jsx)(n.a,{href:"https://github.com/TheUnderScorer/nx-semantic-release",children:"https://github.com/TheUnderScorer/nx-semantic-release"})," ."]}),"\n",(0,t.jsxs)(n.p,{children:["Unlike ",(0,t.jsx)(n.a,{href:"https://github.com/semantic-release/semantic-release",children:"https://github.com/semantic-release/semantic-release"})," , plugin ",(0,t.jsx)(n.a,{href:"https://github.com/TheUnderScorer/nx-semantic-release",children:"https://github.com/TheUnderScorer/nx-semantic-release"})," pre-starts building a dependency graph between libraries and applications, and then starts the release process for all related code."]}),"\n",(0,t.jsx)(n.p,{children:"After the release is created, the versions of the applications that we check in the CI/CD configuration will be changed in order to run or exclude some of the steps during deployment."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Commands"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm i --save-dev @theunderscorer/nx-semantic-release\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Console output"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ npm i --save-dev @theunderscorer/nx-semantic-release\n\nremoved 391 packages, changed 3 packages, and audited 2764 packages in 18s\n\n330 packages are looking for funding\n  run `npm fund` for details\n\n52 vulnerabilities (31 moderate, 21 high)\n\nTo address issues that do not require attention, run:\n  npm audit fix\n\nTo address all issues possible (including breaking changes), run:\n  npm audit fix --force\n\nSome issues need review, and may require choosing\na different dependency.\n\nRun `npm audit` for details.\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-adding-the-configuration-for-the-plugin",children:"2. Adding the configuration for the plugin"}),"\n",(0,t.jsxs)(n.p,{children:["At the moment, we will not publish anything to the npm register, so we set the ",(0,t.jsx)(n.code,{children:"npm"})," option to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Creating the ",(0,t.jsx)(n.code,{children:".nxreleaserc.json"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "changelog": true,\n  "npm": false,\n  "github": true,\n  "repositoryUrl": "https://github.com/nestjs-mod/nestjs-mod-fullstack",\n  "branches": ["master"]\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"3-enabling-semantic-versioning-for-our-applications",children:"3. Enabling semantic versioning for our applications"}),"\n",(0,t.jsxs)(n.p,{children:["Currently, during the deployment process, we use only the version of the root ",(0,t.jsx)(n.code,{children:"package.json"})," and the ",(0,t.jsx)(n.code,{children:"package.json"})," from NestJS applications, we have to switch the root version with our hands when our list of dependencies changes, but let the NX plugin switch the application version."]}),"\n",(0,t.jsx)(n.p,{children:"To connect a plugin to a library or application, you need to run a special command."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Commands"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run nx -- g @theunderscorer/nx-semantic-release:setup-project server\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Console output"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ npm run nx -- g @theunderscorer/nx-semantic-release:setup-project server\n\n> @nestjs-mod-fullstack/source@0.0.2 nx\n> nx g @theunderscorer/nx-semantic-release:setup-project server\n\n\n NX  Generating @theunderscorer/nx-semantic-release:setup-project\n\n\u2714 Would you want to create github releases? (Y/n) \xb7 true\n\u2714 Would you want to create changelog file for this project? (Y/n) \xb7 true\n\u2714 Would you want to create npm releases for this project? (Y/n) \xb7 false\n\u2714 What tag format would you like to use for this project. Hint: you can use ${PROJECT_NAME} and ${VERSION} tokens here. \xb7 ${PROJECT_NAME}-v${VERSION}\nUPDATE apps/server/project.json\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-adding-additional-tasks-and-steps-to-the-cicd-configuration-to-launch-semantic-versioning-and-create-releases",children:"4. Adding additional tasks and steps to the CI/CD configuration to launch semantic versioning and create releases"}),"\n",(0,t.jsxs)(n.p,{children:["We will disable the automatic launch of creating releases with any commit to the wizard and add the condition that there is a special label ",(0,t.jsx)(n.code,{children:"[release]"})," in the comment to the commit, this is necessary so that we do not accidentally send the current code from the wizard to the release."]}),"\n",(0,t.jsxs)(n.p,{children:["Adding a release creation task to ",(0,t.jsx)(n.code,{children:".github/workflows/kubernetes.yml"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"name: 'Kubernetes'\n\non:\n  push:\n    branches: ['master']\nenv:\n  REGISTRY: ghcr.io\n  BASE_SERVER_IMAGE_NAME: ${{ github.repository }}-base-server\n  BUILDER_IMAGE_NAME: ${{ github.repository }}-builder\n  MIGRATIONS_IMAGE_NAME: ${{ github.repository }}-migrations\n  SERVER_IMAGE_NAME: ${{ github.repository }}-server\n  NGINX_IMAGE_NAME: ${{ github.repository }}-nginx\n  E2E_TESTS_IMAGE_NAME: ${{ github.repository }}-e2e-tests\n  COMPOSE_INTERACTIVE_NO_CLI: 1\n  NX_DAEMON: false\n  NX_PARALLEL: 1\n  NX_SKIP_NX_CACHE: true\n  DISABLE_SERVE_STATIC: true\njobs:\n  release:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write # to be able to publish a GitHub release\n      issues: write # to be able to comment on released issues\n      pull-requests: write # to be able to comment on released pull requests\n      id-token: write # to enable use of OIDC for npm provenance\n    steps:\n      - uses: actions/checkout@v4\n        if: ${{ contains(github.event.head_commit.message, '[release]') }}\n      - run: npm install --prefer-offline --no-audit --progress=false\n        if: ${{ contains(github.event.head_commit.message, '[release]') }}\n      - run: npm run nx -- run-many --target=semantic-release --all --parallel=1\n        if: ${{ contains(github.event.head_commit.message, '[release]') }}\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n# ...\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In all tasks that start with ",(0,t.jsx)(n.code,{children:"check..."})," we are adding a dependency on the ",(0,t.jsx)(n.code,{children:"release"})," task, since the version may change in the ",(0,t.jsx)(n.code,{children:"release"})," task and all further tasks should receive information about this."]}),"\n",(0,t.jsxs)(n.p,{children:["Updating ",(0,t.jsx)(n.code,{children:".github/workflows/kubernetes.yml"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# ...\njobs:\n  # ...\n  check-base-server-image:\n    runs-on: ubuntu-latest\n    needs: [release]\n    # ...\n  check-builder-image:\n    runs-on: ubuntu-latest\n    needs: [release]\n    # ...\n  check-migrations-image:\n    runs-on: ubuntu-latest\n    needs: [release]\n    # ...\n  check-server-image:\n    runs-on: ubuntu-latest\n    needs: [release]\n    # ...\n  check-nginx-image:\n    runs-on: ubuntu-latest\n    needs: [release]\n    # ...\n  check-e2e-tests-image:\n    runs-on: ubuntu-latest\n    needs: [release]\n    # ...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"5-commit-the-changes-and-wait-for-cicd-to-work-successfully",children:"5. Commit the changes and wait for CI/CD to work successfully"}),"\n",(0,t.jsxs)(n.p,{children:["The current result of CI/CD operation: ",(0,t.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/actions/runs/10879176772",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack/actions/runs/10879176772"})]}),"\n",(0,t.jsx)(n.h3,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsxs)(n.p,{children:["Since the work with the graph of the dependent code takes place inside the plugin, we do not need to use the ",(0,t.jsx)(n.code,{children:"nx affected"})," command."]}),"\n",(0,t.jsxs)(n.p,{children:["At the moment, there is a small amount of code in the project, so it makes no sense to use ",(0,t.jsx)(n.code,{children:"affected"}),", but in the future, as the code base grows, ",(0,t.jsx)(n.code,{children:"affected"})," will begin to be implemented to cache and speed up the processes of building and linting code."]}),"\n",(0,t.jsx)(n.h3,{id:"plans",children:"Plans"}),"\n",(0,t.jsx)(n.p,{children:"In the next post, I will add git hooks for preformatting code during commit, and also add frontend versioning to prevent unnecessary launches of release creation..."}),"\n",(0,t.jsx)(n.h3,{id:"links",children:"Links"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://nestjs.com",children:"https://nestjs.com"})," - the official website of the framework"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://nestjs-mod.com",children:"https://nestjs-mod.com"})," - the official website of additional utilities"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://fullstack.nestjs-mod.com",children:"https://fullstack.nestjs-mod.com"})," - website from the post"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack"})," - the project from the post"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/compare/49806d9680fd8045172597e930e69185fabe33cf..2190202deeb42cd6176123c4d574653b849ef5ed",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack/compare/49806d9680fd8045172597e930e69185fabe33cf..2190202deeb42cd6176123c4d574653b849ef5ed"})," - current changes"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"#nx #github #nestjsmod #fullstack\n#2024-09-16"})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var t=s(6540);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);