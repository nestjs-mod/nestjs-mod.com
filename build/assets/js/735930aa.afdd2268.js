"use strict";(self.webpackChunknestjs_mod_com=self.webpackChunknestjs_mod_com||[]).push([[7412],{687:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var s=t(4848),a=t(8453);const r={},o="Build applications on NestJS and Angular and run them in two versions: via PM2 and via Docker Compose",i={id:"en-posts/fullstack/2024-08-20",title:"Build applications on NestJS and Angular and run them in two versions: via PM2 and via Docker Compose",description:"To run the built applications in PM2 mode, the frontend will be embedded in the backend in the form of static files.",source:"@site/docs/en-posts/fullstack/2024-08-20.md",sourceDirName:"en-posts/fullstack",slug:"/en-posts/fullstack/2024-08-20",permalink:"/docs/en-posts/fullstack/2024-08-20",draft:!1,unlisted:!1,editUrl:"https://github.com/nestjs-mod/nestjs-mod.com/blob/master/docs/en-posts/fullstack/2024-08-20.md",tags:[],version:"current",frontMatter:{},sidebar:"enPostsSidebar",previous:{title:"Adding Swagger documentation to the NestJS-mod application and generating a REST client for the Angular application",permalink:"/docs/en-posts/fullstack/2024-08-14"},next:{title:'Manual deployment of NestJS and Angular applications on a dedicated server via "Docker Compose" and "PM2"',permalink:"/docs/en-posts/fullstack/2024-08-22"}},d={},l=[{value:"1. We install all the necessary packages and regenerate Prisma clients",id:"1-we-install-all-the-necessary-packages-and-regenerate-prisma-clients",level:3},{value:"2. Adding a module for connecting static to the NestJS application",id:"2-adding-a-module-for-connecting-static-to-the-nestjs-application",level:3},{value:"3. Adding a new PM2 configuration file to run the built backend and frontend application",id:"3-adding-a-new-pm2-configuration-file-to-run-the-built-backend-and-frontend-application",level:3},{value:"4. Adding new scripts and updating existing ones",id:"4-adding-new-scripts-and-updating-existing-ones",level:3},{value:"5. We run unit tests, then run the entire infrastructure with all applications in watch mode and run E2E tests",id:"5-we-run-unit-tests-then-run-the-entire-infrastructure-with-all-applications-in-watch-mode-and-run-e2e-tests",level:3},{value:"6. We are stopping the entire infrastructure with all applications in watch mode",id:"6-we-are-stopping-the-entire-infrastructure-with-all-applications-in-watch-mode",level:3},{value:"7. We run unit tests, then run the entire infrastructure with all applications via PM2 in built mode and run E2E tests",id:"7-we-run-unit-tests-then-run-the-entire-infrastructure-with-all-applications-via-pm2-in-built-mode-and-run-e2e-tests",level:3},{value:"8. We are stopping the entire infrastructure and all applications built and launched through PM2",id:"8-we-are-stopping-the-entire-infrastructure-and-all-applications-built-and-launched-through-pm2",level:3},{value:"9. Adding a Docker file that will build an image with the running backend",id:"9-adding-a-docker-file-that-will-build-an-image-with-the-running-backend",level:3},{value:"10. Building a backend image",id:"10-building-a-backend-image",level:3},{value:"11. Adding an Nginx config file to work with the frontend and backend through a single entry point",id:"11-adding-an-nginx-config-file-to-work-with-the-frontend-and-backend-through-a-single-entry-point",level:3},{value:"12. Adding a new &quot;Docker Compose&quot; file with a single entry point that will launch the infrastructure and all applications",id:"12-adding-a-new-docker-compose-file-with-a-single-entry-point-that-will-launch-the-infrastructure-and-all-applications",level:3},{value:"13. Creating a new file with environment variables, where instead of the names of servers with localhost, the names of docker containers will stand",id:"13-creating-a-new-file-with-environment-variables-where-instead-of-the-names-of-servers-with-localhost-the-names-of-docker-containers-will-stand",level:3},{value:"14. Creating a file with environment variables for watch mode in an Angular application",id:"14-creating-a-file-with-environment-variables-for-watch-mode-in-an-angular-application",level:3},{value:"15. Creating a file with environment variables for production mode in an Angular application",id:"15-creating-a-file-with-environment-variables-for-production-mode-in-an-angular-application",level:3},{value:"16. Adding rules for replacing files when building an Angular application in production mode",id:"16-adding-rules-for-replacing-files-when-building-an-angular-application-in-production-mode",level:3},{value:"17. Updating the configuration of the Angular application to support multiple environment variables",id:"17-updating-the-configuration-of-the-angular-application-to-support-multiple-environment-variables",level:3},{value:"18. We run unit tests and run applications in watch mode via PM2, followed by checking applications through E2E tests",id:"18-we-run-unit-tests-and-run-applications-in-watch-mode-via-pm2-followed-by-checking-applications-through-e2e-tests",level:3},{value:"19. \u041f\u0440\u043e\u0433\u043e\u043d\u044f\u0435\u043c \u044e\u043d\u0438\u0442-\u0442\u0435\u0441\u0442\u044b \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0432 \u043f\u0440\u043e\u0434-\u0440\u0435\u0436\u0438\u043c\u0435 \u0447\u0435\u0440\u0435\u0437 PM2 \u0441 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0447\u0435\u0440\u0435\u0437 E2E-\u0442\u0435\u0441\u0442\u044b",id:"19-\u043f\u0440\u043e\u0433\u043e\u043d\u044f\u0435\u043c-\u044e\u043d\u0438\u0442-\u0442\u0435\u0441\u0442\u044b-\u0438-\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f-\u0432-\u043f\u0440\u043e\u0434-\u0440\u0435\u0436\u0438\u043c\u0435-\u0447\u0435\u0440\u0435\u0437-pm2-\u0441-\u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439-\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439-\u0447\u0435\u0440\u0435\u0437-e2e-\u0442\u0435\u0441\u0442\u044b",level:3},{value:"20. We are changing the settings of E2E tests for the backend, since in the prod mode via Docker Compose, applications have a single entry point and the port differs from what is specified in watch mode",id:"20-we-are-changing-the-settings-of-e2e-tests-for-the-backend-since-in-the-prod-mode-via-docker-compose-applications-have-a-single-entry-point-and-the-port-differs-from-what-is-specified-in-watch-mode",level:3},{value:"21. We run unit tests and run applications in prod mode through Docker Compose, followed by checking applications through E2E tests",id:"21-we-run-unit-tests-and-run-applications-in-prod-mode-through-docker-compose-followed-by-checking-applications-through-e2e-tests",level:3},{value:"22. After the current developments and before the commit, we run through all the generation, formatting of the code and running unit tests",id:"22-after-the-current-developments-and-before-the-commit-we-run-through-all-the-generation-formatting-of-the-code-and-running-unit-tests",level:3},{value:"Links",id:"links",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"build-applications-on-nestjs-and-angular-and-run-them-in-two-versions-via-pm2-and-via-docker-compose",children:"Build applications on NestJS and Angular and run them in two versions: via PM2 and via Docker Compose"}),"\n",(0,s.jsx)(n.p,{children:"To run the built applications in PM2 mode, the frontend will be embedded in the backend in the form of static files."}),"\n",(0,s.jsx)(n.p,{children:'To run in the "Docker Compose" mode, the backend will be built as a Docker image, and the built-in static of the frontend will be transmitted via Nginx.'}),"\n",(0,s.jsx)(n.p,{children:'The database is start via "Docker Compose".'}),"\n",(0,s.jsx)(n.h3,{id:"1-we-install-all-the-necessary-packages-and-regenerate-prisma-clients",children:"1. We install all the necessary packages and regenerate Prisma clients"}),"\n",(0,s.jsx)(n.p,{children:"After installing the packages, the generated Prisma clients are deleted, so you need to run the generation again."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install all need dependencies\nnpm install --save @nestjs/serve-static dotenv wait-on\n\n# After installing the packages, the generated Prisma clients are deleted, so you need to run their generation again\nnpm i && npm run generate\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install --save @nestjs/serve-static dotenv wait-on\n\nadded 3 packages, and audited 2770 packages in 11s\n\n331 packages are looking for funding\n  run `npm fund` for details\n\n18 vulnerabilities (6 moderate, 12 high)\n\nTo address issues that do not require attention, run:\n  npm audit fix\n\nTo address all issues (including breaking changes), run:\n  npm audit fix --force\n\nRun `npm audit` for details.\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-adding-a-module-for-connecting-static-to-the-nestjs-application",children:"2. Adding a module for connecting static to the NestJS application"}),"\n",(0,s.jsxs)(n.p,{children:["The NestJS-mod application has a special section for connecting this type of modules [Core modules] (",(0,s.jsx)(n.a,{href:"https://nestjs-mod.com/docs/guides/info/module-types#core-modules",children:"https://nestjs-mod.com/docs/guides/info/module-types#core-modules"})," ), but at this stage, to simplify understanding, such global things will be connected at the ",(0,s.jsx)(n.code,{children:"AppModule"})," level."]}),"\n",(0,s.jsxs)(n.p,{children:["Updated file ",(0,s.jsx)(n.code,{children:"apps/server/src/app/app.module.ts"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { createNestModule, NestModuleCategory } from '@nestjs-mod/common';\n\nimport { PrismaModule } from '@nestjs-mod/prisma';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { join } from 'path';\n\nexport const { AppModule } = createNestModule({\n  moduleName: 'AppModule',\n  moduleCategory: NestModuleCategory.feature,\n  imports: [\n    PrismaModule.forFeature({ featureModuleName: 'app' }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, 'assets', 'client'),\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-adding-a-new-pm2-configuration-file-to-run-the-built-backend-and-frontend-application",children:"3. Adding a new PM2 configuration file to run the built backend and frontend application"}),"\n",(0,s.jsx)(n.p,{children:"There will be only one application, since the static of the frontend application lies next to the built backend application."}),"\n",(0,s.jsxs)(n.p,{children:["Creating the file ",(0,s.jsx)(n.code,{children:"ecosystem-prod.config.json"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "apps": [\n    {\n      "name": "nestjs-mod-fullstack",\n      "script": "node dist/apps/server/main.js",\n      "node_args": "-r dotenv/config"\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"4-adding-new-scripts-and-updating-existing-ones",children:"4. Adding new scripts and updating existing ones"}),"\n",(0,s.jsx)(n.p,{children:"There are a lot of scripts, but they are all needed for various application launch modes."}),"\n",(0,s.jsxs)(n.p,{children:["Groups of scripts similar in scope are combined into a certain header ",(0,s.jsx)(n.code,{children:"_____group name_____"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Updating the section with scripts in the ",(0,s.jsx)(n.code,{children:"package' file.json"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    "_____pm2-full dev infra_____": "_____pm2-full dev infra_____",\n    "pm2-full:dev:start": "npm run generate && npm run docker-compose:start-prod:server && npm run db:create && npm run flyway:migrate && npm run pm2:dev:start",\n    "pm2-full:dev:stop": "npm run docker-compose:stop-prod:server && npm run pm2:dev:stop",\n    "_____dev infra_____": "_____dev infra_____",\n    "serve:dev": "./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=serve",\n    "serve:dev:server": "./node_modules/.bin/nx serve server --host=0.0.0.0",\n    "_____pm2 dev infra_____": "_____pm2 dev infra_____",\n    "pm2:dev:start": "./node_modules/.bin/pm2 start ./ecosystem.config.json && npm run wait-on -- --log http://localhost:3000/api/health --log http://localhost:4200",\n    "pm2:dev:stop": "./node_modules/.bin/pm2 delete all",\n    "_____pm2-full prod infra_____": "_____pm2-full prod infra_____",\n    "pm2-full:prod:start": "npm run generate && npm run build -- -c production && npm run copy-front-to-backend && npm run docker-compose:start-prod:server && npm run db:create && npm run flyway:migrate && npm run pm2:start",\n    "pm2-full:prod:stop": "npm run docker-compose:stop-prod:server && npm run pm2:stop",\n    "_____prod infra_____": "_____prod infra_____",\n    "start": "./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=start",\n    "build": "npm run generate && npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=build --skip-nx-cache=true",\n    "start:prod:server": "./node_modules/.bin/nx start server",\n    "_____pm2 prod infra_____": "_____pm2 prod infra_____",\n    "pm2:start": "./node_modules/.bin/pm2 start ./ecosystem-prod.config.json && npm run wait-on -- --log http://localhost:3000/api/health --log http://localhost:3000",\n    "pm2:stop": "./node_modules/.bin/pm2 delete all",\n    "_____docker-compose-full prod infra_____": "_____docker-compose-full prod infra_____",\n    "docker-compose-full:prod:start": "npm run generate && npm run build -- -c production && npm run docker:build:server:latest && export COMPOSE_INTERACTIVE_NO_CLI=1 && docker-compose -f ./.docker/docker-compose-full.yml --env-file ./.docker/docker-compose-full.env --compatibility up -d",\n    "docker-compose-full:prod:stop": "export COMPOSE_INTERACTIVE_NO_CLI=1 && docker-compose -f ./.docker/docker-compose-full.yml --env-file ./.docker/docker-compose-full.env --compatibility down",\n    "docker-compose-full:prod:only-start": "export COMPOSE_INTERACTIVE_NO_CLI=1 && docker-compose -f ./.docker/docker-compose-full.yml --env-file ./.docker/docker-compose-full.env --compatibility up -d",\n    "docker-compose-full:prod:test:e2e": "export BASE_URL=http://localhost:8080 && npm run test:e2e",\n    "_____docs_____": "_____docs_____",\n    "docs:infrastructure": "export NESTJS_MODE=infrastructure && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source,client* --all -t=serve --parallel=1 -- --watch=false --inspect=false",\n    "_____docker-compose infra_____": "_____docker-compose infra_____",\n    "docker-compose:start:server": "export COMPOSE_INTERACTIVE_NO_CLI=1 && docker compose -f ./apps/server/docker-compose.yml --compatibility up -d",\n    "docker-compose:stop:server": "export COMPOSE_INTERACTIVE_NO_CLI=1 && docker compose -f ./apps/server/docker-compose.yml down",\n    "_____docker-compose prod-infra_____": "_____docker-compose prod-infra_____",\n    "docker-compose:start-prod:server": "export COMPOSE_INTERACTIVE_NO_CLI=1 && docker-compose -f ./apps/server/docker-compose-prod.yml --env-file ./apps/server/docker-compose-prod.env --compatibility up -d",\n    "docker-compose:stop-prod:server": "export COMPOSE_INTERACTIVE_NO_CLI=1 && docker-compose -f ./apps/server/docker-compose-prod.yml --env-file ./apps/server/docker-compose-prod.env down",\n    "_____docker_____": "_____docker_____",\n    "docker:build:server:latest": "docker build -t nestjs-mod-fullstack-server:latest -f ./.docker/server.Dockerfile . --progress=plain",\n    "_____tests_____": "_____tests_____",\n    "test": "./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=test --skip-nx-cache=true --passWithNoTests --output-style=stream-without-prefixes",\n    "test:e2e": "./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=e2e --skip-nx-cache=true --output-style=stream-without-prefixes",\n    "test:server": "./node_modules/.bin/nx test server --skip-nx-cache=true --passWithNoTests --output-style=stream-without-prefixes",\n    "_____lint_____": "_____lint_____",\n    "lint": "npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=lint",\n    "lint:fix": "npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=lint --fix",\n    "tsc:lint": "./node_modules/.bin/tsc --noEmit -p tsconfig.base.json",\n    "_____db_____": "_____db_____",\n    "db:create": "./node_modules/.bin/nx run-many -t=db-create",\n    "_____flyway_____": "_____flyway_____",\n    "flyway:create:server": "./node_modules/.bin/nx run server:flyway-create-migration",\n    "flyway:migrate:server": "./node_modules/.bin/nx run server:flyway-migrate",\n    "flyway:migrate": "./node_modules/.bin/nx run-many -t=flyway-migrate",\n    "_____prisma_____": "_____prisma_____",\n    "prisma:pull:server": "./node_modules/.bin/nx run server:prisma-pull",\n    "prisma:pull": "./node_modules/.bin/nx run-many -t=prisma-pull",\n    "prisma:generate": "./node_modules/.bin/nx run-many -t=prisma-generate",\n    "_____utils_____": "_____utils_____",\n    "copy-front-to-backend": "rm -rf dist/apps/server/assets/client && cp -r dist/apps/client/browser dist/apps/server/assets/client",\n    "generate": "./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=generate --skip-nx-cache=true && npm run make-ts-list && npm run lint:fix",\n    "tsc": "tsc",\n    "nx": "nx",\n    "dep-graph": "./node_modules/.bin/nx dep-graph",\n    "make-ts-list": "./node_modules/.bin/rucken make-ts-list",\n    "manual:prepare": "npm run generate && npm run docs:infrastructure && npm run test",\n    "update:nestjs-mod-versions": "npx -y npm-check-updates @nestjs-mod/* nestjs-mod -u",\n    "rucken": "rucken",\n    "wait-on": "./node_modules/.bin/wait-on --timeout=240000 --interval=1000 --window --verbose"\n  },\n  "scriptsComments": {\n    "pm2-full:dev:start": ["Launching infrastructure and all applications in watch mode via PM2"],\n    "pm2-full:dev:stop": ["Stopping infrastructure and all applications in watch mode via PM2"],\n    "pm2:dev:start": ["Launching all applications in watch mode via PM2"],\n    "pm2:dev:stop": ["Stopping all applications in watch mode via PM2"],\n    "pm2-full:prod:start": ["Launching the infrastructure and building all applications, followed by launching them via PM2"],\n    "pm2-full:prod:stop": ["Stopping infrastructure and all applications running through PM2"],\n    "test:e2e": ["Running E2E tests for all applications"],\n    "copy-dist-front-to-dist-backend": ["Copying a built frontend application to a built backend"],\n    "wait-on": ["Utility for checking and waiting for site availability"],\n    "docker-compose-full:prod:start": ["Build and launching Docker Compose infrastructure with a backend in the form of a Docker container and frontend statics transmitted via Nginx"],\n    "docker-compose-full:prod:stop": ["Stopping Docker Compose infrastructure and all applications"],\n    "docker-compose-full:prod:only-start": ["Launching Docker Compose infrastructure with a backend in the form of a Docker container and frontend statics transmitted via Nginx"],\n    "docker-compose-full:prod:test:e2e": ["Launching E2E tests on an application launched via Docker Compose"],\n    "docker:build:server:latest": ["Building a Docker backend image"]\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Descriptions of new scripts"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Script"}),(0,s.jsx)(n.th,{children:"Comment"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["pm2-full:dev",":start"]}),(0,s.jsx)(n.td,{children:"Launching the infrastructure and all applications in watch mode via PM2"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["pm2-full:dev",":stop"]}),(0,s.jsx)(n.td,{children:"Stopping infrastructure and all applications in watch mode via PM2"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["pm2:dev",":start"]}),(0,s.jsx)(n.td,{children:"Launch all applications in watch mode via PM2"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["pm2:dev",":stop"]}),(0,s.jsx)(n.td,{children:"Stopping all applications in watch mode via PM2"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["pm2-full:prod",":start"]}),(0,s.jsx)(n.td,{children:"Launching the infrastructure and building all applications, followed by launching them via PM2"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["pm2-full:prod",":stop"]}),(0,s.jsx)(n.td,{children:"Stopping the infrastructure and all applications running through PM2"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["test",":e2e"]}),(0,s.jsx)(n.td,{children:"Running E2E tests for all applications"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"copy-dist-front-to-dist-backend"}),(0,s.jsx)(n.td,{children:"Copying a built frontend application to a built backend"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"wait-on"}),(0,s.jsx)(n.td,{children:"A utility for checking and waiting for site availability"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["docker-compose-full:prod",":start"]}),(0,s.jsx)(n.td,{children:'Build and launch of the "Docker Compose" infrastructure with a backend in the form of a Docker container and frontend statics transmitted via Nginx'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["docker-compose-full:prod",":stop"]}),(0,s.jsx)(n.td,{children:'Stopping the "Docker Compose" infrastructure and all applications'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["docker-compose-full:prod",":only-start"]}),(0,s.jsx)(n.td,{children:'Launching the "Docker Compose" infrastructure with a backend in the form of a Docker container and frontend statics transmitted via Nginx'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["docker-compose-full:prod:test",":e2e"]}),(0,s.jsx)(n.td,{children:'Launching E2E tests on an application launched via "Docker Compose"'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["docker:build:server",":latest"]}),(0,s.jsx)(n.td,{children:"Building a Docker backend image"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"5-we-run-unit-tests-then-run-the-entire-infrastructure-with-all-applications-in-watch-mode-and-run-e2e-tests",children:"5. We run unit tests, then run the entire infrastructure with all applications in watch mode and run E2E tests"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run test\nnpm run pm2-full:dev:start\nnpm run test:e2e\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ npm run test\n\n> @nestjs-mod-fullstack/source@0.0.0 test\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=test --skip-nx-cache=true --passWithNoTests --output-style=stream-without-prefixes\n\n\n\n> nx run app-angular-rest-sdk:test --passWithNoTests\n\n\n> nx run app-rest-sdk:test --passWithNoTests\n\n\n> nx run client:test --passWithNoTests\n\n NX   Running target test for 4 projects\n   \u2714  nx run app-rest-sdk:test (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 4 projects\n   \u2714  nx run app-angular-rest-sdk:test (2s)\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 4 projects\n\n      With additional flags:\n        --passWithNoTests=true\n\n   \u2714  nx run client:test (5s)\n\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 4 projects\n\n   \u2714  nx run server:test (4s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target test for 4 projects (6s)\n\n      With additional flags:\n        --passWithNoTests=true\n\n$ npm run pm2-full:dev:start\n\n> @nestjs-mod-fullstack/source@0.0.0 pm2-full:dev:start\n> npm run generate && npm run docker-compose:start-prod:server && npm run db:create && npm run flyway:migrate && npm run pm2:dev:start\n\n\n> @nestjs-mod-fullstack/source@0.0.0 generate\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=generate --skip-nx-cache=true && npm run make-ts-list && npm run lint:fix\n\n\n   \u2714  nx run server:generate (13s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target generate for project server (13s)\n\n\n NX   Nx detected a flaky task\n\n  server:generate\n\nFlaky tasks can disrupt your CI pipeline. Automatically retry them with Nx Cloud. Learn more at https://nx.dev/ci/features/flaky-tasks\n\n\n> @nestjs-mod-fullstack/source@0.0.0 make-ts-list\n> ./node_modules/.bin/rucken make-ts-list\n\n\n> @nestjs-mod-fullstack/source@0.0.0 lint:fix\n> npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=lint --fix\n\n\n> @nestjs-mod-fullstack/source@0.0.0 tsc:lint\n> ./node_modules/.bin/tsc --noEmit -p tsconfig.base.json\n\n\n   \u2714  nx run app-angular-rest-sdk:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run client:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server-e2e:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server:lint (1s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target lint for 4 projects (1s)\n\n      With additional flags:\n        --fix=true\n\nNx read the output from the cache instead of running the command for 3 out of 4 tasks.\n\n\n> @nestjs-mod-fullstack/source@0.0.0 docker-compose:start-prod:server\n> export COMPOSE_INTERACTIVE_NO_CLI=1 && docker-compose -f ./apps/server/docker-compose-prod.yml --env-file ./apps/server/docker-compose-prod.env --compatibility up -d\n\nserver-postgre-sql is up-to-date\n\n> @nestjs-mod-fullstack/source@0.0.0 db:create\n> ./node_modules/.bin/nx run-many -t=db-create\n\n\n   \u2714  nx run server:db-create (746ms)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target db-create for project server (775ms)\n\n\n> @nestjs-mod-fullstack/source@0.0.0 flyway:migrate\n> ./node_modules/.bin/nx run-many -t=flyway-migrate\n\n\n   \u2714  nx run server:flyway-migrate (1s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target flyway-migrate for project server (2s)\n\n\n> @nestjs-mod-fullstack/source@0.0.0 pm2:dev:start\n> ./node_modules/.bin/pm2 start ./ecosystem.config.json && npm run wait-on -- --log http://localhost:3000/api/health --log http://localhost:4200\n\n[PM2][WARN] Applications server, client not running, starting...\n[PM2] App [server] launched (1 instances)\n[PM2] App [client] launched (1 instances)\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 id \u2502 name      \u2502 namespace   \u2502 version \u2502 mode    \u2502 pid      \u2502 uptime \u2502 \u21ba    \u2502 status    \u2502 cpu      \u2502 mem      \u2502 user     \u2502 watching \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1  \u2502 client    \u2502 default     \u2502 N/A     \u2502 fork    \u2502 175791   \u2502 0s     \u2502 0    \u2502 online    \u2502 0%       \u2502 13.1mb   \u2502 endy     \u2502 disabled \u2502\n\u2502 0  \u2502 server    \u2502 default     \u2502 N/A     \u2502 fork    \u2502 175790   \u2502 0s     \u2502 0    \u2502 online    \u2502 0%       \u2502 18.7mb   \u2502 endy     \u2502 disabled \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n> @nestjs-mod-fullstack/source@0.0.0 wait-on\n> ./node_modules/.bin/wait-on --timeout=240000 --interval=1000 --window --verbose --log http://localhost:3000/api/health --log http://localhost:4200\n\nwaiting for 2 resources: http://localhost:3000/api/health, http://localhost:4200\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\nmaking HTTP(S) head request to  url:http://localhost:4200 ...\n  HTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\n  HTTP(S) error for http://localhost:4200 Error: connect ECONNREFUSED 127.0.0.1:4200\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\nmaking HTTP(S) head request to  url:http://localhost:4200 ...\n  HTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\n  HTTP(S) error for http://localhost:4200 Error: connect ECONNREFUSED 127.0.0.1:4200\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\nmaking HTTP(S) head request to  url:http://localhost:4200 ...\n  HTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\n  HTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\nmaking HTTP(S) head request to  url:http://localhost:4200 ...\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\n  HTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\nmaking HTTP(S) head request to  url:http://localhost:4200 ...\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\nmaking HTTP(S) head request to  url:http://localhost:4200 ...\n  HTTP(S) result for http://localhost:3000/api/health: {\n  status: 200,\n  statusText: 'OK',\n  headers: Object [AxiosHeaders] {\n    'x-powered-by': 'Express',\n    vary: 'Origin',\n    'access-control-allow-credentials': 'true',\n    'x-request-id': '72cc7a93-98b5-4e60-8c4e-65e9458385bf',\n    'cache-control': 'no-cache, no-store, must-revalidate',\n    'content-type': 'application/json; charset=utf-8',\n    'content-length': '107',\n    etag: 'W/\"6b-ouXVoNOXyOxnMfI7caewF8/p97A\"',\n    date: 'Sat, 17 Aug 2024 04:02:41 GMT',\n    connection: 'keep-alive',\n    'keep-alive': 'timeout=5'\n  },\n  data: ''\n}\nwaiting for 1 resources: http://localhost:4200\nmaking HTTP(S) head request to  url:http://localhost:4200 ...\n  HTTP(S) result for http://localhost:4200: {\n  status: 200,\n  statusText: 'OK',\n  headers: Object [AxiosHeaders] {\n    'x-powered-by': 'Express',\n    'access-control-allow-origin': '*',\n    'content-type': 'text/html; charset=utf-8',\n    'accept-ranges': 'bytes',\n    'content-length': '586',\n    date: 'Sat, 17 Aug 2024 04:02:42 GMT',\n    connection: 'keep-alive',\n    'keep-alive': 'timeout=5'\n  },\n  data: ''\n}\nwait-on(175826) complete\n\n$ npm run test:e2e\n\n> @nestjs-mod-fullstack/source@0.0.0 test:e2e\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=e2e --skip-nx-cache=true --output-style=stream-without-prefixes\n\n\n\n> nx run client-e2e:e2e\n\n> playwright test\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n   \u2192  Executing 1/3 remaining tasks...\n\n   \u2827  nx run client-e2e:e2e\n   \u2714  nx run client-e2e:e2e (7s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n   \u2714  nx run server:build:production (3s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n   \u2192  Executing 1/1 remaining tasks...\n\n   \u2827  nx run server-e2e:e2e\n\n   \u2714  2/2 succeeded [0 read from cache]\n\n PASS   server-e2e  apps/server-e2e/src/server/server.spec.ts\n  GET /api\n    \u2713 should return a message (28 ms)\n   \u2714  nx run server-e2e:e2e (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target e2e for 2 projects and 1 task they depend on (12s)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"6-we-are-stopping-the-entire-infrastructure-with-all-applications-in-watch-mode",children:"6. We are stopping the entire infrastructure with all applications in watch mode"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run pm2-full:dev:stop\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$  npm run pm2-full:dev:stop\n\n> @nestjs-mod-fullstack/source@0.0.0 pm2-full:dev:stop\n> npm run docker-compose:stop-prod:server && npm run pm2:dev:stop\n\n\n> @nestjs-mod-fullstack/source@0.0.0 docker-compose:stop-prod:server\n> export COMPOSE_INTERACTIVE_NO_CLI=1 && docker-compose -f ./apps/server/docker-compose-prod.yml --env-file ./apps/server/docker-compose-prod.env down\n\nStopping server-postgre-sql ... done\nRemoving server-postgre-sql ... done\nRemoving network server_server-network\n\n> @nestjs-mod-fullstack/source@0.0.0 pm2:dev:stop\n> ./node_modules/.bin/pm2 delete all\n\n[PM2] Applying action deleteProcessId on app [all](ids: [ 0, 1 ])\n[PM2] [client](1) \u2713\n[PM2] [server](0) \u2713\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 id \u2502 name      \u2502 namespace   \u2502 version \u2502 mode    \u2502 pid      \u2502 uptime \u2502 \u21ba    \u2502 status    \u2502 cpu      \u2502 mem      \u2502 user     \u2502 watching \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h3,{id:"7-we-run-unit-tests-then-run-the-entire-infrastructure-with-all-applications-via-pm2-in-built-mode-and-run-e2e-tests",children:"7. We run unit tests, then run the entire infrastructure with all applications via PM2 in built mode and run E2E tests"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run test\nnpm run pm2-full:prod:start\nnpm run test:e2e\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ npm run test\n\n> @nestjs-mod-fullstack/source@0.0.0 test\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=test --skip-nx-cache=true --passWithNoTests --output-style=stream-without-prefixes\n\n\n\n> nx run app-angular-rest-sdk:test --passWithNoTests\n\n\n> nx run app-rest-sdk:test --passWithNoTests\n\n\n> nx run client:test --passWithNoTests\n\n NX   Running target test for 4 projects\n   \u2714  nx run app-rest-sdk:test (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 4 projects\n   \u2714  nx run app-angular-rest-sdk:test (2s)\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 4 projects\n\n      With additional flags:\n        --passWithNoTests=true\n\n   \u2714  nx run client:test (5s)\n\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 4 projects\n\n   \u2714  nx run server:test (4s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target test for 4 projects (6s)\n\n      With additional flags:\n        --passWithNoTests=true\n\n$ npm run pm2-full:prod:start\n\n> @nestjs-mod-fullstack/source@0.0.0 pm2-full:prod:start\n> npm run generate && npm run build -- -c production && npm run copy-front-to-backend && npm run docker-compose:start-prod:server && npm run db:create && npm run flyway:migrate && npm run pm2:start\n\n\n> @nestjs-mod-fullstack/source@0.0.0 generate\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=generate --skip-nx-cache=true && npm run make-ts-list && npm run lint:fix\n\n\n   \u2714  nx run server:generate (12s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target generate for project server (12s)\n\n\n> @nestjs-mod-fullstack/source@0.0.0 make-ts-list\n> ./node_modules/.bin/rucken make-ts-list\n\n\n> @nestjs-mod-fullstack/source@0.0.0 lint:fix\n> npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=lint --fix\n\n\n> @nestjs-mod-fullstack/source@0.0.0 tsc:lint\n> ./node_modules/.bin/tsc --noEmit -p tsconfig.base.json\n\n\n   \u2714  nx run app-angular-rest-sdk:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run client:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server-e2e:lint  [existing outputs match the cache, left as is]\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target lint for 4 projects (110ms)\n\n      With additional flags:\n        --fix=true\n\nNx read the output from the cache instead of running the command for 4 out of 4 tasks.\n\n\n> @nestjs-mod-fullstack/source@0.0.0 build\n> npm run generate && npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=build --skip-nx-cache=true -c production\n\n\n> @nestjs-mod-fullstack/source@0.0.0 generate\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=generate --skip-nx-cache=true && npm run make-ts-list && npm run lint:fix\n\n\n   \u2714  nx run server:generate (12s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target generate for project server (12s)\n\n\n> @nestjs-mod-fullstack/source@0.0.0 make-ts-list\n> ./node_modules/.bin/rucken make-ts-list\n\n\n> @nestjs-mod-fullstack/source@0.0.0 lint:fix\n> npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=lint --fix\n\n\n> @nestjs-mod-fullstack/source@0.0.0 tsc:lint\n> ./node_modules/.bin/tsc --noEmit -p tsconfig.base.json\n\n\n   \u2714  nx run app-angular-rest-sdk:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run client:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server-e2e:lint  [existing outputs match the cache, left as is]\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target lint for 4 projects (113ms)\n\n      With additional flags:\n        --fix=true\n\nNx read the output from the cache instead of running the command for 4 out of 4 tasks.\n\n\n> @nestjs-mod-fullstack/source@0.0.0 tsc:lint\n> ./node_modules/.bin/tsc --noEmit -p tsconfig.base.json\n\n\n   \u2714  nx run app-rest-sdk:build (2s)\n   \u2714  nx run app-angular-rest-sdk:build:production (2s)\n   \u2714  nx run server:build:production (4s)\n   \u2714  nx run client:build:production (5s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target build for 4 projects (7s)\n\n\n> @nestjs-mod-fullstack/source@0.0.0 copy-front-to-backend\n> rm -rf dist/apps/server/assets/client && cp -r dist/apps/client/browser dist/apps/server/assets/client\n\n\n> @nestjs-mod-fullstack/source@0.0.0 docker-compose:start-prod:server\n> export COMPOSE_INTERACTIVE_NO_CLI=1 && docker-compose -f ./apps/server/docker-compose-prod.yml --env-file ./apps/server/docker-compose-prod.env --compatibility up -d\n\nCreating network \"server_server-network\" with driver \"bridge\"\nCreating server-postgre-sql ... done\n\n> @nestjs-mod-fullstack/source@0.0.0 db:create\n> ./node_modules/.bin/nx run-many -t=db-create\n\n\n   \u2714  nx run server:db-create (733ms)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target db-create for project server (763ms)\n\n\n> @nestjs-mod-fullstack/source@0.0.0 flyway:migrate\n> ./node_modules/.bin/nx run-many -t=flyway-migrate\n\n\n   \u2714  nx run server:flyway-migrate (1s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target flyway-migrate for project server (1s)\n\n\n NX   Nx detected a flaky task\n\n  server:flyway-migrate\n\nFlaky tasks can disrupt your CI pipeline. Automatically retry them with Nx Cloud. Learn more at https://nx.dev/ci/features/flaky-tasks\n\n\n> @nestjs-mod-fullstack/source@0.0.0 pm2:start\n> ./node_modules/.bin/pm2 start ./ecosystem-prod.config.json && npm run wait-on -- --log http://localhost:3000/api/health --log http://localhost:3000\n\n\n>>>> In-memory PM2 is out-of-date, do:\n>>>> $ pm2 update\nIn memory PM2 version: 3.1.3\nLocal PM2 version: 5.4.2\n\n[PM2][WARN] Applications nestjs-mod-fullstack not running, starting...\n[PM2] App [nestjs-mod-fullstack] launched (1 instances)\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 id \u2502 name                    \u2502 namespace   \u2502 version \u2502 mode    \u2502 pid      \u2502 uptime \u2502 \u21ba    \u2502 status    \u2502 cpu      \u2502 mem      \u2502 user     \u2502 watching \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 0  \u2502 nestjs-mod-fullstack    \u2502 default     \u2502 N/A     \u2502 fork    \u2502 106436   \u2502 0s     \u2502 0    \u2502 online    \u2502 0%       \u2502 11.6mb   \u2502 endy     \u2502 disabled \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n> @nestjs-mod-fullstack/source@0.0.0 wait-on\n> ./node_modules/.bin/wait-on --timeout=240000 --interval=1000 --window --verbose --log http://localhost:3000/api/health --log http://localhost:3000\n\nwaiting for 2 resources: http://localhost:3000/api/health, http://localhost:3000\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\nmaking HTTP(S) head request to  url:http://localhost:3000 ...\n  HTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\n  HTTP(S) error for http://localhost:3000 Error: connect ECONNREFUSED 127.0.0.1:3000\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\nmaking HTTP(S) head request to  url:http://localhost:3000 ...\n  HTTP(S) result for http://localhost:3000/api/health: {\n  status: 200,\n  statusText: 'OK',\n  headers: Object [AxiosHeaders] {\n    'x-powered-by': 'Express',\n    vary: 'Origin',\n    'access-control-allow-credentials': 'true',\n    'x-request-id': '011863a0-2444-40d4-a012-93c3dd9d3d96',\n    'cache-control': 'no-cache, no-store, must-revalidate',\n    'content-type': 'application/json; charset=utf-8',\n    'content-length': '107',\n    etag: 'W/\"6b-ouXVoNOXyOxnMfI7caewF8/p97A\"',\n    date: 'Tue, 20 Aug 2024 06:04:02 GMT',\n    connection: 'keep-alive',\n    'keep-alive': 'timeout=5'\n  },\n  data: ''\n}\nwaiting for 1 resources: http://localhost:3000\n  HTTP(S) result for http://localhost:3000: {\n  status: 200,\n  statusText: 'OK',\n  headers: Object [AxiosHeaders] {\n    'x-powered-by': 'Express',\n    vary: 'Origin',\n    'access-control-allow-credentials': 'true',\n    'accept-ranges': 'bytes',\n    'cache-control': 'public, max-age=0',\n    'last-modified': 'Tue, 20 Aug 2024 06:03:56 GMT',\n    etag: 'W/\"8e8-1916e62868f\"',\n    'content-type': 'text/html; charset=UTF-8',\n    'content-length': '2280',\n    date: 'Tue, 20 Aug 2024 06:04:02 GMT',\n    connection: 'keep-alive',\n    'keep-alive': 'timeout=5'\n  },\n  data: ''\n}\nwait-on(106462) complete\n\n$ npm run test:e2e\n\n> @nestjs-mod-fullstack/source@0.0.0 test:e2e\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=e2e --skip-nx-cache=true --output-style=stream-without-prefixes\n\n\n\n> nx run client-e2e:e2e\n\n> playwright test\n\n\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n   \u2192  Executing 1/3 remaining tasks...\n\n   \u283c  nx run client-e2e:e2e\n   \u2714  nx run client-e2e:e2e (13s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n   \u2714  nx run server:build:production (3s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target e2e for 2 projects and 1 task they depend on\n\n   \u2192  Executing 1/1 remaining tasks...\n\n   \u2826  nx run server-e2e:e2e\n\n   \u2714  2/2 succeeded [0 read from cache]\n\n PASS   server-e2e  apps/server-e2e/src/server/server.spec.ts\n  GET /api\n    \u2713 should return a message (27 ms)\n   \u2714  nx run server-e2e:e2e (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target e2e for 2 projects and 1 task they depend on (18s)\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"8-we-are-stopping-the-entire-infrastructure-and-all-applications-built-and-launched-through-pm2",children:"8. We are stopping the entire infrastructure and all applications built and launched through PM2"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run pm2-full:prod:stop\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$  npm run pm2-full:prod:stop\n\n> @nestjs-mod-fullstack/source@0.0.0 pm2-full:prod:stop\n> npm run docker-compose:stop-prod:server && npm run pm2:stop\n\n\n> @nestjs-mod-fullstack/source@0.0.0 docker-compose:stop-prod:server\n> export COMPOSE_INTERACTIVE_NO_CLI=1 && docker-compose -f ./apps/server/docker-compose-prod.yml --env-file ./apps/server/docker-compose-prod.env down\n\nStopping server-postgre-sql ... done\nRemoving server-postgre-sql ... done\nRemoving network server_server-network\n\n> @nestjs-mod-fullstack/source@0.0.0 pm2:stop\n> ./node_modules/.bin/pm2 delete all\n\n[PM2] Applying action deleteProcessId on app [all](ids: [ 0 ])\n[PM2] [nestjs-mod-fullstack](0) \u2713\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 id \u2502 name      \u2502 namespace   \u2502 version \u2502 mode    \u2502 pid      \u2502 uptime \u2502 \u21ba    \u2502 status    \u2502 cpu      \u2502 mem      \u2502 user     \u2502 watching \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h3,{id:"9-adding-a-docker-file-that-will-build-an-image-with-the-running-backend",children:"9. Adding a Docker file that will build an image with the running backend"}),"\n",(0,s.jsx)(n.p,{children:"\u0421\u0431\u043e\u0440\u043a\u0430 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0432 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u044d\u0442\u0430\u043f\u043e\u0432:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Install only npm dependencies"}),"\n",(0,s.jsx)(n.li,{children:"Install npm devDependencies necessary to generate additional code and packages"}),"\n",(0,s.jsx)(n.li,{children:"Generating SDK for Prisma"}),"\n",(0,s.jsx)(n.li,{children:"Removing unnecessary packages from node_modules"}),"\n",(0,s.jsx)(n.li,{children:"Copy node_modules and applications to a new clean image"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Creating the ",(0,s.jsx)(n.code,{children:".docker/server' file.Dockerfile"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:'\nFROM node:20.16.0-alpine AS builder\nWORKDIR /usr/src/app\nCOPY . .\n# To work as a PID 1\nRUN apk add dumb-init\n# Remove dev dependencies\nRUN apk add jq\nRUN echo $(cat package.json | jq \'del(.devDependencies)\') > package.json\n# Removing unnecessary settings\nRUN rm -rf nx.json package-lock.json .dockerignore && \\\n    # Replacing the settings\n    cp .docker/nx.json nx.json && \\\n    cp .docker/.dockerignore .dockerignore && \\\n    # Install dependencies\n    npm install && \\\n    # Installing utilities to generate additional files\n    npm install --save-dev nx@19.5.3 prisma@5.18.0 prisma-class-generator@0.2.11 && \\\n    # Some utilities require a ".env" file\n    echo \'\' > .env && \\\n    # Generating additional code\n    npm run prisma:generate && \\\n    # Remove unnecessary packages\n    rm -rf /usr/src/app/node_modules/@nx && \\\n    rm -rf /usr/src/app/node_modules/@prisma-class-generator && \\\n    rm -rf /usr/src/app/node_modules/@angular  && \\\n    rm -rf /usr/src/app/node_modules/@swc  && \\\n    rm -rf /usr/src/app/node_modules/@babel  && \\\n    rm -rf /usr/src/app/node_modules/@angular-devkit && \\\n    rm -rf /usr/src/app/node_modules/@ngneat && \\\n    rm -rf /usr/src/app/node_modules/@types && \\\n    rm -rf /usr/src/app/node_modules/@ng-packagr\n\nFROM node:20.16.0-alpine\nWORKDIR /usr/src/app\n# Copy all project files\nCOPY --from=builder /usr/src/app/ /usr/src/app/\n# Copy utility for "To work as a PID 1"\nCOPY --from=builder /usr/bin/dumb-init /usr/bin/dumb-init\n# Set server port\nENV SERVER_PORT=8080\n# Share port\nEXPOSE 8080\n# Run server\nCMD ["dumb-init","node", "dist/apps/server/main.js"]\n\n\n'})}),"\n",(0,s.jsx)(n.h3,{id:"10-building-a-backend-image",children:"10. Building a backend image"}),"\n",(0,s.jsxs)(n.p,{children:["The script for starting the build is described in the ",(0,s.jsx)(n.code,{children:"package.json"}),", since we have only one application that can be assembled into a Docker image, in the future, after the appearance of new Docker applications, the image building team will go to ",(0,s.jsx)(n.code,{children:"project.json"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run docker:build:server:latest\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ npm run docker:build:server:latest\n\n> @nestjs-mod-fullstack/source@0.0.0 docker:build:server:latest\n> docker build -t nestjs-mod-fullstack-server:latest -f ./.docker/server.Dockerfile . --progress=plain\n\n#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from server.Dockerfile\n#1 transferring dockerfile: 1.65kB done\n#1 DONE 0.0s\n\n#2 [internal] load .dockerignore\n#2 transferring context: 79B done\n#2 DONE 0.0s\n\n#3 [internal] load metadata for docker.io/library/node:20.16.0-alpine\n#3 DONE 2.7s\n\n#4 [internal] load build context\n#4 transferring context: 7.08MB 0.1s done\n#4 DONE 0.1s\n\n#5 [builder 1/7] FROM docker.io/library/node:20.16.0-alpine@sha256:eb8101caae9ac02229bd64c024919fe3d4504ff7f329da79ca60a04db08cef52\n#5 resolve docker.io/library/node:20.16.0-alpine@sha256:eb8101caae9ac02229bd64c024919fe3d4504ff7f329da79ca60a04db08cef52 done\n#5 sha256:e2997a3fdff8b88aee369a7de727d89bff21c0e2927d7c0487dbbaab6eaf8f14 6.38kB / 6.38kB done\n#5 sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6 0B / 3.62MB 0.1s\n#5 sha256:d9aac50bc34e2a0199701ebddca85c36acd90c4d1ad915ca0849364c41547d70 0B / 42.24MB 0.1s\n#5 sha256:0150f131fd2fb613a281e43d320d5772ad190446bcbb177a28f53838f53fdd3c 0B / 1.39MB 0.1s\n#5 sha256:eb8101caae9ac02229bd64c024919fe3d4504ff7f329da79ca60a04db08cef52 7.67kB / 7.67kB done\n#5 sha256:375518d70893d14665b99393079e77bd4947884f123a66ade28744eb8340d229 1.72kB / 1.72kB done\n#5 sha256:d9aac50bc34e2a0199701ebddca85c36acd90c4d1ad915ca0849364c41547d70 3.15MB / 42.24MB 0.7s\n#5 sha256:d9aac50bc34e2a0199701ebddca85c36acd90c4d1ad915ca0849364c41547d70 7.34MB / 42.24MB 1.1s\n#5 sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6 1.05MB / 3.62MB 1.3s\n#5 sha256:0150f131fd2fb613a281e43d320d5772ad190446bcbb177a28f53838f53fdd3c 1.05MB / 1.39MB 1.4s\n#5 sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6 2.10MB / 3.62MB 1.6s\n#5 sha256:0150f131fd2fb613a281e43d320d5772ad190446bcbb177a28f53838f53fdd3c 1.39MB / 1.39MB 1.5s done\n#5 sha256:c0ce3bd8f30377d0ed394d1177e5009ffc3f6907a980562779583174e8b04acc 0B / 446B 1.6s\n#5 sha256:d9aac50bc34e2a0199701ebddca85c36acd90c4d1ad915ca0849364c41547d70 10.49MB / 42.24MB 1.7s\n#5 sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6 3.15MB / 3.62MB 1.8s\n#5 extracting sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6\n#5 sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6 3.62MB / 3.62MB 1.8s done\n#5 extracting sha256:c6a83fedfae6ed8a4f5f7cbb6a7b6f1c1ec3d86fea8cb9e5ba2e5e6673fde9f6 0.1s done\n#5 sha256:d9aac50bc34e2a0199701ebddca85c36acd90c4d1ad915ca0849364c41547d70 14.68MB / 42.24MB 2.1s\n#5 sha256:c0ce3bd8f30377d0ed394d1177e5009ffc3f6907a980562779583174e8b04acc 446B / 446B 2.0s done\n#5 sha256:d9aac50bc34e2a0199701ebddca85c36acd90c4d1ad915ca0849364c41547d70 17.83MB / 42.24MB 2.4s\n#5 sha256:d9aac50bc34e2a0199701ebddca85c36acd90c4d1ad915ca0849364c41547d70 20.97MB / 42.24MB 2.6s\n#5 sha256:d9aac50bc34e2a0199701ebddca85c36acd90c4d1ad915ca0849364c41547d70 24.12MB / 42.24MB 2.9s\n#5 sha256:d9aac50bc34e2a0199701ebddca85c36acd90c4d1ad915ca0849364c41547d70 28.31MB / 42.24MB 3.3s\n#5 sha256:d9aac50bc34e2a0199701ebddca85c36acd90c4d1ad915ca0849364c41547d70 32.51MB / 42.24MB 3.6s\n#5 sha256:d9aac50bc34e2a0199701ebddca85c36acd90c4d1ad915ca0849364c41547d70 35.65MB / 42.24MB 3.9s\n#5 sha256:d9aac50bc34e2a0199701ebddca85c36acd90c4d1ad915ca0849364c41547d70 39.85MB / 42.24MB 4.2s\n#5 sha256:d9aac50bc34e2a0199701ebddca85c36acd90c4d1ad915ca0849364c41547d70 42.24MB / 42.24MB 4.4s\n#5 sha256:d9aac50bc34e2a0199701ebddca85c36acd90c4d1ad915ca0849364c41547d70 42.24MB / 42.24MB 4.4s done\n#5 extracting sha256:d9aac50bc34e2a0199701ebddca85c36acd90c4d1ad915ca0849364c41547d70 0.1s\n#5 extracting sha256:d9aac50bc34e2a0199701ebddca85c36acd90c4d1ad915ca0849364c41547d70 1.4s done\n#5 extracting sha256:0150f131fd2fb613a281e43d320d5772ad190446bcbb177a28f53838f53fdd3c 0.0s done\n#5 extracting sha256:c0ce3bd8f30377d0ed394d1177e5009ffc3f6907a980562779583174e8b04acc done\n#5 DONE 6.0s\n\n#6 [builder 2/7] WORKDIR /usr/src/app\n#6 DONE 0.2s\n\n#7 [builder 3/7] COPY . .\n#7 DONE 0.0s\n\n#8 [builder 4/7] RUN apk add dumb-init\n#8 0.175 fetch https://dl-cdn.alpinelinux.org/alpine/v3.20/main/x86_64/APKINDEX.tar.gz\n#8 0.739 fetch https://dl-cdn.alpinelinux.org/alpine/v3.20/community/x86_64/APKINDEX.tar.gz\n#8 1.241 (1/1) Installing dumb-init (1.2.5-r3)\n#8 1.292 Executing busybox-1.36.1-r29.trigger\n#8 1.298 OK: 11 MiB in 17 packages\n#8 DONE 1.4s\n\n#9 [builder 5/7] RUN apk add jq\n#9 0.504 (1/2) Installing oniguruma (6.9.9-r0)\n#9 1.036 (2/2) Installing jq (1.7.1-r0)\n#9 1.178 Executing busybox-1.36.1-r29.trigger\n#9 1.183 OK: 12 MiB in 19 packages\n#9 DONE 1.3s\n\n#10 [builder 6/7] RUN echo $(cat package.json | jq 'del(.devDependencies)') > package.json\n#10 DONE 0.3s\n\n#11 [builder 7/7] RUN rm -rf nx.json package-lock.json .dockerignore &&     cp .docker/nx.json nx.json &&     cp .docker/.dockerignore .dockerignore &&     npm install &&     npm install --save-dev nx@19.5.3 prisma@5.18.0 prisma-class-generator@0.2.11 &&     echo '' > .env &&     npm run prisma:generate &&     rm -rf /usr/src/app/node_modules/@nx &&     rm -rf /usr/src/app/node_modules/@prisma-class-generator &&     rm -rf /usr/src/app/node_modules/@angular  &&     rm -rf /usr/src/app/node_modules/@swc  &&     rm -rf /usr/src/app/node_modules/@babel  &&     rm -rf /usr/src/app/node_modules/@angular-devkit &&     rm -rf /usr/src/app/node_modules/@ngneat &&     rm -rf /usr/src/app/node_modules/@types &&     rm -rf /usr/src/app/node_modules/@ng-packagr\n#11 51.71\n#11 51.71 added 408 packages, and audited 409 packages in 51s\n#11 51.72\n#11 51.72 53 packages are looking for funding\n#11 51.72   run `npm fund` for details\n#11 51.72\n#11 51.72 1 moderate severity vulnerability\n#11 51.72\n#11 51.72 To address all issues, run:\n#11 51.72   npm audit fix --force\n#11 51.72\n#11 51.72 Run `npm audit` for details.\n#11 51.72 npm notice\n#11 51.72 npm notice New patch version of npm available! 10.8.1 -> 10.8.2\n#11 51.72 npm notice Changelog: https://github.com/npm/cli/releases/tag/v10.8.2\n#11 51.72 npm notice To update run: npm install -g npm@10.8.2\n#11 51.72 npm notice\n#11 67.47\n#11 67.47 added 106 packages, and audited 515 packages in 16s\n#11 67.47\n#11 67.47 66 packages are looking for funding\n#11 67.47   run `npm fund` for details\n#11 67.47\n#11 67.47 1 moderate severity vulnerability\n#11 67.47\n#11 67.47 To address all issues, run:\n#11 67.47   npm audit fix --force\n#11 67.47\n#11 67.47 Run `npm audit` for details.\n#11 67.64\n#11 67.64 > @nestjs-mod-fullstack/source@0.0.0 prisma:generate\n#11 67.64 > ./node_modules/.bin/nx run-many -t=prisma-generate\n#11 67.64\n#11 68.24\n#11 68.24  NX   Running target prisma-generate for project server:\n#11 68.24\n#11 68.24 - server\n#11 68.24\n#11 68.24\n#11 71.85\n#11 71.85 > nx run server:prisma-generate\n#11 71.85\n#11 71.85 > ./node_modules/.bin/prisma generate --schema=./apps/server/src/prisma/app-schema.prisma\n#11 71.85\n#11 71.85 Environment variables loaded from .env\n#11 71.85 Prisma schema loaded from apps/server/src/prisma/app-schema.prisma\n#11 71.85 prisma:info [Prisma Class Generator]:Handler Registered.\n#11 71.85 prisma:info [Prisma Class Generator]:Generate /usr/src/app/apps/server/src/app/generated/rest/dto/app_demo.ts\n#11 71.85 prisma:info [Prisma Class Generator]:Generate /usr/src/app/apps/server/src/app/generated/rest/dto/migrations.ts\n#11 71.85\n#11 71.85 \u2714 Generated Prisma Client (v5.18.0, engine=binary) to ./node_modules/@prisma/app-client in 81ms\n#11 71.85\n#11 71.85 \u2714 Generated Prisma Class Generator to ./apps/server/src/app/generated/rest/dto in 92ms\n#11 71.85\n#11 71.85 Start by importing your Prisma Client (See: http://pris.ly/d/importing-client)\n#11 71.85\n#11 71.85 Tip: Want to react to database changes in your app as they happen? Discover how with Pulse: https://pris.ly/tip-1-pulse\n#11 71.85\n#11 71.85\n#11 71.85\n#11 71.85\n#11 71.85  NX   Successfully ran target prisma-generate for project server\n#11 71.85\n#11 71.85\n#11 DONE 72.5s\n\n#12 [stage-1 3/4] COPY --from=builder /usr/src/app/ /usr/src/app/\n#12 DONE 2.1s\n\n#13 [stage-1 4/4] COPY --from=builder /usr/bin/dumb-init /usr/bin/dumb-init\n#13 DONE 0.0s\n\n#14 exporting to image\n#14 exporting layers\n#14 exporting layers 1.7s done\n#14 writing image sha256:96ba78126a32f2aaa3cdf6a793ad2adbee5077adb7dcded7ca3cef270d68fbfe\n#14 writing image sha256:96ba78126a32f2aaa3cdf6a793ad2adbee5077adb7dcded7ca3cef270d68fbfe done\n#14 naming to docker.io/library/nestjs-mod-fullstack-server:latest done\n#14 DONE 1.7s\n"})}),"\n",(0,s.jsx)(n.h3,{id:"11-adding-an-nginx-config-file-to-work-with-the-frontend-and-backend-through-a-single-entry-point",children:"11. Adding an Nginx config file to work with the frontend and backend through a single entry point"}),"\n",(0,s.jsx)(n.p,{children:"A typical config is used here, which I usually use in my projects, and other options can be found on the Internet."}),"\n",(0,s.jsxs)(n.p,{children:["Creating the file ",(0,s.jsx)(n.code,{children:".docker/nginx/nginx.conf"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'map $sent_http_content_type $expires {\n    "text/html" epoch;\n    "text/html; charset=utf-8" epoch;\n    default off;\n}\n\nmap $http_upgrade $connection_upgrade {\n    default upgrade;\n    \'\' close;\n}\n\nupstream nestjs-mod-fullstack-server {\n    server nestjs-mod-fullstack-server:8080;\n}\n\nserver {\n    listen 8080;\n    server_name localhost;\n\n    gzip on;\n    gzip_proxied any;\n    gzip_types text/plain application/xml text/css application/javascript application/json;\n    gzip_min_length 1000;\n    gzip_vary on;\n    gzip_disable "MSIE [1-6]\\.(?!.*SV1)";\n\n    client_max_body_size 50m;\n    proxy_connect_timeout 5m;\n    proxy_send_timeout 5m;\n    proxy_read_timeout 5m;\n    send_timeout 5m;\n\n    proxy_max_temp_file_size 0;\n\n    root /usr/share/nginx/html;\n    index index.html;\n\n\n    location /api {\n        proxy_pass http://nestjs-mod-fullstack-server;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection $connection_upgrade;\n        proxy_set_header Host $host;\n        proxy_set_header Origin $http_origin;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n        # kill cache\n        add_header Last-Modified $date_gmt;\n        add_header Cache-Control \'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0\';\n        if_modified_since off;\n        expires off;\n        etag off;\n    }\n\n    location / {\n        expires $expires;\n        proxy_redirect off;\n        proxy_set_header Host $host;\n        proxy_set_header Origin $http_origin;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_read_timeout 1m;\n        proxy_connect_timeout 1m;\n        proxy_intercept_errors on;\n        error_page 404 =200 /index.html;\n        root /usr/share/nginx/html;\n    }\n}\n\n'})}),"\n",(0,s.jsx)(n.h3,{id:"12-adding-a-new-docker-compose-file-with-a-single-entry-point-that-will-launch-the-infrastructure-and-all-applications",children:'12. Adding a new "Docker Compose" file with a single entry point that will launch the infrastructure and all applications'}),"\n",(0,s.jsx)(n.p,{children:"At the moment, 3 containers will be launched:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Database Server"}),"\n",(0,s.jsx)(n.li,{children:"Container for creating application databases and filling them through application migrations"}),"\n",(0,s.jsx)(n.li,{children:"Backend application"}),"\n",(0,s.jsx)(n.li,{children:"Nginx with built-in frontend files for routing requests to the backend"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Creating the file ",(0,s.jsx)(n.code,{children:".docker/docker-compose-full.yml"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"version: '3'\nnetworks:\n  nestjs-mod-fullstack-network:\n    driver: 'bridge'\nservices:\n  nestjs-mod-fullstack-postgre-sql:\n    image: 'bitnami/postgresql:15.5.0'\n    container_name: 'nestjs-mod-fullstack-postgre-sql'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    volumes:\n      - 'nestjs-mod-fullstack-postgre-sql-volume:/bitnami/postgresql'\n    ports:\n      - '5432:5432'\n    healthcheck:\n      test:\n        - 'CMD-SHELL'\n        - 'pg_isready -U postgres'\n      interval: '5s'\n      timeout: '5s'\n      retries: 5\n    tty: true\n    restart: 'always'\n    environment:\n      POSTGRESQL_USERNAME: '${SERVER_POSTGRE_SQL_POSTGRESQL_USERNAME}'\n      POSTGRESQL_PASSWORD: '${SERVER_POSTGRE_SQL_POSTGRESQL_PASSWORD}'\n      POSTGRESQL_DATABASE: '${SERVER_POSTGRE_SQL_POSTGRESQL_DATABASE}'\n  nestjs-mod-fullstack-postgre-sql-migrations:\n    image: 'node:20-bullseye-slim'\n    container_name: 'nestjs-mod-fullstack-postgre-sql-migrations'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    working_dir: '/app'\n    volumes:\n      - './../:/app'\n    command: 'npm run db:create && npm run flyway:migrate'\n    tty: true\n    environment:\n      NX_SKIP_NX_CACHE: 'true'\n      SERVER_ROOT_DATABASE_URL: '${SERVER_ROOT_DATABASE_URL}'\n      SERVER_APP_DATABASE_URL: '${SERVER_APP_DATABASE_URL}'\n    depends_on:\n      nestjs-mod-fullstack-postgre-sql:\n        condition: 'service_healthy'\n  nestjs-mod-fullstack-server:\n    image: 'nestjs-mod-fullstack-server:latest'\n    container_name: 'nestjs-mod-fullstack-server'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    healthcheck:\n      test: ['CMD-SHELL', 'npx -y wait-on --timeout= --interval=1000 --window --verbose --log http://localhost:8080/api/health']\n      interval: 30s\n      timeout: 10s\n      retries: 10\n    tty: true\n    environment:\n      SERVER_APP_DATABASE_URL: '${SERVER_APP_DATABASE_URL}'\n    restart: 'always'\n    depends_on:\n      nestjs-mod-fullstack-postgre-sql:\n        condition: service_healthy\n      nestjs-mod-fullstack-postgre-sql-migrations:\n        condition: service_completed_successfully\n  nestjs-mod-fullstack-nginx:\n    image: nginx:alpine\n    container_name: 'nestjs-mod-fullstack-nginx'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    volumes:\n      - ../.docker/nginx:/etc/nginx/conf.d\n      - ../dist/apps/client/browser:/usr/share/nginx/html\n    depends_on:\n      nestjs-mod-fullstack-server:\n        condition: service_healthy\n    ports:\n      - '8080:8080'\nvolumes:\n  nestjs-mod-fullstack-postgre-sql-volume:\n    name: 'nestjs-mod-fullstack-postgre-sql-volume'\n"})}),"\n",(0,s.jsx)(n.h3,{id:"13-creating-a-new-file-with-environment-variables-where-instead-of-the-names-of-servers-with-localhost-the-names-of-docker-containers-will-stand",children:"13. Creating a new file with environment variables, where instead of the names of servers with localhost, the names of docker containers will stand"}),"\n",(0,s.jsx)(n.p,{children:"In this project, there will be manual duplication of all available variables from the root env file and substitution of server names, in a real project it will be necessary to automate this."}),"\n",(0,s.jsx)(n.p,{children:"When deploying to a dedicated server, the environment variables are taken not from the file that lies inside the repository, but from the server environment variables."}),"\n",(0,s.jsxs)(n.p,{children:["Creating the file ",(0,s.jsx)(n.code,{children:".docker/docker-compose-full.env"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"SERVER_ROOT_DATABASE_URL=postgres://postgres:postgres_password@nestjs-mod-fullstack-postgre-sql:5432/postgres?schema=public\nSERVER_APP_DATABASE_URL=postgres://app:app_password@nestjs-mod-fullstack-postgre-sql:5432/app?schema=public\nSERVER_POSTGRE_SQL_POSTGRESQL_USERNAME=postgres\nSERVER_POSTGRE_SQL_POSTGRESQL_PASSWORD=postgres_password\nSERVER_POSTGRE_SQL_POSTGRESQL_DATABASE=postgres\n"})}),"\n",(0,s.jsx)(n.h3,{id:"14-creating-a-file-with-environment-variables-for-watch-mode-in-an-angular-application",children:"14. Creating a file with environment variables for watch mode in an Angular application"}),"\n",(0,s.jsxs)(n.p,{children:["In this series of posts, various stands with dynamic domain names will not be considered, so for each variant of the stand it will be enough to create your own file with frontend environment variables and configure ",(0,s.jsx)(n.code,{children:"project.json"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Creating the file ",(0,s.jsx)(n.code,{children:"apps/client/src/environments/environment.ts"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"export const serverUrl = 'http://localhost:3000';\n"})}),"\n",(0,s.jsx)(n.h3,{id:"15-creating-a-file-with-environment-variables-for-production-mode-in-an-angular-application",children:"15. Creating a file with environment variables for production mode in an Angular application"}),"\n",(0,s.jsxs)(n.p,{children:["Since the frontend and backend are on the same domain, we leave the server address empty and the frontend will work with the backend at the address ",(0,s.jsx)(n.code,{children:"/api"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"If the frontend and backend are divided into different domains, then you need to specify the domain and configure CORS policies on the backend and nginx, in these posts this point is omitted to simplify understanding of what is happening."}),"\n",(0,s.jsxs)(n.p,{children:["Creating the file ",(0,s.jsx)(n.code,{children:"apps/client/src/environments/environment.prod.ts"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"export const serverUrl = '';\n"})}),"\n",(0,s.jsx)(n.h3,{id:"16-adding-rules-for-replacing-files-when-building-an-angular-application-in-production-mode",children:"16. Adding rules for replacing files when building an Angular application in production mode"}),"\n",(0,s.jsx)(n.p,{children:"The config is very large, so below we show only what has been added."}),"\n",(0,s.jsxs)(n.p,{children:["Adding a few lines to the ",(0,s.jsx)(n.code,{children:"apps/client/project.json"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  // ...\n  "targets": {\n    "build": {\n      // ...\n      "configurations": {\n        "production": {\n          // ...\n          "fileReplacements": [\n            {\n              "replace": "apps/client/src/environments/environment.ts",\n              "with": "apps/client/src/environments/environment.prod.ts"\n            }\n          ]\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"17-updating-the-configuration-of-the-angular-application-to-support-multiple-environment-variables",children:"17. Updating the configuration of the Angular application to support multiple environment variables"}),"\n",(0,s.jsxs)(n.p,{children:["Updating the file ",(0,s.jsx)(n.code,{children:"apps/client/src/app/app.config.ts"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { provideHttpClient } from '@angular/common/http';\nimport { ApplicationConfig, importProvidersFrom, provideZoneChangeDetection } from '@angular/core';\nimport { provideClientHydration } from '@angular/platform-browser';\nimport { provideRouter } from '@angular/router';\nimport { RestClientApiModule, RestClientConfiguration } from '@nestjs-mod-fullstack/app-angular-rest-sdk';\nimport { appRoutes } from './app.routes';\nimport { serverUrl } from '../environments/environment';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideClientHydration(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(appRoutes),\n    provideHttpClient(),\n    importProvidersFrom(\n      RestClientApiModule.forRoot(\n        () =>\n          new RestClientConfiguration({\n            basePath: serverUrl,\n          })\n      )\n    ),\n  ],\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"18-we-run-unit-tests-and-run-applications-in-watch-mode-via-pm2-followed-by-checking-applications-through-e2e-tests",children:"18. We run unit tests and run applications in watch mode via PM2, followed by checking applications through E2E tests"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run test\nnpm run pm2-full:dev:start\nnpm run test:e2e\nnpm run pm2-full:dev:stop\n"})}),"\n",(0,s.jsx)(n.h3,{id:"19-\u043f\u0440\u043e\u0433\u043e\u043d\u044f\u0435\u043c-\u044e\u043d\u0438\u0442-\u0442\u0435\u0441\u0442\u044b-\u0438-\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f-\u0432-\u043f\u0440\u043e\u0434-\u0440\u0435\u0436\u0438\u043c\u0435-\u0447\u0435\u0440\u0435\u0437-pm2-\u0441-\u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439-\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439-\u0447\u0435\u0440\u0435\u0437-e2e-\u0442\u0435\u0441\u0442\u044b",children:"19. \u041f\u0440\u043e\u0433\u043e\u043d\u044f\u0435\u043c \u044e\u043d\u0438\u0442-\u0442\u0435\u0441\u0442\u044b \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0432 \u043f\u0440\u043e\u0434-\u0440\u0435\u0436\u0438\u043c\u0435 \u0447\u0435\u0440\u0435\u0437 PM2 \u0441 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u043e\u0439 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0447\u0435\u0440\u0435\u0437 E2E-\u0442\u0435\u0441\u0442\u044b"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run test\nnpm run pm2-full:prod:start\nnpm run test:e2e\nnpm run pm2-full:prod:stop\n"})}),"\n",(0,s.jsx)(n.h3,{id:"20-we-are-changing-the-settings-of-e2e-tests-for-the-backend-since-in-the-prod-mode-via-docker-compose-applications-have-a-single-entry-point-and-the-port-differs-from-what-is-specified-in-watch-mode",children:"20. We are changing the settings of E2E tests for the backend, since in the prod mode via Docker Compose, applications have a single entry point and the port differs from what is specified in watch mode"}),"\n",(0,s.jsx)(n.p,{children:"The ports are specifically used differently in each mode in order to show more different cases in the development and deployment of applications."}),"\n",(0,s.jsxs)(n.p,{children:["Updated file ",(0,s.jsx)(n.code,{children:"apps/server-e2e/src/support/test-setup.ts"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"/* eslint-disable */\n\nimport axios from 'axios';\n\nmodule.exports = async function () {\n  // Configure axios for tests to use.\n  const host = process.env.HOST ?? 'localhost';\n  const port = process.env.PORT ?? '3000';\n\n  axios.defaults.baseURL = process.env['BASE_URL'] || `http://${host}:${port}`;\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"21-we-run-unit-tests-and-run-applications-in-prod-mode-through-docker-compose-followed-by-checking-applications-through-e2e-tests",children:"21. We run unit tests and run applications in prod mode through Docker Compose, followed by checking applications through E2E tests"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run test\nnpm run docker-compose-full:prod:start\nnpm run docker-compose-full:prod:test:e2e\nnpm run docker-compose-full:prod:stop\n"})}),"\n",(0,s.jsx)(n.h3,{id:"22-after-the-current-developments-and-before-the-commit-we-run-through-all-the-generation-formatting-of-the-code-and-running-unit-tests",children:"22. After the current developments and before the commit, we run through all the generation, formatting of the code and running unit tests"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Commands"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run manual:prepare\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Console output"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'$ npm run manual:prepare\n\n\n> @nestjs-mod-fullstack/source@0.0.0 manual:prepare\n> npm run generate && npm run docs:infrastructure && npm run test\n\n\n> @nestjs-mod-fullstack/source@0.0.0 generate\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=generate --skip-nx-cache=true && npm run make-ts-list && npm run lint:fix\n\n\n   \u2714  nx run server:generate (15s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target generate for project server (15s)\n\n\n> @nestjs-mod-fullstack/source@0.0.0 make-ts-list\n> ./node_modules/.bin/rucken make-ts-list\n\n\n> @nestjs-mod-fullstack/source@0.0.0 lint:fix\n> npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=lint --fix\n\n\n> @nestjs-mod-fullstack/source@0.0.0 tsc:lint\n> ./node_modules/.bin/tsc --noEmit -p tsconfig.base.json\n\n\n   \u2714  nx run app-angular-rest-sdk:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run client:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server-e2e:lint (1s)\n   \u2714  nx run server:lint (1s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target lint for 4 projects (1s)\n\n      With additional flags:\n        --fix=true\n\nNx read the output from the cache instead of running the command for 2 out of 4 tasks.\n\n\n> @nestjs-mod-fullstack/source@0.0.0 docs:infrastructure\n> export NESTJS_MODE=infrastructure && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source,client* --all -t=serve --parallel=1 -- --watch=false --inspect=false\n\n\n NX   Running target serve for project server:\n\n- server\n\nWith additional flags:\n  --watch=false\n  --inspect=false\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n> nx run server:serve:development --watch=false --inspect=false\n\nchunk (runtime: main) main.js (main) 12.5 KiB [entry] [rendered]\nwebpack compiled successfully (1e208138c6e6150d)\n[11:17:23.908] INFO (163227): Starting Nest application...\n    context: "NestFactory"\n[11:17:23.908] INFO (163227): DefaultNestApp dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.908] INFO (163227): ProjectUtilsSettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.908] INFO (163227): DefaultNestApplicationInitializerSettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.908] INFO (163227): DefaultNestApplicationInitializerShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.908] INFO (163227): NestjsPinoLoggerModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.908] INFO (163227): NestjsPinoLoggerModuleShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.908] INFO (163227): TerminusHealthCheckModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.908] INFO (163227): DefaultNestApplicationListenerSettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.908] INFO (163227): DefaultNestApplicationListenerShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.908] INFO (163227): PrismaModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.908] INFO (163227): AppModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.908] INFO (163227): AppModuleShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.908] INFO (163227): PrismaModule dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.908] INFO (163227): InfrastructureMarkdownReportGeneratorSettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.908] INFO (163227): Pm2Settings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.908] INFO (163227): Pm2Shared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.908] INFO (163227): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DockerComposeSettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DockerComposePostgreSQLSettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DockerCompose dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DockerComposePostgreSQL dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DockerComposePostgreSQLSettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DockerComposePostgreSQLShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): FlywaySettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): FlywayShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): PrismaModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): PrismaModuleShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): InfrastructureMarkdownReportGeneratorSettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): InfrastructureMarkdownReportStorage dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): InfrastructureMarkdownReportStorageSettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DockerCompose dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): FlywaySettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): FlywayShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DefaultNestApplicationListenerSettings dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DefaultNestApplicationListenerShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DockerComposeShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): InfrastructureMarkdownReportStorageShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DefaultNestApplicationInitializer dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DefaultNestApplicationListener dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): PrismaModule dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): InfrastructureMarkdownReportGenerator dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DockerComposePostgreSQL dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): Flyway dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DefaultNestApplicationListener dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): NestjsPinoLoggerModule dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): TerminusModule dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): TerminusModule dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): ServeStaticModule dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): ProjectUtilsShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): InfrastructureMarkdownReportGeneratorShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): Pm2 dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DockerCompose dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DockerComposePostgreSQL dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): PrismaModule dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): InfrastructureMarkdownReportGeneratorShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): Flyway dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): InfrastructureMarkdownReportGenerator dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): LoggerModule dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): DockerComposePostgreSQLShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): PrismaModuleShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): TerminusHealthCheckModuleShared dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): TerminusHealthCheckModule dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.909] INFO (163227): AppModule dependencies initialized\n    context: "InstanceLoader"\n[11:17:23.927] INFO (163227): TerminusHealthCheckController {/api/health}:\n    context: "RoutesResolver"\n[11:17:23.929] INFO (163227): Mapped {/api/health, GET} route\n    context: "RouterExplorer"\n[11:17:23.929] INFO (163227): AppController {/api}:\n    context: "RoutesResolver"\n[11:17:23.929] INFO (163227): Mapped {/api, GET} route\n    context: "RouterExplorer"\n[11:17:23.929] INFO (163227): Mapped {/api/demo, POST} route\n    context: "RouterExplorer"\n[11:17:23.929] INFO (163227): Mapped {/api/demo/:id, GET} route\n    context: "RouterExplorer"\n[11:17:23.930] INFO (163227): Mapped {/api/demo/:id, DELETE} route\n    context: "RouterExplorer"\n[11:17:23.930] INFO (163227): Mapped {/api/demo, GET} route\n    context: "RouterExplorer"\n[11:17:23.932] INFO (163227): Connected to database!\n    context: "PrismaClient"\n[11:17:23.964] DEBUG (163227):\n    0: "SERVER_ROOT_DATABASE_URL: Description=\'Connection string for PostgreSQL with root credentials (example: postgres://postgres:postgres_password@localhost:5432/postgres?schema=public, username must be \\"postgres\\")\', Original Name=\'rootDatabaseUrl\'"\n    1: "SERVER_PORT: Description=\'The port on which to run the server.\', Default=\'3000\', Original Name=\'port\'"\n    2: "SERVER_HOSTNAME: Description=\'Hostname on which to listen for incoming packets.\', Original Name=\'hostname\'"\n    3: "SERVER_APP_DATABASE_URL: Description=\'Connection string for PostgreSQL with module credentials (example: postgres://feat:feat_password@localhost:5432/feat?schema=public)\', Original Name=\'databaseUrl\'"\n    context: "All application environments"\n[11:17:23.997] INFO (163227): Nest application successfully started\n    context: "NestApplication"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target serve for project server\n\n\n\n> @nestjs-mod-fullstack/source@0.0.0 test\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=test --skip-nx-cache=true --passWithNoTests --output-style=stream-without-prefixes\n\n\n\n> nx run app-angular-rest-sdk:test --passWithNoTests\n\n\n> nx run app-rest-sdk:test --passWithNoTests\n\n\n> nx run client:test --passWithNoTests\n\n\n   \u2714  nx run app-angular-rest-sdk:test (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 4 projects\n   \u2714  nx run app-rest-sdk:test (2s)\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 4 projects\n\n      With additional flags:\n        --passWithNoTests=true\n\n   \u2192  Executing 2/2 remaining tasks in parallel...\n   \u2714  nx run client:test (7s)\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 4 projects\n\n   \u2714  nx run server:test (5s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target test for 4 projects (7s)\n\n      With additional flags:\n        --passWithNoTests=true\n'})}),"\n",(0,s.jsx)(n.p,{children:'In the next post, I will add a deployment to a dedicated server in two modes PM2 (it will work on a specific port) and "Docker Compose" (it will work on a subdomain)...'}),"\n",(0,s.jsx)(n.h3,{id:"links",children:"Links"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://nestjs.com",children:"https://nestjs.com"})," - the official website of the framework"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://nestjs-mod.com",children:"https://nestjs-mod.com"})," - the official website of additional utilities"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack"})," - the project from the post"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/commit/d97b4121e910627e19fa55f01919557ae898dc42",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack/commit/d97b4121e910627e19fa55f01919557ae898dc42"})," - commit to current changes"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"#pm2 #docker #nestjsmod #fullstack\n#2024-08-20"})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var s=t(6540);const a={},r=s.createContext(a);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);