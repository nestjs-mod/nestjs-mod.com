"use strict";(self.webpackChunknestjs_mod_com=self.webpackChunknestjs_mod_com||[]).push([[6335],{592:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var o=t(4848),r=t(8453);const s={},a="Creating a configurable Webhook module for a NestJS application",i={id:"en-posts/fullstack/2024-10-06",title:"Creating a configurable Webhook module for a NestJS application",description:"In this article, I will describe the creation of two NestJS modules with different configuration methods: a utility module and a business module with its own database.",source:"@site/docs/en-posts/fullstack/2024-10-06.md",sourceDirName:"en-posts/fullstack",slug:"/en-posts/fullstack/2024-10-06",permalink:"/docs/en-posts/fullstack/2024-10-06",draft:!1,unlisted:!1,editUrl:"https://github.com/nestjs-mod/nestjs-mod.com/blob/master/docs/en-posts/fullstack/2024-10-06.md",tags:[],version:"current",frontMatter:{},sidebar:"enPostsSidebar",previous:{title:"Adding lint-staged to NestJS and Angular applications",permalink:"/docs/en-posts/fullstack/2024-09-17"},next:{title:"Creating a user interface for the Webhook module using Angular",permalink:"/docs/en-posts/fullstack/2024-10-25"}},d={},l=[{value:"1. We come up with and paint a feature",id:"1-we-come-up-with-and-paint-a-feature",level:3},{value:"2. Creating all the necessary empty libraries",id:"2-creating-all-the-necessary-empty-libraries",level:3},{value:"3. Adding a NestJS-mod module for working with migrations and a module for generating a Prisma client",id:"3-adding-a-nestjs-mod-module-for-working-with-migrations-and-a-module-for-generating-a-prisma-client",level:3},{value:"4. Adding migrations with the necessary tables and dictionaries",id:"4-adding-migrations-with-the-necessary-tables-and-dictionaries",level:3},{value:"5. Adding a new environment variable to all project launch modes and deployment parameters",id:"5-adding-a-new-environment-variable-to-all-project-launch-modes-and-deployment-parameters",level:3},{value:"6. We launch the database and apply all migrations",id:"6-we-launch-the-database-and-apply-all-migrations",level:3},{value:"7. Let&#39;s recreate the Prisma schema using the new database",id:"7-lets-recreate-the-prisma-schema-using-the-new-database",level:3},{value:"8. We regenerate the Prisma client, create DTO files and check that they have been successfully created",id:"8-we-regenerate-the-prisma-client-create-dto-files-and-check-that-they-have-been-successfully-created",level:3},{value:"9. Restarting in pm2 development mode",id:"9-restarting-in-pm2-development-mode",level:3},{value:"10. Installing the libraries that will be needed for the module to work",id:"10-installing-the-libraries-that-will-be-needed-for-the-module-to-work",level:3},{value:"11. Deleting unnecessary files from created libraries",id:"11-deleting-unnecessary-files-from-created-libraries",level:3},{value:"12. Adding common types that can be reused in other modules",id:"12-adding-common-types-that-can-be-reused-in-other-modules",level:3},{value:"13. Adding the &quot;PrismaToolsModule&quot; module with additional utilities for working with Prisma-orm",id:"13-adding-the-prismatoolsmodule-module-with-additional-utilities-for-working-with-prisma-orm",level:3},{value:"14. Adding the &quot;WebhookModule&quot; module to work with webhooks",id:"14-adding-the-webhookmodule-module-to-work-with-webhooks",level:3},{value:"15. We add the &quot;WebhookModule&quot; and &quot;PrismaToolsModule&quot; modules to the start file of the project and pass the necessary parameters to them",id:"15-we-add-the-webhookmodule-and-prismatoolsmodule-modules-to-the-start-file-of-the-project-and-pass-the-necessary-parameters-to-them",level:3},{value:"16. Adding the &quot;Web hook Module.forFeature()&quot; to the application module &quot;AppModule&quot; so that the module&#39;s services can run webhooks",id:"16-adding-the-web-hook-moduleforfeature-to-the-application-module-appmodule-so-that-the-modules-services-can-run-webhooks",level:3},{value:"17. We add the &quot;WebhookService&quot; service to the &quot;AppController&quot; controller and call the &quot;sendEvent&quot; method for the data we want to send via webhooks",id:"17-we-add-the-webhookservice-service-to-the-appcontroller-controller-and-call-the-sendevent-method-for-the-data-we-want-to-send-via-webhooks",level:3},{value:"18. Adding E2E tests for CRUD methods under the &quot;User&quot; role",id:"18-adding-e2e-tests-for-crud-methods-under-the-user-role",level:3},{value:"19. Adding E2E tests for CRUD methods under the &quot;Admin&quot; role",id:"19-adding-e2e-tests-for-crud-methods-under-the-admin-role",level:3},{value:"20. We start generating additional code for the infrastructure, restart the application and run verification through E2E tests",id:"20-we-start-generating-additional-code-for-the-infrastructure-restart-the-application-and-run-verification-through-e2e-tests",level:3},{value:"Conclusion",id:"conclusion",level:3},{value:"Plans",id:"plans",level:3},{value:"Links",id:"links",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"creating-a-configurable-webhook-module-for-a-nestjs-application",children:"Creating a configurable Webhook module for a NestJS application"}),"\n",(0,o.jsx)(n.p,{children:"In this article, I will describe the creation of two NestJS modules with different configuration methods: a utility module and a business module with its own database."}),"\n",(0,o.jsxs)(n.p,{children:["There is a lot of text and code here, who is too lazy to read, they can just look at the changes in the project code: ",(0,o.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/compare/460257364bb4ce8e23fe761fbc9ca7462bc89b61..ec8de9d574a6dbcef3c3339e876ce156a3974aae",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack/compare/460257364bb4ce8e23fe761fbc9ca7462bc89b61..ec8de9d574a6dbcef3c3339e876ce156a3974aae"})]}),"\n",(0,o.jsx)(n.h3,{id:"1-we-come-up-with-and-paint-a-feature",children:"1. We come up with and paint a feature"}),"\n",(0,o.jsx)(n.p,{children:"Before implementing a certain functionality, you first need to write out everything that it should be able to do and describe entities with components that we know about this functionality."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Description"})}),"\n",(0,o.jsxs)(n.p,{children:["When developing a highly isolated ",(0,o.jsx)(n.code,{children:"NestJS"})," module, we integrate with other modules either through the module configuration, or through a broker or queue."]}),"\n",(0,o.jsx)(n.p,{children:"In my practice, the main part of integrations is the publication of events for which we are already writing handlers in the integration layer of two functional modules."}),"\n",(0,o.jsx)(n.p,{children:"And what if you need to provide access to these events to external sites, then you will have to write additional logic for registering such sites and access verification logic."}),"\n",(0,o.jsxs)(n.p,{children:["This webhook module provides access to application and module events and has ",(0,o.jsx)(n.code,{children:"CRUD"})," operations for managing webhooks."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Module Characteristics"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"The name is WebhookModule;"}),"\n",(0,o.jsx)(n.li,{children:"Scalability - the module does not have the ability to scale, it can only work in a monolith;"}),"\n",(0,o.jsxs)(n.li,{children:["Is it possible to call ",(0,o.jsx)(n.code,{children:"forFeature"})," - no, since events and handlers are thrown through the ",(0,o.jsx)(n.code,{children:"forRoot"})," options;"]}),"\n",(0,o.jsxs)(n.li,{children:["Does it have its own database - yes, the module comes with migrations and a ",(0,o.jsx)(n.code,{children:"Prisma"})," scheme for generating a client to work with the database;"]}),"\n",(0,o.jsx)(n.li,{children:"Multitenancy - yes, since the site can work according to the B2B scheme and each new business is a new externalTenantId;"}),"\n",(0,o.jsx)(n.li,{children:"Softdelet - no, the softdelet will be connected separately after the completion of the entire project and only where it is really needed, in the future a module will appear to enable and disable database auditing and it will be possible to look at the history of changes by record ids;"}),"\n",(0,o.jsx)(n.li,{children:"Other owners of records in the table except externalTenantId - no, the record is common to the entire externalTenantId."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Tables"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"WebhookUser"})," - table with module users","\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"id:uuid"})," - identifier;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"externalTenantId:uuid"})," - company identifier;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"externalUserId:uuid"})," is the user ID of the authorization server;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"UserRole:WebhookRole"})," - user role;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"createdAt:Date"})," - date of creation;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"updatedAt:Date"})," is the date of the change."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Webhook"})," - table with webhooks","\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"id:uuid"})," is the identifier;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"eventName:string(512)"})," is the unique name of the event;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"endpoint:string(512)"})," is the remote site to which the ",(0,o.jsx)(n.code,{children:"POST"})," request will be sent;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"enabled:boolean"})," - is the webhook active;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"headers?:JSON"})," - headers that will be transmitted when sending to a remote site;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"requestTimeout?:number"})," - do I need to wait for a response from a remote site and the maximum number of milliseconds to wait (by default 5 seconds);"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"externalTenantId:uuid"})," - company ID;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"createdBy:uuid"})," - who created the record;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"UpdatedBy:uuid"})," - who updated the record;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"createdAt:Date"})," - date of creation;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"updatedAt:Date"})," is the date of the change."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"WebhookLog"})," - table with the history of webhook calls","\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"id:uuid"})," - identifier;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"request:JSON"})," - request to the remote site;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ResponseStatus:string(20)"})," - response status of the remote site;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"response?:JSON"})," - response of the remote site;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"webhookStatus:WebhookStatus"})," - status;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"webhookId:uuid"})," - webhook ID;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"externalTenantId:uuid"})," - company ID;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"createdAt:Date"})," - date of creation;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"updatedAt:Date"})," is the date of the change."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Dictionaries"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"WebhookRole"})," - dictionary of roles","\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"`Admin' - can read/create/change/delete any entities of any externalTenantId;"}),"\n",(0,o.jsx)(n.li,{children:"`User' - can read/create/change/delete any entities of your externalTenantId only."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"WebhookStatus"})," - dictionary of query statuses","\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Pending"})," - in the queue;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Process"})," - in processing;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Success"})," - successful call;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Error"})," - the call returned an error;"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Timeout"})," - the call did not have time to work out."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Who can work with the module"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Admin - ",(0,o.jsx)(n.code,{children:"REST"}),"-a request that has the externalUserId=ID_USER property in the ",(0,o.jsx)(n.code,{children:"Request"}),", which has the Admin role, has full access to all ",(0,o.jsx)(n.code,{children:"CRUD"})," operations (",(0,o.jsx)(n.code,{children:"WebhookController"})," - at the url ",(0,o.jsx)(n.code,{children:"/api/webhook"}),");"]}),"\n",(0,o.jsxs)(n.li,{children:["User - ",(0,o.jsx)(n.code,{children:"REST"}),"-a request that has the externalUserId=ID_USER property in the ",(0,o.jsx)(n.code,{children:"Request"}),", which has the User role, has full access to all ",(0,o.jsx)(n.code,{children:"CRUD"})," operations, but only within its externalTenantId."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"2-creating-all-the-necessary-empty-libraries",children:"2. Creating all the necessary empty libraries"}),"\n",(0,o.jsxs)(n.p,{children:["Since we will have additional common utilities for working with ",(0,o.jsx)(n.code,{children:"Prisma"}),", we need to create a special library for this."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Commands"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"./node_modules/.bin/nx g @nestjs-mod/schematics:library prisma-tools --buildable --publishable --directory=libs/core/prisma-tools --simpleName=true --projectNameAndRootFormat=as-provided --strict=true\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Console output"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$ ./node_modules/.bin/nx g @nestjs-mod/schematics:library prisma-tools --buildable --publishable --directory=libs/core/prisma-tools --simpleName=true --projectNameAndRootFormat=as-provided --strict=true\n\n NX  Generating @nestjs-mod/schematics:library\n\nCREATE libs/core/prisma-tools/tsconfig.json\nCREATE libs/core/prisma-tools/src/index.ts\nCREATE libs/core/prisma-tools/tsconfig.lib.json\nCREATE libs/core/prisma-tools/README.md\nCREATE libs/core/prisma-tools/package.json\nCREATE libs/core/prisma-tools/project.json\nCREATE libs/core/prisma-tools/.eslintrc.json\nUPDATE package.json\nCREATE libs/core/prisma-tools/jest.config.ts\nCREATE libs/core/prisma-tools/tsconfig.spec.json\nUPDATE tsconfig.base.json\nCREATE libs/core/prisma-tools/src/lib/prisma-tools.configuration.ts\nCREATE libs/core/prisma-tools/src/lib/prisma-tools.constants.ts\nCREATE libs/core/prisma-tools/src/lib/prisma-tools.environments.ts\nCREATE libs/core/prisma-tools/src/lib/prisma-tools.module.ts\n"})}),"\n",(0,o.jsx)(n.p,{children:"In order not to copy similar code from test to test as part of the tests, we will create a library for test utilities."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Commands"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"./node_modules/.bin/nx g @nestjs-mod/schematics:library testing --buildable --publishable --directory=libs/testing --simpleName=true --projectNameAndRootFormat=as-provided --strict=true\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Console output"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$ ./node_modules/.bin/nx g @nestjs-mod/schematics:library testing --buildable --publishable --directory=libs/testing --simpleName=true --projectNameAndRootFormat=as-provided --strict=true\n\n NX  Generating @nestjs-mod/schematics:library\n\nCREATE libs/testing/tsconfig.json\nCREATE libs/testing/src/index.ts\nCREATE libs/testing/tsconfig.lib.json\nCREATE libs/testing/README.md\nCREATE libs/testing/package.json\nCREATE libs/testing/project.json\nCREATE libs/testing/.eslintrc.json\nCREATE libs/testing/jest.config.ts\nCREATE libs/testing/tsconfig.spec.json\nUPDATE tsconfig.base.json\nCREATE libs/testing/src/lib/testing.configuration.ts\nCREATE libs/testing/src/lib/testing.constants.ts\nCREATE libs/testing/src/lib/testing.environments.ts\nCREATE libs/testing/src/lib/testing.module.ts\n"})}),"\n",(0,o.jsxs)(n.p,{children:["In addition to the test and ",(0,o.jsx)(n.code,{children:"Prisma"})," utilities, we will also have common utilities, we will also create our own library for them."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Commands"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"./node_modules/.bin/nx g @nestjs-mod/schematics:library common --buildable --publishable --directory=libs/common --simpleName=true --projectNameAndRootFormat=as-provided --strict=true\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Console output"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$ ./node_modules/.bin/nx g @nestjs-mod/schematics:library common --buildable --publishable --directory=libs/common --simpleName=true --projectNameAndRootFormat=as-provided --strict=true\n\n NX  Generating @nestjs-mod/schematics:library\n\nCREATE libs/common/tsconfig.json\nCREATE libs/common/src/index.ts\nCREATE libs/common/tsconfig.lib.json\nCREATE libs/common/README.md\nCREATE libs/common/package.json\nCREATE libs/common/project.json\nCREATE libs/common/.eslintrc.json\nCREATE libs/common/jest.config.ts\nCREATE libs/common/tsconfig.spec.json\nUPDATE tsconfig.base.json\nCREATE libs/common/src/lib/common.configuration.ts\nCREATE libs/common/src/lib/common.constants.ts\nCREATE libs/common/src/lib/common.environments.ts\nCREATE libs/common/src/lib/common.module.ts\n"})}),"\n",(0,o.jsx)(n.p,{children:"Now we are creating a business model."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Commands"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"./node_modules/.bin/nx g @nestjs-mod/schematics:library webhook --buildable --publishable --directory=libs/feature/webhook --simpleName=true --projectNameAndRootFormat=as-provided --strict=true\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Console output"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$ ./node_modules/.bin/nx g @nestjs-mod/schematics:library webhook --buildable --publishable --directory=libs/feature/webhook --simpleName=true --projectNameAndRootFormat=as-provided --strict=true\n\n NX  Generating @nestjs-mod/schematics:library\n\nCREATE libs/feature/webhook/tsconfig.json\nCREATE libs/feature/webhook/src/index.ts\nCREATE libs/feature/webhook/tsconfig.lib.json\nCREATE libs/feature/webhook/README.md\nCREATE libs/feature/webhook/package.json\nCREATE libs/feature/webhook/project.json\nCREATE libs/feature/webhook/.eslintrc.json\nCREATE libs/feature/webhook/jest.config.ts\nCREATE libs/feature/webhook/tsconfig.spec.json\nUPDATE tsconfig.base.json\nCREATE libs/feature/webhook/src/lib/webhook.configuration.ts\nCREATE libs/feature/webhook/src/lib/webhook.constants.ts\nCREATE libs/feature/webhook/src/lib/webhook.environments.ts\nCREATE libs/feature/webhook/src/lib/webhook.module.ts\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-adding-a-nestjs-mod-module-for-working-with-migrations-and-a-module-for-generating-a-prisma-client",children:"3. Adding a NestJS-mod module for working with migrations and a module for generating a Prisma client"}),"\n",(0,o.jsxs)(n.p,{children:["Since for the ",(0,o.jsx)(n.code,{children:"@nestjs-mod/prisma"})," module to work, it is necessary to transfer the module with the generated client to our database, which does not yet exist, then we transfer the ",(0,o.jsx)(n.code,{children:"@nestjs-mod/prisma"})," itself, since it has a stub."]}),"\n",(0,o.jsxs)(n.p,{children:["Adding new modules to ",(0,o.jsx)(n.code,{children:"apps/server/src/main.ts"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { WEBHOOK_FEATURE, WEBHOOK_FOLDER } from '@nestjs-mod-fullstack/webhook';\n\n// ...\n\nbootstrapNestApplication({\n  modules: {\n    // ...\n    core: [\n      // ...\n      PrismaModule.forRoot({\n        staticConfiguration: {\n          schemaFile: join(rootFolder, WEBHOOK_FOLDER, 'src', 'prisma', PRISMA_SCHEMA_FILE),\n          featureName: WEBHOOK_FEATURE,\n          prismaModule: isInfrastructureMode() ? import(`@nestjs-mod/prisma`) : import(`@nestjs-mod/prisma`),\n          addMigrationScripts: false,\n          nxProjectJsonFile: join(rootFolder, WEBHOOK_FOLDER, PROJECT_JSON_FILE),\n        },\n      }),\n    ],\n    // ...\n    infrastructure: [\n      // ...\n      DockerComposePostgreSQL.forFeatureAsync({\n        featureModuleName: WEBHOOK_FEATURE,\n        featureConfiguration: {\n          nxProjectJsonFile: join(rootFolder, WEBHOOK_FOLDER, PROJECT_JSON_FILE),\n        },\n      }),\n      Flyway.forRoot({\n        staticConfiguration: {\n          featureName: WEBHOOK_FEATURE,\n          migrationsFolder: join(rootFolder, WEBHOOK_FOLDER, 'src', 'migrations'),\n          configFile: join(rootFolder, FLYWAY_JS_CONFIG_FILE),\n          nxProjectJsonFile: join(rootFolder, WEBHOOK_FOLDER, PROJECT_JSON_FILE),\n        },\n      }),\n    ],\n  },\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:"We are launching the generation of additional code for infrastructure and customer prism."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Commands"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm run manual:prepare\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Console output"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'$ npm run manual:prepare\n\n> @nestjs-mod-fullstack/source@0.0.8 manual:prepare\n> npm run generate && npm run docs:infrastructure && npm run test\n\n\n> @nestjs-mod-fullstack/source@0.0.8 generate\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=generate --skip-nx-cache=true && npm run make-ts-list && npm run lint:fix\n\n\n   \u2714  nx run server:generate (12s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target generate for project server (12s)\n\n\n> @nestjs-mod-fullstack/source@0.0.8 make-ts-list\n> ./node_modules/.bin/rucken make-ts-list\n\n\n> @nestjs-mod-fullstack/source@0.0.8 lint:fix\n> npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=lint --fix\n\n\n> @nestjs-mod-fullstack/source@0.0.8 tsc:lint\n> ./node_modules/.bin/tsc --noEmit -p tsconfig.base.json\n\n\n   \u2714  nx run server-e2e:lint (1s)\n   \u2714  nx run app-angular-rest-sdk:lint (1s)\n   \u2714  nx run client:lint (1s)\n   \u2714  nx run server:lint (1s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target lint for 4 projects (2s)\n\n      With additional flags:\n        --fix=true\n\n\n> @nestjs-mod-fullstack/source@0.0.8 docs:infrastructure\n> export NESTJS_MODE=infrastructure && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source,client* --all -t=serve --parallel=false -- --watch=false --inspect=false\n\n\n NX   Running target serve for project server:\n\n- server\n\nWith additional flags:\n  --watch=false\n  --inspect=false\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n> nx run server:serve:development --watch=false --inspect=false\n\nchunk (runtime: main) main.js (main) 17 KiB [entry] [rendered]\nwebpack compiled successfully (f0ad59aa03def552)\n[08:58:04.616] INFO (70001): Starting Nest application...\n    context: "NestFactory"\n[08:58:04.617] INFO (70001): DefaultNestApp dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): ProjectUtilsSettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DefaultNestApplicationInitializerSettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DefaultNestApplicationInitializerShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): NestjsPinoLoggerModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): NestjsPinoLoggerModuleShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): TerminusHealthCheckModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DefaultNestApplicationListenerSettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DefaultNestApplicationListenerShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): PrismaModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): AppModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): AppModuleShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): PrismaModule dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): InfrastructureMarkdownReportGeneratorSettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): Pm2Settings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): Pm2Shared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DockerComposeSettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DockerComposePostgreSQLSettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DockerCompose dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DockerComposePostgreSQL dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DockerComposePostgreSQLSettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DockerComposePostgreSQLShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): FlywaySettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): FlywayShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DockerComposePostgreSQL dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): PrismaModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): PrismaModuleShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): PrismaModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): PrismaModuleShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): InfrastructureMarkdownReportGeneratorSettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): InfrastructureMarkdownReportStorage dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): InfrastructureMarkdownReportStorageSettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DockerCompose dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): FlywaySettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): FlywayShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): FlywaySettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): FlywayShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DefaultNestApplicationListenerSettings dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DefaultNestApplicationListenerShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DockerComposeShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): InfrastructureMarkdownReportStorageShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DefaultNestApplicationInitializer dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DefaultNestApplicationListener dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): PrismaModule dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): PrismaModule dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): InfrastructureMarkdownReportGenerator dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DockerComposePostgreSQL dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): Flyway dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): Flyway dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DefaultNestApplicationListener dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): NestjsPinoLoggerModule dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): TerminusModule dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): TerminusModule dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): ServeStaticModule dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): ProjectUtilsShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): InfrastructureMarkdownReportGeneratorShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): Pm2 dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DockerCompose dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DockerComposePostgreSQL dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): PrismaModule dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): PrismaModule dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): InfrastructureMarkdownReportGeneratorShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): Flyway dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): Flyway dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): InfrastructureMarkdownReportGenerator dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): LoggerModule dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): DockerComposePostgreSQLShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): PrismaModuleShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): TerminusHealthCheckModuleShared dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): TerminusHealthCheckModule dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.617] INFO (70001): AppModule dependencies initialized\n    context: "InstanceLoader"\n[08:58:04.637] INFO (70001): TerminusHealthCheckController {/api/health}:\n    context: "RoutesResolver"\n[08:58:04.639] INFO (70001): Mapped {/api/health, GET} route\n    context: "RouterExplorer"\n[08:58:04.639] INFO (70001): AppController {/api}:\n    context: "RoutesResolver"\n[08:58:04.640] INFO (70001): Mapped {/api, GET} route\n    context: "RouterExplorer"\n[08:58:04.640] INFO (70001): Mapped {/api/demo, POST} route\n    context: "RouterExplorer"\n[08:58:04.640] INFO (70001): Mapped {/api/demo/:id, GET} route\n    context: "RouterExplorer"\n[08:58:04.640] INFO (70001): Mapped {/api/demo/:id, DELETE} route\n    context: "RouterExplorer"\n[08:58:04.641] INFO (70001): Mapped {/api/demo, GET} route\n    context: "RouterExplorer"\n[08:58:04.642] INFO (70001): Connected to database!\n    context: "PrismaClient"\n[08:58:04.687] DEBUG (70001):\n    0: "SERVER_ROOT_DATABASE_URL: Description=\'Connection string for PostgreSQL with root credentials (example: postgres://postgres:postgres_password@localhost:5432/postgres?schema=public, username must be \\"postgres\\")\', Original Name=\'rootDatabaseUrl\'"\n    1: "SERVER_PORT: Description=\'The port on which to run the server.\', Default=\'3000\', Original Name=\'port\'"\n    2: "SERVER_HOSTNAME: Description=\'Hostname on which to listen for incoming packets.\', Original Name=\'hostname\'"\n    3: "SERVER_WEBHOOK_DATABASE_URL: Description=\'Connection string for PostgreSQL with module credentials (example: postgres://feat:feat_password@localhost:5432/feat?schema=public)\', Original Name=\'databaseUrl\'"\n    4: "SERVER_WEBHOOK_DATABASE_URL: Description=\'Connection string for PostgreSQL with module credentials (example: postgres://feat:feat_password@localhost:5432/feat?schema=public)\', Original Name=\'databaseUrl\'"\n    context: "All application environments"\n[08:58:04.716] INFO (70001): Nest application successfully started\n    context: "NestApplication"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target serve for project server\n\n\n\n> @nestjs-mod-fullstack/source@0.0.8 test\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=test --skip-nx-cache=true --passWithNoTests --output-style=stream-without-prefixes\n\n\n\n> nx run app-angular-rest-sdk:test --passWithNoTests\n\n\n> nx run app-rest-sdk:test --passWithNoTests\n\n\n> nx run webhook:test --passWithNoTests\n\n NX   Running target test for 8 projects\n   \u2714  nx run app-angular-rest-sdk:test (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 8 projects\n   \u2714  nx run app-rest-sdk:test (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n   \u2714  nx run webhook:test (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n   \u2714  nx run prisma-tools:test (1s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n   \u2714  nx run testing:test (1s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n   \u2714  nx run common:test (2s)\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 8 projects\n\n      With additional flags:\n        --passWithNoTests=true\n\n   \u2192  Executing 2/2 remaining tasks in parallel...\n   \u2714  nx run client:test (6s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 8 projects\n\n      With additional flags:\n   \u2714  nx run server:test (5s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target test for 8 projects (8s)\n\n      With additional flags:\n        --passWithNoTests=true\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Now we have generated all the Prisma clients and need to update the import in the file ",(0,o.jsx)(n.code,{children:"apps/server/src/main.ts"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { WEBHOOK_FEATURE, WEBHOOK_FOLDER } from '@nestjs-mod-fullstack/webhook';\n\n// ...\n\nbootstrapNestApplication({\n  modules: {\n    // ...\n    core: [\n      // ...\n      PrismaModule.forRoot({\n        staticConfiguration: {\n          schemaFile: join(rootFolder, WEBHOOK_FOLDER, 'src', 'prisma', PRISMA_SCHEMA_FILE),\n          featureName: WEBHOOK_FEATURE,\n          prismaModule: isInfrastructureMode() ? import(`@nestjs-mod/prisma`) : import(`@nestjs-mod-fullstack/webhook`), // <-- update\n          addMigrationScripts: false,\n          nxProjectJsonFile: join(rootFolder, WEBHOOK_FOLDER, PROJECT_JSON_FILE),\n        },\n      }),\n    ],\n  },\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"4-adding-migrations-with-the-necessary-tables-and-dictionaries",children:"4. Adding migrations with the necessary tables and dictionaries"}),"\n",(0,o.jsxs)(n.p,{children:["I usually create migration files with my hands using this template: ",(0,o.jsx)(n.code,{children:"V%Y%m%d%H%M__New Migration.sql"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["After starting the generation of additional infrastructure code, additional commands for working with migrations appear in the library, the same commands can be run from the scripts of the root ",(0,o.jsx)(n.code,{children:"package.json"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Commands"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# create migrations folder\nmkdir ./libs/feature/webhook/src/migrations\nnpm run flyway:create:webhook\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Console output"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$ mkdir ./libs/feature/webhook/src/migrations\nnpm rumkdir ./libs/feature/webhook/src/migrations\n\n$ npm run flyway:create:webhook\n\n> @nestjs-mod-fullstack/source@0.0.8 flyway:create:webhook\n> ./node_modules/.bin/nx run webhook:flyway-create-migration\n\n\n> nx run webhook:flyway-create-migration\n\n> echo 'select 1;' > ./libs/feature/webhook/src/migrations/V`date +%Y%m%d%H%M`__NewMigration.sql\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target flyway-create-migration for project webhook (42ms)\n\n\n NX   Nx detected a flaky task\n\n  webhook:flyway-create-migration\n\nFlaky tasks can disrupt your CI pipeline. Automatically retry them with Nx Cloud. Learn more at https://nx.dev/ci/features/flaky-tasks\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Rename the new migration from ",(0,o.jsx)(n.code,{children:"V202409250909__New Migration.sql"})," to ",(0,o.jsx)(n.code,{children:"V202409250909__Init.sql"})," and describe the migrations to create all the necessary tables."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sql",children:'DO $$\nBEGIN\n    CREATE TYPE "WebhookRole" AS enum(\n        \'Admin\',\n        \'User\'\n);\nEXCEPTION\n    WHEN duplicate_object THEN\n        NULL;\nEND\n$$;\n\nDO $$\nBEGIN\n    CREATE TYPE "WebhookStatus" AS enum(\n        \'Pending\',\n        \'Process\',\n        \'Success\',\n        \'Error\',\n        \'Timeout\'\n);\nEXCEPTION\n    WHEN duplicate_object THEN\n        NULL;\nEND\n$$;\n\nCREATE TABLE IF NOT EXISTS "WebhookUser"(\n    "id" uuid NOT NULL DEFAULT uuid_generate_v4(),\n    "externalTenantId" uuid NOT NULL,\n    "externalUserId" uuid NOT NULL,\n    "userRole" "WebhookRole" NOT NULL,\n    "createdAt" timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    "updatedAt" timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    CONSTRAINT "PK_WEBHOOK_USER" PRIMARY KEY ("id")\n);\n\nCREATE UNIQUE INDEX IF NOT EXISTS "UQ_WEBHOOK_USER" ON "WebhookUser"("externalTenantId", "externalUserId");\n\nCREATE INDEX IF NOT EXISTS "IDX_WEBHOOK_USER__EXTERNAL_TENANT_ID" ON "WebhookUser"("externalTenantId");\n\nCREATE INDEX IF NOT EXISTS "IDX_WEBHOOK_USER__USER_ROLE" ON "WebhookUser"("externalTenantId", "userRole");\n\nCREATE TABLE IF NOT EXISTS "Webhook"(\n    "id" uuid NOT NULL DEFAULT uuid_generate_v4(),\n    "eventName" varchar(512) NOT NULL,\n    "endpoint" varchar(512) NOT NULL,\n    "enabled" boolean NOT NULL,\n    "headers" jsonb,\n    "requestTimeout" int,\n    "externalTenantId" uuid NOT NULL,\n    "createdBy" uuid NOT NULL CONSTRAINT "FK_WEBHOOK__CREATED_BY" REFERENCES "WebhookUser",\n    "updatedBy" uuid NOT NULL CONSTRAINT "FK_WEBHOOK__UPDATED_BY" REFERENCES "WebhookUser",\n    "createdAt" timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    "updatedAt" timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    CONSTRAINT "PK_WEBHOOK" PRIMARY KEY ("id")\n);\n\nCREATE INDEX IF NOT EXISTS "IDX_WEBHOOK__EXTERNAL_TENANT_ID" ON "Webhook"("externalTenantId");\n\nCREATE INDEX IF NOT EXISTS "IDX_WEBHOOK__ENABLED" ON "Webhook"("externalTenantId", "enabled");\n\nCREATE INDEX IF NOT EXISTS "IDX_WEBHOOK__EVENT_NAME" ON "Webhook"("externalTenantId", "eventName");\n\nCREATE TABLE IF NOT EXISTS "WebhookLog"(\n    "id" uuid NOT NULL DEFAULT uuid_generate_v4(),\n    "request" jsonb NOT NULL,\n    "responseStatus" varchar(20) NOT NULL,\n    "response" jsonb,\n    "webhookStatus" "WebhookStatus" NOT NULL,\n    "webhookId" uuid NOT NULL CONSTRAINT "FK_WEBHOOK__WEBHOOK_ID" REFERENCES "Webhook",\n    "externalTenantId" uuid NOT NULL,\n    "createdAt" timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    "updatedAt" timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    CONSTRAINT "PK_WEBHOOK_LOG" PRIMARY KEY ("id")\n);\n\nCREATE INDEX "IDX_WEBHOOK_LOG__EXTERNAL_TENANT_ID" ON "WebhookLog"("externalTenantId");\n\nCREATE INDEX "IDX_WEBHOOK_LOG__WEBHOOK_ID" ON "WebhookLog"("externalTenantId", "webhookId");\n\nCREATE INDEX "IDX_WEBHOOK_LOG__WEBHOOK_STATUS" ON "WebhookLog"("externalTenantId", "webhookStatus");\n'})}),"\n",(0,o.jsx)(n.h3,{id:"5-adding-a-new-environment-variable-to-all-project-launch-modes-and-deployment-parameters",children:"5. Adding a new environment variable to all project launch modes and deployment parameters"}),"\n",(0,o.jsx)(n.p,{children:"The infrastructure code generator has created a new empty environment variable to connect to the new database, it must be filled in."}),"\n",(0,o.jsxs)(n.p,{children:["Updating the file ",(0,o.jsx)(n.code,{children:".env"})," and ",(0,o.jsx)(n.code,{children:"example.env"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# ...\nSERVER_WEBHOOK_DATABASE_URL=postgres://webhook:webhook_password@localhost:5432/webhook?schema=public\n# ...\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Updating the file ",(0,o.jsx)(n.code,{children:".docker/docker-compose-full.env"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# ...\nSERVER_WEBHOOK_DATABASE_URL=postgres://webhook:webhook_password@nestjs-mod-fullstack-postgre-sql:5432/webhook?schema=public\n# ...\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Updating the file ",(0,o.jsx)(n.code,{children:".docker/docker-compose-full.yml"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# ...\nservices:\n  # ...\n  nestjs-mod-fullstack-postgre-sql-migrations:\n    # ...\n    environment:\n      # ...\n      SERVER_WEBHOOK_DATABASE_URL: '${SERVER_WEBHOOK_DATABASE_URL}'\n  nestjs-mod-fullstack-server:\n    # ...\n    environment:\n      # ...\n      SERVER_WEBHOOK_DATABASE_URL: '${SERVER_WEBHOOK_DATABASE_URL}'\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Updating the file ",(0,o.jsx)(n.code,{children:".github/workflows/docker-compose.workflows.yml"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"name: 'Docker Compose'\n# ...\nenv:\n  # ...\njobs:\n  # ...\n  deploy:\n    environment: docker-compose-full\n    # ...\n    steps:\n      - name: Deploy\n        env:\n          # ...\n          SERVER_WEBHOOK_DATABASE_URL: ${{ secrets.SERVER_WEBHOOK_DATABASE_URL }}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Updating the file ",(0,o.jsx)(n.code,{children:".kubernetes/templates/docker-compose-infra.yml"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"version: '3'\n# ...\nservices:\n  # ...\n  nestjs-mod-fullstack-postgre-sql-migrations:\n    # ...\n    environment:\n      # ...\n      SERVER_WEBHOOK_DATABASE_URL: 'postgres://%SERVER_WEBHOOK_DATABASE_USERNAME%:%SERVER_WEBHOOK_DATABASE_PASSWORD%@nestjs-mod-fullstack-postgre-sql:5432/%SERVER_WEBHOOK_DATABASE_NAME%?schema=public'\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Updating the file ",(0,o.jsx)(n.code,{children:".kubernetes/templates/server/1.configmap.yaml"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\n# ...\ndata:\n  # ...\n  SERVER_WEBHOOK_DATABASE_URL: 'postgres://%SERVER_WEBHOOK_DATABASE_USERNAME%:%SERVER_WEBHOOK_DATABASE_PASSWORD%@10.0.1.1:5432/%SERVER_WEBHOOK_DATABASE_NAME%?schema=public'\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Updating the file ",(0,o.jsx)(n.code,{children:".github/workflows/kubernetes.yml"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"name: 'Kubernetes'\n# ...\nenv:\n  # ...\njobs:\n  # ...\n  deploy:\n    environment: kubernetes\n    # ...\n    steps:\n      # ...\n      - name: Deploy infrastructure\n        # ...\n        env:\n          # ...\n          SERVER_WEBHOOK_DATABASE_NAME: ${{ secrets.SERVER_WEBHOOK_DATABASE_NAME }}\n          SERVER_WEBHOOK_DATABASE_PASSWORD: ${{ secrets.SERVER_WEBHOOK_DATABASE_PASSWORD }}\n          SERVER_WEBHOOK_DATABASE_USERNAME: ${{ secrets.SERVER_WEBHOOK_DATABASE_USERNAME }}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Updating the file ",(0,o.jsx)(n.code,{children:".kubernetes/set-env.sh"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# ...\n# server: webhook database\nif [ -z "${SERVER_WEBHOOK_DATABASE_PASSWORD}" ]; then\n    export SERVER_WEBHOOK_DATABASE_PASSWORD=webhook_password\nfi\nif [ -z "${SERVER_WEBHOOK_DATABASE_USERNAME}" ]; then\n    export SERVER_WEBHOOK_DATABASE_USERNAME=${NAMESPACE}_webhook\nfi\nif [ -z "${SERVER_WEBHOOK_DATABASE_NAME}" ]; then\n    export SERVER_WEBHOOK_DATABASE_NAME=${NAMESPACE}_webhook\nfi\n'})}),"\n",(0,o.jsx)(n.h3,{id:"6-we-launch-the-database-and-apply-all-migrations",children:"6. We launch the database and apply all migrations"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Commands"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm run docker-compose:start-prod:server\nnpm run db:create-and-fill\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Console output"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$ npm run docker-compose:start-prod:server\n\n> @nestjs-mod-fullstack/source@0.0.8 docker-compose:start-prod:server\n> export COMPOSE_INTERACTIVE_NO_CLI=1 && docker compose -f ./apps/server/docker-compose-prod.yml --env-file ./apps/server/docker-compose-prod.env --compatibility up -d\n\nWARN[0000] /home/endy/Projects/nestjs-mod/nestjs-mod-fullstack/apps/server/docker-compose-prod.yml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion\n[+] Running 2/2\n \u2714 Network server_server-network  Created                                                                                                                   0.1s\n \u2714 Container server-postgre-sql   Started\n\n $ npm run db:create-and-fill\n\n> @nestjs-mod-fullstack/source@0.0.8 db:create-and-fill\n> npm run db:create && npm run flyway:migrate\n\n\n> @nestjs-mod-fullstack/source@0.0.8 db:create\n> ./node_modules/.bin/nx run-many -t=db-create\n\n\n   \u2714  nx run webhook:db-create (750ms)\n   \u2714  nx run server:db-create (760ms)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target db-create for 2 projects (799ms)\n\n\n> @nestjs-mod-fullstack/source@0.0.8 flyway:migrate\n> ./node_modules/.bin/nx run-many -t=flyway-migrate\n\n\n   \u2714  nx run server:flyway-migrate (2s)\n   \u2714  nx run webhook:flyway-migrate (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target flyway-migrate for 2 projects (2s)\n"})}),"\n",(0,o.jsx)(n.h3,{id:"7-lets-recreate-the-prisma-schema-using-the-new-database",children:"7. Let's recreate the Prisma schema using the new database"}),"\n",(0,o.jsxs)(n.p,{children:["We update the ",(0,o.jsx)(n.code,{children:"libs/feature/webhook/src/prisma/schema.prisma"})," scheme previously created by the Prisma generator, and add an additional dto file generator."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-prisma",children:'generator client {\n  provider = "prisma-client-js"\n  engineType = "binary"\n  output   = "../../../../../node_modules/@prisma/webhook-client"\n\n}\n\ndatasource db {\n  provider          = "postgres"\n  url               = env("SERVER_WEBHOOK_DATABASE_URL")\n}\n\ngenerator prismaClassGenerator {\n  provider                 = "prisma-class-generator"\n  output                   = "../lib/generated/rest/dto"\n  dryRun                   = "false"\n  separateRelationFields   = "false"\n  useNonNullableAssertions = "true"\n  makeIndexFile            = "false"\n  clientImportPath         = "@prisma/webhook-client"\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Starting the creation of a schema based on an existing database"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Commands"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm run prisma:pull\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Console output"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$ npm run prisma:pull\n\n> @nestjs-mod-fullstack/source@0.0.8 prisma:pull\n> ./node_modules/.bin/nx run-many -t=prisma-pull\n\n\n   \u2714  nx run server:prisma-pull (583ms)\n   \u2714  nx run webhook:prisma-pull (609ms)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target prisma-pull for 2 projects (649ms)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Checking the contents of the updated schema ",(0,o.jsx)(n.code,{children:"libs/feature/webhook/src/prisma/schema.prisma"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-prisma",children:'generator client {\n  provider   = "prisma-client-js"\n  output     = "../../../../../node_modules/@prisma/webhook-client"\n  engineType = "binary"\n}\n\ngenerator prismaClassGenerator {\n  provider                 = "prisma-class-generator"\n  output                   = "../lib/generated/rest/dto"\n  dryRun                   = "false"\n  separateRelationFields   = "false"\n  useNonNullableAssertions = "true"\n  makeIndexFile            = "false"\n  clientImportPath         = "@prisma/webhook-client"\n}\n\ndatasource db {\n  provider = "postgres"\n  url      = env("SERVER_WEBHOOK_DATABASE_URL")\n}\n\nmodel Webhook {\n  id                                         String       @id(map: "PK_WEBHOOK") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid\n  eventName                                  String       @db.VarChar(512)\n  endpoint                                   String       @db.VarChar(512)\n  enabled                                    Boolean\n  headers                                    Json?\n  requestTimeout                             Int?\n  externalTenantId                           String       @db.Uuid\n  createdBy                                  String       @db.Uuid\n  updatedBy                                  String       @db.Uuid\n  createdAt                                  DateTime     @default(now()) @db.Timestamp(6)\n  updatedAt                                  DateTime     @default(now()) @db.Timestamp(6)\n  WebhookUser_Webhook_createdByToWebhookUser WebhookUser  @relation("Webhook_createdByToWebhookUser", fields: [createdBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_WEBHOOK__CREATED_BY")\n  WebhookUser_Webhook_updatedByToWebhookUser WebhookUser  @relation("Webhook_updatedByToWebhookUser", fields: [updatedBy], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_WEBHOOK__UPDATED_BY")\n  WebhookLog                                 WebhookLog[]\n\n  @@index([externalTenantId, enabled], map: "IDX_WEBHOOK__ENABLED")\n  @@index([externalTenantId, eventName], map: "IDX_WEBHOOK__EVENT_NAME")\n  @@index([externalTenantId], map: "IDX_WEBHOOK__EXTERNAL_TENANT_ID")\n}\n\nmodel WebhookLog {\n  id               String        @id(map: "PK_WEBHOOK_LOG") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid\n  request          Json\n  responseStatus   String        @db.VarChar(20)\n  response         Json?\n  webhookStatus    WebhookStatus\n  webhookId        String        @db.Uuid\n  externalTenantId String        @db.Uuid\n  createdAt        DateTime      @default(now()) @db.Timestamp(6)\n  updatedAt        DateTime      @default(now()) @db.Timestamp(6)\n  Webhook          Webhook       @relation(fields: [webhookId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_WEBHOOK__WEBHOOK_ID")\n\n  @@index([externalTenantId], map: "IDX_WEBHOOK_LOG__EXTERNAL_TENANT_ID")\n  @@index([externalTenantId, webhookId], map: "IDX_WEBHOOK_LOG__WEBHOOK_ID")\n  @@index([externalTenantId, webhookStatus], map: "IDX_WEBHOOK_LOG__WEBHOOK_STATUS")\n}\n\nmodel WebhookUser {\n  id                                     String      @id(map: "PK_WEBHOOK_USER") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid\n  externalTenantId                       String      @db.Uuid\n  externalUserId                         String      @db.Uuid\n  userRole                               WebhookRole\n  createdAt                              DateTime    @default(now()) @db.Timestamp(6)\n  updatedAt                              DateTime    @default(now()) @db.Timestamp(6)\n  Webhook_Webhook_createdByToWebhookUser Webhook[]   @relation("Webhook_createdByToWebhookUser")\n  Webhook_Webhook_updatedByToWebhookUser Webhook[]   @relation("Webhook_updatedByToWebhookUser")\n\n  @@unique([externalTenantId, externalUserId], map: "UQ_WEBHOOK_USER")\n  @@index([externalTenantId], map: "IDX_WEBHOOK_USER__EXTERNAL_TENANT_ID")\n  @@index([externalTenantId, userRole], map: "IDX_WEBHOOK_USER__USER_ROLE")\n}\n\nmodel migrations {\n  installed_rank Int      @id(map: "__migrations_pk")\n  version        String?  @db.VarChar(50)\n  description    String   @db.VarChar(200)\n  type           String   @db.VarChar(20)\n  script         String   @db.VarChar(1000)\n  checksum       Int?\n  installed_by   String   @db.VarChar(100)\n  installed_on   DateTime @default(now()) @db.Timestamp(6)\n  execution_time Int\n  success        Boolean\n\n  @@index([success], map: "__migrations_s_idx")\n  @@map("__migrations")\n}\n\nenum WebhookRole {\n  Admin\n  User\n}\n\nenum WebhookStatus {\n  Pending\n  Process\n  Success\n  Error\n  Timeout\n}\n\n'})}),"\n",(0,o.jsx)(n.h3,{id:"8-we-regenerate-the-prisma-client-create-dto-files-and-check-that-they-have-been-successfully-created",children:"8. We regenerate the Prisma client, create DTO files and check that they have been successfully created"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Commands"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm run prisma:generate\nls libs/feature/webhook/src/lib/generated/rest/dto\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Console output"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm run prisma:generate\n\n> @nestjs-mod-fullstack/source@0.0.8 prisma:generate\n> ./node_modules/.bin/nx run-many -t=prisma-generate\n\n\n   \u2714  nx run server:prisma-generate (2s)\n   \u2714  nx run webhook:prisma-generate (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target prisma-generate for 2 projects (2s)\n\n $ ls libs/feature/webhook/src/lib/generated/rest/dto\nmigrations.ts  webhook_log.ts  webhook.ts  webhook_user.ts\n"})}),"\n",(0,o.jsx)(n.h3,{id:"9-restarting-in-pm2-development-mode",children:"9. Restarting in pm2 development mode"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Commands"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm run pm2-full:dev:stop\nnpm run pm2-full:dev:start\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Console output"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$ npm run pm2-full:dev:stop\n\n> @nestjs-mod-fullstack/source@0.0.8 pm2-full:dev:stop\n> npm run docker-compose:stop-prod:server && npm run pm2:dev:stop\n\n> @nestjs-mod-fullstack/source@0.0.8 docker-compose:stop-prod:server\n> export COMPOSE_INTERACTIVE_NO_CLI=1 && docker compose -f ./apps/server/docker-compose-prod.yml --env-file ./apps/server/docker-compose-prod.env down\n\nWARN[0000] /home/endy/Projects/nestjs-mod/nestjs-mod-fullstack/apps/server/docker-compose-prod.yml: the attribute version is obsolete, it will be ignored, please remove it to avoid potential confusion\n[+] Running 2/2\n\u2714 Container server-postgre-sql Removed 0.2s\n\u2714 Network server_server-network Removed 0.1s\n\n> @nestjs-mod-fullstack/source@0.0.8 pm2:dev:stop\n> ./node_modules/.bin/pm2 delete all\n\n[PM2][WARN] No process found\n\n$ npm run pm2-full:dev:start\n\n> @nestjs-mod-fullstack/source@0.0.8 pm2-full:dev:start\n> npm run generate && npm run docker-compose:start-prod:server && npm run db:create-and-fill && npm run pm2:dev:start\n\n> @nestjs-mod-fullstack/source@0.0.8 generate\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=generate --skip-nx-cache=true && npm run make-ts-list && npm run lint:fix\n\n\u2714 nx run webhook:generate (2s)\n\u2714 nx run server:generate (13s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nNX Successfully ran target generate for 2 projects (13s)\n\n> @nestjs-mod-fullstack/source@0.0.8 make-ts-list\n> ./node_modules/.bin/rucken make-ts-list\n\n> @nestjs-mod-fullstack/source@0.0.8 lint:fix\n> npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=lint --fix\n\n> @nestjs-mod-fullstack/source@0.0.8 tsc:lint\n> ./node_modules/.bin/tsc --noEmit -p tsconfig.base.json\n\n\u2714 nx run app-angular-rest-sdk:lint [existing outputs match the cache, left as is]\n\u2714 nx run server-e2e:lint [existing outputs match the cache, left as is]\n\u2714 nx run client:lint [existing outputs match the cache, left as is]\n\u2714 nx run server:lint (1s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nNX Successfully ran target lint for 4 projects (1s)\n\n      With additional flags:\n        --fix=true\n\nNx read the output from the cache instead of running the command for 3 out of 4 tasks.\n\n> @nestjs-mod-fullstack/source@0.0.8 docker-compose:start-prod:server\n> export COMPOSE_INTERACTIVE_NO_CLI=1 && docker compose -f ./apps/server/docker-compose-prod.yml --env-file ./apps/server/docker-compose-prod.env --compatibility up -d\n\nWARN[0000] /home/endy/Projects/nestjs-mod/nestjs-mod-fullstack/apps/server/docker-compose-prod.yml: the attribute version is obsolete, it will be ignored, please remove it to avoid potential confusion\n[+] Running 2/2\n\u2714 Network server_server-network Created 0.1s\n\u2714 Container server-postgre-sql Started 0.3s\n\n> @nestjs-mod-fullstack/source@0.0.8 db:create-and-fill\n> npm run db:create && npm run flyway:migrate\n\n> @nestjs-mod-fullstack/source@0.0.8 db:create\n> ./node_modules/.bin/nx run-many -t=db-create\n\n\u2714 nx run server:db-create (747ms)\n\u2714 nx run webhook:db-create (752ms)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nNX Successfully ran target db-create for 2 projects (783ms)\n\n> @nestjs-mod-fullstack/source@0.0.8 flyway:migrate\n> ./node_modules/.bin/nx run-many -t=flyway-migrate\n\n\u2714 nx run server:flyway-migrate (2s)\n\u2714 nx run webhook:flyway-migrate (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nNX Successfully ran target flyway-migrate for 2 projects (2s)\n\n> @nestjs-mod-fullstack/source@0.0.8 pm2:dev:start\n> ./node_modules/.bin/pm2 start ./ecosystem.config.json && npm run wait-on -- --log http://localhost:3000/api/health --log http://localhost:4200\n\n[PM2][WARN] Applications server, client not running, starting...\n[PM2] App [server] launched (1 instances)\n[PM2] App [client] launched (1 instances)\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 id \u2502 name \u2502 namespace \u2502 version \u2502 mode \u2502 pid \u2502 uptime \u2502 \u21ba \u2502 status \u2502 cpu \u2502 mem \u2502 user \u2502 watching \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1 \u2502 client \u2502 default \u2502 N/A \u2502 fork \u2502 183250 \u2502 0s \u2502 0 \u2502 online \u2502 0% \u2502 18.7mb \u2502 endy \u2502 disabled \u2502\n\u2502 0 \u2502 server \u2502 default \u2502 N/A \u2502 fork \u2502 183249 \u2502 0s \u2502 0 \u2502 online \u2502 0% \u2502 25.7mb \u2502 endy \u2502 disabled \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n[PM2][WARN] Current process list is not synchronized with saved list. App nestjs-mod-fullstack differs. Type 'pm2 save' to synchronize.\n\n> @nestjs-mod-fullstack/source@0.0.8 wait-on\n> ./node_modules/.bin/wait-on --timeout=240000 --interval=1000 --window --verbose --log http://localhost:3000/api/health --log http://localhost:4200\n\nwaiting for 2 resources: http://localhost:3000/api/health, http://localhost:4200\nmaking HTTP(S) head request to url:http://localhost:3000/api/health ...\nmaking HTTP(S) head request to url:http://localhost:4200 ...\nHTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\nHTTP(S) error for http://localhost:4200 Error: connect ECONNREFUSED 127.0.0.1:4200\nmaking HTTP(S) head request to url:http://localhost:3000/api/health ...\nmaking HTTP(S) head request to url:http://localhost:4200 ...\nHTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\nHTTP(S) error for http://localhost:4200 Error: connect ECONNREFUSED 127.0.0.1:4200\nmaking HTTP(S) head request to url:http://localhost:3000/api/health ...\nHTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\nmaking HTTP(S) head request to url:http://localhost:4200 ...\nmaking HTTP(S) head request to url:http://localhost:3000/api/health ...\nmaking HTTP(S) head request to url:http://localhost:4200 ...\nHTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\nHTTP(S) result for http://localhost:4200: {\nstatus: 200,\nstatusText: 'OK',\nheaders: Object [AxiosHeaders] {\n'x-powered-by': 'Express',\n'access-control-allow-origin': '_',\n'accept-ranges': 'bytes',\n'content-type': 'text/html; charset=utf-8',\n'content-length': '586',\ndate: 'Wed, 25 Sep 2024 07:31:04 GMT',\nconnection: 'keep-alive',\n'keep-alive': 'timeout=5'\n},\ndata: ''\n}\nwaiting for 1 resources: http://localhost:3000/api/health\nHTTP(S) result for http://localhost:4200: {\nstatus: 200,\nstatusText: 'OK',\nheaders: Object [AxiosHeaders] {\n'x-powered-by': 'Express',\n'access-control-allow-origin': '_',\n'accept-ranges': 'bytes',\n'content-type': 'text/html; charset=utf-8',\n'content-length': '586',\ndate: 'Wed, 25 Sep 2024 07:31:04 GMT',\nconnection: 'keep-alive',\n'keep-alive': 'timeout=5'\n},\ndata: ''\n}\nmaking HTTP(S) head request to url:http://localhost:3000/api/health ...\nHTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\nmaking HTTP(S) head request to url:http://localhost:3000/api/health ...\nHTTP(S) result for http://localhost:3000/api/health: {\nstatus: 200,\nstatusText: 'OK',\nheaders: Object [AxiosHeaders] {\n'x-powered-by': 'Express',\nvary: 'Origin',\n'access-control-allow-credentials': 'true',\n'x-request-id': 'd64f5d8c-aab5-4ca1-ac4d-c394fddcabf5',\n'cache-control': 'no-cache, no-store, must-revalidate',\n'content-type': 'application/json; charset=utf-8',\n'content-length': '107',\netag: 'W/\"6b-ouXVoNOXyOxnMfI7caewF8/p97A\"',\ndate: 'Wed, 25 Sep 2024 07:31:05 GMT',\nconnection: 'keep-alive',\n'keep-alive': 'timeout=5'\n},\ndata: ''\n}\nwait-on(183303) complete\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"10-installing-the-libraries-that-will-be-needed-for-the-module-to-work",children:"10. Installing the libraries that will be needed for the module to work"}),"\n",(0,o.jsx)(n.p,{children:"Since the handlers will run the http method, you need to install axis and its NestJS module."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Commands"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm i --save @nestjs/axios axios\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Console output"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$ npm i --save @nestjs/axios axios\n\nadded 1 package, removed 2 packages, changed 1 package, and audited 2789 packages in 15s\n\n342 packages are looking for funding\n  run `npm fund` for details\n\n32 vulnerabilities (12 moderate, 20 high)\n\nTo address issues that do not require attention, run:\n  npm audit fix\n\nTo address all issues (including breaking changes), run:\n  npm audit fix --force\n\nRun `npm audit` for details.\n"})}),"\n",(0,o.jsx)(n.h3,{id:"11-deleting-unnecessary-files-from-created-libraries",children:"11. Deleting unnecessary files from created libraries"}),"\n",(0,o.jsx)(n.p,{children:"The generator creates a typical configuration of the NestJS-mod module, but we don't always need all the created files, so we delete all unnecessary ones."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"rm -rf libs/common/src/lib\nrm -rf libs/testing/src/lib\nrm -rf libs/core/prisma-tools/src/lib/prisma-tools.configuration.ts\n"})}),"\n",(0,o.jsx)(n.h3,{id:"12-adding-common-types-that-can-be-reused-in-other-modules",children:"12. Adding common types that can be reused in other modules"}),"\n",(0,o.jsx)(n.p,{children:"The type with parameters used in the CRUD query of many records."}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/common/src/lib/types/find-many-args.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class FindManyArgs {\n  @ApiPropertyOptional({ type: Number })\n  curPage?: number;\n\n  @ApiPropertyOptional({ type: Number })\n  perPage?: number;\n\n  @ApiPropertyOptional({ type: String })\n  searchText?: string;\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"The type with additional information returned as a result of the response of the request for many records is passed: the current page and the total number of records."}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/common/src/lib/types/find-many-response-meta.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class FindManyResponseMeta {\n  @ApiPropertyOptional({ type: Number })\n  curPage?: number;\n\n  @ApiPropertyOptional({ type: Number })\n  perPage?: number;\n\n  @ApiProperty({ type: Number })\n  totalResults!: number;\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"A type for returning the result as a single string when calling various procedures that do not return data."}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/common/src/lib/types/status-response.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { ApiProperty } from '@nestjs/swagger';\n\nexport class StatusResponse {\n  @ApiProperty({ type: String })\n  message!: string;\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"13-adding-the-prismatoolsmodule-module-with-additional-utilities-for-working-with-prisma-orm",children:'13. Adding the "PrismaToolsModule" module with additional utilities for working with Prisma-orm'}),"\n",(0,o.jsx)(n.p,{children:"There are very few utilities at this stage, but as the application expands, there will be more."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Module environment variables"})}),"\n",(0,o.jsxs)(n.p,{children:["Information on how to transfer them can be found in the infrastructure document ",(0,o.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/blob/master/apps/server/INFRASTRUCTURE.MD",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack/blob/master/apps/server/INFRASTRUCTURE.MD"}),", using the ",(0,o.jsx)(n.code,{children:"hidden: true"})," option we hide when generating ",(0,o.jsx)(n.code,{children:".env"})," files."]}),"\n",(0,o.jsx)(n.p,{children:"Example of environment variables:"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Key"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Sources"}),(0,o.jsx)(n.th,{children:"Constraints"}),(0,o.jsx)(n.th,{children:"Default"}),(0,o.jsx)(n.th,{children:"Value"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"useFilters"})}),(0,o.jsx)(n.td,{children:"Use filters."}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"obj['useFilters']"}),", ",(0,o.jsx)(n.code,{children:"process.env['SERVER_USE_FILTERS']"})]}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"paginationInitialPage"})}),(0,o.jsx)(n.td,{children:"Pagination initial page."}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"obj['paginationInitialPage']"}),", ",(0,o.jsx)(n.code,{children:"process.env['SERVER_PAGINATION_INITIAL_PAGE']"})]}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"1"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"1"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"paginationPerPageSteps"})}),(0,o.jsx)(n.td,{children:"Pagination per page steps."}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"obj['paginationPerPageSteps']"}),", ",(0,o.jsx)(n.code,{children:"process.env['SERVER_PAGINATION_PER_PAGE_STEPS']"})]}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:"-"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"paginationPerPage"})}),(0,o.jsx)(n.td,{children:"Pagination per page."}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"obj['paginationPerPage']"}),", ",(0,o.jsx)(n.code,{children:"process.env['SERVER_PAGINATION_PER_PAGE']"})]}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"5"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"5"})})]})]})]}),"\n",(0,o.jsxs)(n.p,{children:["Updating the file ",(0,o.jsx)(n.em,{children:"libs/core/prisma-tools/src/lib/prisma-tools.environments.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { ArrayOfStringTransformer, BooleanTransformer, EnvModel, EnvModelProperty, NumberTransformer } from '@nestjs-mod/common';\n\n@EnvModel()\nexport class PrismaToolsEnvironments {\n  @EnvModelProperty({\n    description: 'Use filters.',\n    transform: new BooleanTransformer(),\n    default: true,\n    hidden: true,\n  })\n  useFilters?: boolean;\n\n  @EnvModelProperty({\n    description: 'Pagination initial page.',\n    transform: new NumberTransformer(),\n    default: 1,\n    hidden: true,\n  })\n  paginationInitialPage?: number;\n\n  @EnvModelProperty({\n    description: 'Pagination per page steps.',\n    transform: new ArrayOfStringTransformer(),\n    default: [1, 2, 5, 10, 25, 100],\n    hidden: true,\n  })\n  paginationPerPageSteps?: (number | string)[];\n\n  @EnvModelProperty({\n    description: 'Pagination per page.',\n    transform: new NumberTransformer(),\n    default: 5,\n    hidden: true,\n  })\n  paginationPerPage?: number;\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Class with module errors"})}),"\n",(0,o.jsxs)(n.p,{children:["Although at this stage the backend is available as a ",(0,o.jsx)(n.code,{children:"REST"})," service, errors are not inherited from ",(0,o.jsx)(n.code,{children:"Http"})," errors, instead there is a special filter that maps errors."]}),"\n",(0,o.jsxs)(n.p,{children:["This class, dictionaries and error descriptions probably shouldn't have been in this module, well, I still haven't figured out where to move them, so in all my projects it all lies also in the ",(0,o.jsx)(n.code,{children:"PrismaToolsModule"})," module."]}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/core/prisma-tools/src/lib/prisma-tools.errors.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"export enum DatabaseErrorEnum {\n  COMMON = 'DB-000',\n  UNHANDLED_ERROR = 'DB-001',\n  UNIQUE_ERROR = 'DB-002',\n  INVALID_IDENTIFIER = 'DB-003',\n  INVALID_LINKED_TABLE_IDENTIFIER = 'DB-004',\n  DATABASE_QUERY_ERROR = 'DB-005',\n  NOT_FOUND_ERROR = 'DB-006',\n}\n\nexport const DATABASE_ERROR_ENUM_TITLES: Record<DatabaseErrorEnum, string> = {\n  [DatabaseErrorEnum.COMMON]: 'Common db error',\n  [DatabaseErrorEnum.UNHANDLED_ERROR]: 'Unhandled error',\n  [DatabaseErrorEnum.UNIQUE_ERROR]: 'Unique error',\n  [DatabaseErrorEnum.INVALID_IDENTIFIER]: 'Invalid identifier',\n  [DatabaseErrorEnum.INVALID_LINKED_TABLE_IDENTIFIER]: 'Invalid linked table identifier',\n  [DatabaseErrorEnum.DATABASE_QUERY_ERROR]: 'Database query error',\n  [DatabaseErrorEnum.NOT_FOUND_ERROR]: 'Not found error',\n};\n\nexport class DatabaseError<T = unknown> extends Error {\n  code = DatabaseErrorEnum.COMMON;\n  metadata?: T;\n\n  constructor(message?: string | DatabaseErrorEnum, code?: DatabaseErrorEnum, metadata?: T) {\n    const messageAsCode = Boolean(message && Object.values(DatabaseErrorEnum).includes(message as DatabaseErrorEnum));\n    const preparedCode = messageAsCode ? (message as DatabaseErrorEnum) : code;\n    const preparedMessage = preparedCode ? DATABASE_ERROR_ENUM_TITLES[preparedCode] : message;\n\n    code = preparedCode || DatabaseErrorEnum.COMMON;\n    message = preparedMessage || DATABASE_ERROR_ENUM_TITLES[code];\n\n    super(message);\n\n    this.code = code;\n    this.message = message;\n    this.metadata = metadata;\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Module Services"})}),"\n",(0,o.jsxs)(n.p,{children:["The modules have a service with various utilities, at the moment it has only two functions: converting part of the ",(0,o.jsx)(n.code,{children:"Prisma"}),"-orm errors into the format we need and a function for obtaining record offset based on frontend pagination."]}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/core/prisma-tools/src/lib/prisma-tools.service.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { FindManyArgs } from '@nestjs-mod-fullstack/common';\nimport { ConfigModel } from '@nestjs-mod/common';\nimport { Logger } from '@nestjs/common';\nimport { basename } from 'path';\nimport { PrismaToolsEnvironments } from './prisma-tools.environments';\nimport { DATABASE_ERROR_ENUM_TITLES, DatabaseErrorEnum } from './prisma-tools.errors';\n\n@ConfigModel()\nexport class PrismaToolsService {\n  private logger = new Logger(PrismaToolsService.name);\n\n  constructor(private readonly prismaToolsEnvironments: PrismaToolsEnvironments) {}\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  convertPrismaErrorToDbError(exception: any) {\n    try {\n      const stacktrace = String(exception?.stack)\n        .split(`${__dirname}/webpack:/${basename(__dirname)}/`)\n        .join('');\n      const originalError = Object.assign(new Error(), { stack: stacktrace });\n\n      if (String(exception?.name).startsWith('PrismaClient') || String(exception?.code).startsWith('P')) {\n        if (exception?.code === 'P2002') {\n          return {\n            message: DATABASE_ERROR_ENUM_TITLES[DatabaseErrorEnum.UNIQUE_ERROR],\n            stacktrace,\n            code: DatabaseErrorEnum.UNIQUE_ERROR,\n            metadata: exception?.meta,\n            originalError,\n          };\n        }\n\n        if (exception?.code === 'P2025') {\n          if (exception.meta?.['cause'] === 'Record to update not found.') {\n            return {\n              message: DATABASE_ERROR_ENUM_TITLES[DatabaseErrorEnum.INVALID_IDENTIFIER],\n              stacktrace,\n              code: DatabaseErrorEnum.INVALID_IDENTIFIER,\n              metadata: exception?.meta,\n              originalError,\n            };\n          }\n          const relatedTable = exception.meta?.['cause'].split(`'`)[1];\n          this.logger.debug({\n            modelName: exception.meta?.['modelName'],\n            relatedTable,\n          });\n\n          return {\n            message: DATABASE_ERROR_ENUM_TITLES[DatabaseErrorEnum.INVALID_LINKED_TABLE_IDENTIFIER],\n            stacktrace,\n            code: DatabaseErrorEnum.INVALID_LINKED_TABLE_IDENTIFIER,\n            metadata: exception?.meta,\n            originalError,\n          };\n        }\n\n        this.logger.debug({ ...exception });\n\n        return {\n          message: DATABASE_ERROR_ENUM_TITLES[DatabaseErrorEnum.DATABASE_QUERY_ERROR],\n          stacktrace,\n          code: DatabaseErrorEnum.DATABASE_QUERY_ERROR,\n          metadata: exception?.meta,\n          originalError,\n        };\n      } else {\n        console.log({ ...exception });\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (err: any) {\n      this.logger.error(err, err.stack);\n      return {\n        message: DATABASE_ERROR_ENUM_TITLES[DatabaseErrorEnum.UNHANDLED_ERROR],\n        code: DatabaseErrorEnum.UNHANDLED_ERROR,\n        metadata: exception?.meta,\n      };\n    }\n    return null;\n  }\n\n  getFirstSkipFromCurPerPage(\n    args: FindManyArgs,\n    defaultOptions?: {\n      defaultCurPage: number;\n      defaultPerPage: number;\n    }\n  ): {\n    take: number;\n    skip: number;\n    curPage: number;\n    perPage: number;\n  } {\n    const curPage = +(args.curPage || defaultOptions?.defaultCurPage || this.prismaToolsEnvironments.paginationInitialPage || 1);\n    const perPage = +(args.perPage || defaultOptions?.defaultPerPage || this.prismaToolsEnvironments.paginationPerPage || 5);\n    const skip = +curPage === 1 ? 0 : +perPage * +curPage - +perPage;\n\n    return { take: perPage, skip, curPage, perPage };\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Filter for module errors"})}),"\n",(0,o.jsxs)(n.p,{children:["As part of the backend application, each module has its own error types, but when sending an error to the frontend, we must convert it into an ",(0,o.jsx)(n.code,{children:"Http"})," error, for such a conversion we create a ",(0,o.jsx)(n.code,{children:"PrismaToolsExceptionsFilter"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/core/prisma-tools/src/lib/prisma-tools.filter.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { ArgumentsHost, Catch, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\nimport { PrismaToolsService } from './prisma-tools.service';\nimport { PrismaToolsEnvironments } from './prisma-tools.environments';\n\n@Catch()\nexport class PrismaToolsExceptionsFilter extends BaseExceptionFilter {\n  private logger = new Logger(PrismaToolsExceptionsFilter.name);\n\n  constructor(private readonly prismaToolsService: PrismaToolsService, private readonly prismaToolsEnvironments: PrismaToolsEnvironments) {\n    super();\n  }\n\n  override catch(exception: HttpException, host: ArgumentsHost) {\n    if (!this.prismaToolsEnvironments.useFilters) {\n      super.catch(exception, host);\n      return;\n    }\n    const parsedException = this.prismaToolsService.convertPrismaErrorToDbError(exception);\n    if (parsedException) {\n      super.catch(new HttpException(parsedException, HttpStatus.BAD_REQUEST), host);\n    } else {\n      this.logger.error(exception, exception.stack);\n      super.catch(exception, host);\n    }\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"NestJS-mod module"})}),"\n",(0,o.jsx)(n.p,{children:"This is a simple module that can take some parameters from environment variables and export the service with utilities to the outside."}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/core/prisma-tools/src/lib/prisma-tools.module.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { createNestModule, NestModuleCategory } from '@nestjs-mod/common';\nimport { PRISMA_TOOLS_MODULE } from './prisma-tools.constants';\nimport { PrismaToolsEnvironments } from './prisma-tools.environments';\nimport { PrismaToolsService } from './prisma-tools.service';\nimport { APP_FILTER } from '@nestjs/core';\nimport { PrismaToolsExceptionsFilter } from './prisma-tools.filter';\n\nexport const { PrismaToolsModule } = createNestModule({\n  moduleName: PRISMA_TOOLS_MODULE,\n  environmentsModel: PrismaToolsEnvironments,\n  moduleCategory: NestModuleCategory.core,\n  providers: [{ provide: APP_FILTER, useClass: PrismaToolsExceptionsFilter }],\n  sharedProviders: [PrismaToolsService],\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"14-adding-the-webhookmodule-module-to-work-with-webhooks",children:'14. Adding the "WebhookModule" module to work with webhooks'}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Module environment variables"})}),"\n",(0,o.jsxs)(n.p,{children:["The module has a built-in ",(0,o.jsx)(n.code,{children:"Guard"})," and ",(0,o.jsx)(n.code,{children:"Filter"}),", which can be disabled via environment variables if you want to customize the implementation and then manually bind them to modules or the entire application."]}),"\n",(0,o.jsxs)(n.p,{children:["At startup, the module creates a user with the ",(0,o.jsx)(n.code,{children:"Admin"})," role, whose value of the ",(0,o.jsx)(n.code,{children:"externalUserId"})," field is taken from the environment variable."]}),"\n",(0,o.jsxs)(n.p,{children:["User identification occurs by searching for the value of the variable ",(0,o.jsx)(n.code,{children:"externalUserId"})," in the ",(0,o.jsx)(n.code,{children:"Request"}),", which means that there must be some kind of guard standing earlier or global, in which the ",(0,o.jsx)(n.code,{children:"externalUserId"})," is determined and set in the ",(0,o.jsx)(n.code,{children:"Request"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["In addition to ",(0,o.jsx)(n.code,{children:"Request"}),", there is also an unsafe way to transfer the ID of an external user, for this you can use ",(0,o.jsx)(n.code,{children:"Headers"}),", at this stage of project development this method is enabled by default."]}),"\n",(0,o.jsx)(n.p,{children:"Example of environment variables:"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Key"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Sources"}),(0,o.jsx)(n.th,{children:"Constraints"}),(0,o.jsx)(n.th,{children:"Default"}),(0,o.jsx)(n.th,{children:"Value"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"useGuards"})}),(0,o.jsx)(n.td,{children:"Use guards."}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"obj['useGuards']"}),", ",(0,o.jsx)(n.code,{children:"process.env['SERVER_WEBHOOK_USE_GUARDS']"})]}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"useFilters"})}),(0,o.jsx)(n.td,{children:"Use filters."}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"obj['useFilters']"}),", ",(0,o.jsx)(n.code,{children:"process.env['SERVER_WEBHOOK_USE_FILTERS']"})]}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"autoCreateUser"})}),(0,o.jsx)(n.td,{children:"Auto create user from guard."}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"obj['autoCreateUser']"}),", ",(0,o.jsx)(n.code,{children:"process.env['SERVER_WEBHOOK_AUTO_CREATE_USER']"})]}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"checkHeaders"})}),(0,o.jsx)(n.td,{children:"Search tenantId and userId in headers."}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"obj['checkHeaders']"}),", ",(0,o.jsx)(n.code,{children:"process.env['SERVER_WEBHOOK_CHECK_HEADERS']"})]}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"true"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"skipGuardErrors"})}),(0,o.jsx)(n.td,{children:"Skip any guard errors."}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"obj['skipGuardErrors']"}),", ",(0,o.jsx)(n.code,{children:"process.env['SERVER_WEBHOOK_SKIP_GUARD_ERRORS']"})]}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"false"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"false"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"superAdminExternalUserId"})}),(0,o.jsx)(n.td,{children:"User ID with super admin role."}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"obj['superAdminExternalUserId']"}),", ",(0,o.jsx)(n.code,{children:"process.env['SERVER_WEBHOOK_SUPER_ADMIN_EXTERNAL_USER_ID']"})]}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"optional"})}),(0,o.jsx)(n.td,{children:"-"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"248ec37f-628d-43f0-8de2-f58da037dd0f"})})]})]})]}),"\n",(0,o.jsxs)(n.p,{children:["Updating the file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/webhook.environments.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { BooleanTransformer, EnvModel, EnvModelProperty } from '@nestjs-mod/common';\n\n@EnvModel()\nexport class WebhookEnvironments {\n  @EnvModelProperty({\n    description: 'Use guards.',\n    transform: new BooleanTransformer(),\n    default: true,\n    hidden: true,\n  })\n  useGuards?: boolean;\n\n  @EnvModelProperty({\n    description: 'Use filters.',\n    transform: new BooleanTransformer(),\n    default: true,\n    hidden: true,\n  })\n  useFilters?: boolean;\n\n  @EnvModelProperty({\n    description: 'Auto create user from guard.',\n    transform: new BooleanTransformer(),\n    default: true,\n    hidden: true,\n  })\n  autoCreateUser?: boolean;\n\n  @EnvModelProperty({\n    description: 'Search tenantId and userId in headers.',\n    transform: new BooleanTransformer(),\n    default: true,\n    hidden: true,\n  })\n  checkHeaders?: boolean;\n\n  @EnvModelProperty({\n    description: 'Skip any guard errors.',\n    transform: new BooleanTransformer(),\n    default: false,\n    hidden: true,\n  })\n  skipGuardErrors?: boolean;\n\n  @EnvModelProperty({\n    description: 'User ID with super admin role.',\n  })\n  superAdminExternalUserId?: string;\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Module configuration"})}),"\n",(0,o.jsx)(n.p,{children:"Environment variables can be changed from stand to stand, but there are also settings that are set when building the application, they are the same between all stands."}),"\n",(0,o.jsx)(n.p,{children:"These settings include the types of events that can be sent as webhooks, as well as the names of the header keys to identify the current user or the current company."}),"\n",(0,o.jsxs)(n.p,{children:["Updating the file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/webhook.configuration.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { ConfigModel, ConfigModelProperty } from '@nestjs-mod/common';\nimport { WebhookEvent } from './types/webhook-event-object';\n\n@ConfigModel()\nexport class WebhookConfiguration {\n  @ConfigModelProperty({\n    description: 'List of available events.',\n  })\n  events!: WebhookEvent[];\n\n  @ConfigModelProperty({\n    description: 'The name of the header key that stores the external user ID.',\n    default: 'x-external-user-id',\n  })\n  externalUserIdHeaderName?: string;\n\n  @ConfigModelProperty({\n    description: 'The name of the header key that stores the external tenant ID.',\n    default: 'x-external-tenant-id',\n  })\n  externalTenantIdHeaderName?: string;\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Class with module errors"})}),"\n",(0,o.jsxs)(n.p,{children:["Since at this stage the project is being developed as a ",(0,o.jsx)(n.code,{children:"REST"})," backend, which is available on the frontend as an ",(0,o.jsx)(n.code,{children:"OpenAPI"})," library, the class with errors is also published in the ",(0,o.jsx)(n.code,{children:"Swagger"})," schema."]}),"\n",(0,o.jsxs)(n.p,{children:["In order for the error description to be more detailed, it uses decorators that add meta information that will be output to the ",(0,o.jsx)(n.code,{children:"Swagger"})," schema."]}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/webhook.errors.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport enum WebhookErrorEnum {\n  COMMON = 'WEBHOOK-000',\n  FORBIDDEN = 'WEBHOOK-001',\n  EXTERNAL_USER_ID_NOT_SET = 'WEBHOOK-002',\n  EXTERNAL_TENANT_ID_NOT_SET = 'WEBHOOK-003',\n  USER_NOT_FOUND = 'WEBHOOK-004',\n  EVENT_NOT_FOUND = 'WEBHOOK-005',\n}\n\nexport const WEBHOOK_ERROR_ENUM_TITLES: Record<WebhookErrorEnum, string> = {\n  [WebhookErrorEnum.COMMON]: 'Webhook error',\n  [WebhookErrorEnum.EXTERNAL_TENANT_ID_NOT_SET]: 'Tenant ID not set',\n  [WebhookErrorEnum.EXTERNAL_USER_ID_NOT_SET]: 'User ID not set',\n  [WebhookErrorEnum.FORBIDDEN]: 'Forbidden',\n  [WebhookErrorEnum.USER_NOT_FOUND]: 'User not found',\n  [WebhookErrorEnum.EVENT_NOT_FOUND]: 'Event not found',\n};\n\nexport class WebhookError<T = unknown> extends Error {\n  @ApiProperty({\n    type: String,\n    description: Object.entries(WEBHOOK_ERROR_ENUM_TITLES)\n      .map(([key, value]) => `${value} (${key})`)\n      .join(', '),\n    example: WEBHOOK_ERROR_ENUM_TITLES[WebhookErrorEnum.COMMON],\n  })\n  override message: string;\n\n  @ApiProperty({\n    enum: WebhookErrorEnum,\n    enumName: 'WebhookErrorEnum',\n    example: WebhookErrorEnum.COMMON,\n  })\n  code = WebhookErrorEnum.COMMON;\n\n  @ApiPropertyOptional({ type: Object })\n  metadata?: T;\n\n  constructor(message?: string | WebhookErrorEnum, code?: WebhookErrorEnum, metadata?: T) {\n    const messageAsCode = Boolean(message && Object.values(WebhookErrorEnum).includes(message as WebhookErrorEnum));\n    const preparedCode = messageAsCode ? (message as WebhookErrorEnum) : code;\n    const preparedMessage = preparedCode ? WEBHOOK_ERROR_ENUM_TITLES[preparedCode] : message;\n\n    code = preparedCode || WebhookErrorEnum.COMMON;\n    message = preparedMessage || WEBHOOK_ERROR_ENUM_TITLES[code];\n\n    super(message);\n\n    this.code = code;\n    this.message = message;\n    this.metadata = metadata;\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Types used"})}),"\n",(0,o.jsxs)(n.p,{children:["All available types of events that will be sent via webhooks should be described when connecting the module via the ",(0,o.jsx)(n.code,{children:"WebhookModule.forRoot()"}),", since this list will be displayed on the frontend when creating webhooks."]}),"\n",(0,o.jsxs)(n.p,{children:["In the ",(0,o.jsx)(n.code,{children:"example"})," property, you need to pass an example of an object that we will send via webhook."]}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/types/webhook-event-object.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { ApiProperty } from '@nestjs/swagger';\n\nexport class WebhookEvent {\n  @ApiProperty({ type: String })\n  eventName!: string;\n\n  @ApiProperty({ type: String })\n  description!: string;\n\n  @ApiProperty({ type: Object })\n  example!: object;\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Information about all sent events is recorded in the ",(0,o.jsx)(n.code,{children:"WebhookLog"})," table, its generated ",(0,o.jsx)(n.code,{children:"DTO"})," contains fields that we set ourselves in the backend, so we create a new ",(0,o.jsx)(n.code,{children:"DTO"})," based on the generated one and remove these fields."]}),"\n",(0,o.jsxs)(n.p,{children:["We also create a ",(0,o.jsx)(n.code,{children:"DTO"})," to form a response to the ",(0,o.jsx)(n.code,{children:"CRUD"})," operation of reading many records."]}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/types/webhook-log-object.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { FindManyResponseMeta } from '@nestjs-mod-fullstack/common';\nimport { ApiProperty, OmitType } from '@nestjs/swagger';\nimport { WebhookLog } from '../generated/rest/dto/webhook_log';\n\nexport class WebhookLogObject extends OmitType(WebhookLog, ['id', 'externalTenantId', 'createdAt', 'updatedAt', 'Webhook', 'webhookId']) {}\n\nexport class FindManyWebhookLogResponse {\n  @ApiProperty({ type: () => [WebhookLogObject] })\n  webhookLogs!: WebhookLogObject[];\n\n  @ApiProperty({ type: () => FindManyResponseMeta })\n  meta!: FindManyResponseMeta;\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Some of the fields for the ",(0,o.jsx)(n.code,{children:"Webhook"})," entity are exposed and checked on the backend. therefore, we create new ",(0,o.jsx)(n.code,{children:"DTO"})," for interaction with the front based on the ",(0,o.jsx)(n.code,{children:"DTO"})," generated from the database."]}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/types/webhook-object.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { FindManyResponseMeta } from '@nestjs-mod-fullstack/common';\nimport { ApiProperty, OmitType, PartialType } from '@nestjs/swagger';\nimport { Webhook } from '../generated/rest/dto/webhook';\n\nexport class WebhookObject extends OmitType(Webhook, ['externalTenantId', 'WebhookLog', 'WebhookUser_Webhook_createdByToWebhookUser', 'WebhookUser_Webhook_updatedByToWebhookUser', 'createdAt', 'createdBy', 'updatedAt', 'updatedBy']) {}\n\nexport class CreateWebhookArgs extends OmitType(Webhook, ['id', 'externalTenantId', 'WebhookLog', 'WebhookUser_Webhook_createdByToWebhookUser', 'WebhookUser_Webhook_updatedByToWebhookUser', 'createdAt', 'createdBy', 'updatedAt', 'updatedBy']) {}\n\nexport class UpdateWebhookArgs extends PartialType(OmitType(Webhook, ['id', 'externalTenantId', 'WebhookLog', 'WebhookUser_Webhook_createdByToWebhookUser', 'WebhookUser_Webhook_updatedByToWebhookUser', 'createdAt', 'createdBy', 'updatedAt', 'updatedBy'])) {}\n\nexport class FindManyWebhookResponse {\n  @ApiProperty({ type: () => [WebhookObject] })\n  webhooks!: WebhookObject[];\n\n  @ApiProperty({ type: () => FindManyResponseMeta })\n  meta!: FindManyResponseMeta;\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"WebhookUser"})," entity, which is editable by admins, also needs to be limited by available fields."]}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/types/webhook-user-object.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { FindManyResponseMeta } from '@nestjs-mod-fullstack/common';\nimport { ApiProperty, OmitType, PartialType } from '@nestjs/swagger';\nimport { WebhookUser } from '../generated/rest/dto/webhook_user';\n\nexport class WebhookUserObject extends OmitType(WebhookUser, ['Webhook_Webhook_createdByToWebhookUser', 'Webhook_Webhook_updatedByToWebhookUser', 'createdAt', 'updatedAt']) {}\n\nexport class UpdateWebhookUserArgs extends PartialType(OmitType(WebhookUser, ['id', 'externalUserId', 'externalTenantId', 'createdAt', 'updatedAt', 'Webhook_Webhook_createdByToWebhookUser', 'Webhook_Webhook_updatedByToWebhookUser'])) {}\n\nexport class FindManyWebhookUserResponse {\n  @ApiProperty({ type: () => [WebhookUserObject] })\n  webhookUsers!: WebhookUserObject[];\n\n  @ApiProperty({ type: () => FindManyResponseMeta })\n  meta!: FindManyResponseMeta;\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The module has its own ",(0,o.jsx)(n.code,{children:"Guard"})," that checks for the presence of the user and company ID in the ",(0,o.jsx)(n.code,{children:"Request"})," property or in the ",(0,o.jsx)(n.code,{children:"Headers"})," and also adds the ",(0,o.jsx)(n.code,{children:"webhookUser"})," property in which it stores the created user of the module."]}),"\n",(0,o.jsx)(n.p,{children:"The feature modules that I create always have a table with users, since they can be moved to a separate microservice and a separate database at any time."}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/types/webhook-request.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { WebhookUser } from '../generated/rest/dto/webhook_user';\n\nexport type WebhookRequest = {\n  webhookUser?: Omit<WebhookUser, 'Webhook_Webhook_createdByToWebhookUser' | 'Webhook_Webhook_updatedByToWebhookUser'> | null;\n  externalUserId: string;\n  externalTenantId: string;\n  headers: Record<string, string>;\n};\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Module Decorators"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"SkipWebhookGuard"})," decorator is needed to exclude the controller method or the entire controller from the",(0,o.jsx)(n.code,{children:"Guard"})," check."]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"CheckWebhookRole"})," decorator starts checking the user's role availability."]}),"\n",(0,o.jsxs)(n.p,{children:["The decorators ",(0,o.jsx)(n.code,{children:"CurrentWebhookRequest"})," and ",(0,o.jsx)(n.code,{children:"CurrentWebhookUser"})," are used to get information from the Request."]}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/webhook.decorators.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { getRequestFromExecutionContext } from '@nestjs-mod/common';\nimport { createParamDecorator, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { WebhookRequest } from './types/webhook-request';\nimport { WebhookRole } from '@prisma/webhook-client';\n\nexport const SkipWebhookGuard = Reflector.createDecorator<true>();\nexport const CheckWebhookRole = Reflector.createDecorator<WebhookRole[]>();\n\nexport const CurrentWebhookRequest = createParamDecorator((_data: unknown, ctx: ExecutionContext) => {\n  const req = getRequestFromExecutionContext(ctx) as WebhookRequest;\n  return req;\n});\n\nexport const CurrentWebhookUser = createParamDecorator((_data: unknown, ctx: ExecutionContext) => {\n  const req = getRequestFromExecutionContext(ctx) as WebhookRequest;\n  return req.webhookUser;\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Module controllers"})}),"\n",(0,o.jsxs)(n.p,{children:["The main controller of the entire module is the ",(0,o.jsx)(n.code,{children:"WebhookController"}),", it has ",(0,o.jsx)(n.code,{children:"CRUD"})," operations to work with the ",(0,o.jsx)(n.code,{children:"Webhook"})," entity, as well as the ",(0,o.jsx)(n.code,{children:"profile"})," method to get the current user of the module."]}),"\n",(0,o.jsxs)(n.p,{children:["The controller also has a ",(0,o.jsx)(n.code,{children:"findManyLogs"})," method that returns the history of sent events."]}),"\n",(0,o.jsxs)(n.p,{children:["The controller is available to the ",(0,o.jsx)(n.code,{children:"Admin"})," and ",(0,o.jsx)(n.code,{children:"User"})," roles, users with the ",(0,o.jsx)(n.code,{children:"Admin"})," role can see and modify the webhooks of all companies, users with the ",(0,o.jsx)(n.code,{children:"User"})," role can only see their own webhooks."]}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/controllers/webhook.controller.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { FindManyArgs, StatusResponse } from '@nestjs-mod-fullstack/common';\n\nimport { PrismaToolsService } from '@nestjs-mod-fullstack/prisma-tools';\nimport { InjectPrismaClient } from '@nestjs-mod/prisma';\nimport { Body, Controller, Delete, Get, Param, ParseUUIDPipe, Post, Put, Query } from '@nestjs/common';\nimport { ApiBadRequestResponse, ApiCreatedResponse, ApiExtraModels, ApiOkResponse, ApiTags, refs } from '@nestjs/swagger';\nimport { PrismaClient, WebhookRole } from '@prisma/webhook-client';\nimport { isUUID } from 'class-validator';\nimport { WebhookUser } from '../generated/rest/dto/webhook_user';\nimport { WebhookToolsService } from '../services/webhook-tools.service';\nimport { WebhookEvent } from '../types/webhook-event-object';\nimport { FindManyWebhookLogResponse } from '../types/webhook-log-object';\nimport { CreateWebhookArgs, FindManyWebhookResponse, UpdateWebhookArgs, WebhookObject } from '../types/webhook-object';\nimport { WebhookRequest } from '../types/webhook-request';\nimport { WebhookUserObject } from '../types/webhook-user-object';\nimport { WebhookConfiguration } from '../webhook.configuration';\nimport { WEBHOOK_FEATURE } from '../webhook.constants';\nimport { CheckWebhookRole, CurrentWebhookRequest, CurrentWebhookUser } from '../webhook.decorators';\nimport { WebhookError } from '../webhook.errors';\n\n@ApiExtraModels(WebhookError)\n@ApiBadRequestResponse({\n  schema: { allOf: refs(WebhookError) },\n})\n@ApiTags('webhook')\n@CheckWebhookRole([WebhookRole.User, WebhookRole.Admin])\n@Controller('/webhook')\nexport class WebhookController {\n  constructor(\n    @InjectPrismaClient(WEBHOOK_FEATURE)\n    private readonly prismaClient: PrismaClient,\n    private readonly webhookConfiguration: WebhookConfiguration,\n    private readonly prismaToolsService: PrismaToolsService,\n    private readonly webhookToolsService: WebhookToolsService\n  ) {}\n\n  @Get('profile')\n  @ApiOkResponse({ type: WebhookUserObject })\n  async profile(@CurrentWebhookUser() webhookUser: WebhookUser) {\n    return webhookUser;\n  }\n\n  @Get('events')\n  @ApiOkResponse({ type: WebhookEvent, isArray: true })\n  async events() {\n    return this.webhookConfiguration.events;\n  }\n\n  @Get()\n  @ApiOkResponse({ type: FindManyWebhookResponse })\n  async findMany(@CurrentWebhookRequest() webhookRequest: WebhookRequest, @CurrentWebhookUser() webhookUser: WebhookUser, @Query() args: FindManyArgs) {\n    const { take, skip, curPage, perPage } = this.prismaToolsService.getFirstSkipFromCurPerPage({\n      curPage: args.curPage,\n      perPage: args.perPage,\n    });\n    const searchText = args.searchText;\n\n    const result = await this.prismaClient.$transaction(async (prisma) => {\n      return {\n        webhooks: await prisma.webhook.findMany({\n          where: {\n            ...(searchText\n              ? {\n                  OR: [\n                    ...(isUUID(searchText) ? [{ id: { equals: searchText } }, { externalTenantId: { equals: searchText } }] : []),\n                    { endpoint: { contains: searchText, mode: 'insensitive' } },\n                    {\n                      eventName: { contains: searchText, mode: 'insensitive' },\n                    },\n                  ],\n                }\n              : {}),\n            ...this.webhookToolsService.externalTenantIdQuery(webhookUser, webhookRequest.externalTenantId),\n          },\n          take,\n          skip,\n          orderBy: { createdAt: 'desc' },\n        }),\n        totalResults: await prisma.webhook.count({\n          where: {\n            ...(searchText\n              ? {\n                  OR: [\n                    ...(isUUID(searchText) ? [{ id: { equals: searchText } }, { externalTenantId: { equals: searchText } }] : []),\n                    { endpoint: { contains: searchText, mode: 'insensitive' } },\n                    {\n                      eventName: { contains: searchText, mode: 'insensitive' },\n                    },\n                  ],\n                }\n              : {}),\n            ...this.webhookToolsService.externalTenantIdQuery(webhookUser, webhookRequest.externalTenantId),\n          },\n        }),\n      };\n    });\n    return {\n      webhooks: result.webhooks,\n      meta: {\n        totalResults: result.totalResults,\n        curPage,\n        perPage,\n      },\n    };\n  }\n\n  @Post()\n  @ApiCreatedResponse({ type: WebhookObject })\n  async createOne(@CurrentWebhookRequest() webhookRequest: WebhookRequest, @CurrentWebhookUser() webhookUser: WebhookUser, @Body() args: CreateWebhookArgs) {\n    return await this.prismaClient.webhook.create({\n      data: {\n        ...args,\n        WebhookUser_Webhook_createdByToWebhookUser: {\n          connect: { id: webhookUser.id },\n        },\n        WebhookUser_Webhook_updatedByToWebhookUser: {\n          connect: { id: webhookUser.id },\n        },\n        ...this.webhookToolsService.externalTenantIdQuery(webhookUser, webhookRequest.externalTenantId),\n      },\n    });\n  }\n\n  @Put(':id')\n  @ApiOkResponse({ type: WebhookObject })\n  async updateOne(@CurrentWebhookRequest() webhookRequest: WebhookRequest, @CurrentWebhookUser() webhookUser: WebhookUser, @Param('id', new ParseUUIDPipe()) id: string, @Body() args: UpdateWebhookArgs) {\n    return await this.prismaClient.webhook.update({\n      data: { ...args },\n      where: {\n        id,\n        ...this.webhookToolsService.externalTenantIdQuery(webhookUser, webhookRequest.externalTenantId),\n      },\n    });\n  }\n\n  @Delete(':id')\n  @ApiOkResponse({ type: StatusResponse })\n  async deleteOne(@CurrentWebhookRequest() webhookRequest: WebhookRequest, @CurrentWebhookUser() webhookUser: WebhookUser, @Param('id', new ParseUUIDPipe()) id: string) {\n    await this.prismaClient.webhook.delete({\n      where: {\n        id,\n        ...this.webhookToolsService.externalTenantIdQuery(webhookUser, webhookRequest.externalTenantId),\n      },\n    });\n    return { message: 'ok' };\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: WebhookObject })\n  async findOne(@CurrentWebhookRequest() webhookRequest: WebhookRequest, @CurrentWebhookUser() webhookUser: WebhookUser, @Param('id', new ParseUUIDPipe()) id: string) {\n    return await this.prismaClient.webhook.findFirstOrThrow({\n      where: {\n        id,\n        ...this.webhookToolsService.externalTenantIdQuery(webhookUser, webhookRequest.externalTenantId),\n      },\n    });\n  }\n\n  @Get(':id/logs')\n  @ApiOkResponse({ type: FindManyWebhookLogResponse, isArray: true })\n  async findManyLogs(@CurrentWebhookRequest() webhookRequest: WebhookRequest, @CurrentWebhookUser() webhookUser: WebhookUser, @Param('id', new ParseUUIDPipe()) id: string, @Query() args: FindManyArgs) {\n    const { take, skip, curPage, perPage } = this.prismaToolsService.getFirstSkipFromCurPerPage({\n      curPage: args.curPage,\n      perPage: args.perPage,\n    });\n    const searchText = args.searchText;\n    const result = await this.prismaClient.$transaction(async (prisma) => {\n      return {\n        webhookLogs: await prisma.webhookLog.findMany({\n          where: {\n            ...(searchText\n              ? {\n                  OR: [\n                    ...(isUUID(searchText) ? [{ id: { equals: searchText } }, { externalTenantId: { equals: searchText } }, { webhookId: { equals: searchText } }] : []),\n                    { response: { string_contains: searchText } },\n                    { request: { string_contains: searchText } },\n                    {\n                      responseStatus: {\n                        contains: searchText,\n                        mode: 'insensitive',\n                      },\n                    },\n                  ],\n                }\n              : {}),\n            ...this.webhookToolsService.externalTenantIdQuery(webhookUser, webhookRequest.externalTenantId),\n            webhookId: id,\n          },\n          take,\n          skip,\n          orderBy: { createdAt: 'desc' },\n        }),\n        totalResults: await prisma.webhookLog.count({\n          where: {\n            ...(searchText\n              ? {\n                  OR: [\n                    ...(isUUID(searchText) ? [{ id: { equals: searchText } }, { externalTenantId: { equals: searchText } }, { webhookId: { equals: searchText } }] : []),\n                    { response: { string_contains: searchText } },\n                    { request: { string_contains: searchText } },\n                    {\n                      responseStatus: {\n                        contains: searchText,\n                        mode: 'insensitive',\n                      },\n                    },\n                  ],\n                }\n              : {}),\n            ...this.webhookToolsService.externalTenantIdQuery(webhookUser, webhookRequest.externalTenantId),\n            webhookId: id,\n          },\n        }),\n      };\n    });\n    return {\n      webhookLogs: result.webhookLogs,\n      meta: {\n        totalResults: result.totalResults,\n        curPage,\n        perPage,\n      },\n    };\n  }\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"WebhookUsersController"})," controller is only available to the ",(0,o.jsx)(n.code,{children:"Admin"})," role, this controller has ",(0,o.jsx)(n.code,{children:"CRUD"})," methods for displaying all users and methods for updating and deleting module users."]}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/controllers/webhook-users.controller.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { FindManyArgs, StatusResponse } from '@nestjs-mod-fullstack/common';\n\nimport { PrismaToolsService } from '@nestjs-mod-fullstack/prisma-tools';\nimport { InjectPrismaClient } from '@nestjs-mod/prisma';\nimport { Body, Controller, Delete, Get, Param, ParseUUIDPipe, Put, Query } from '@nestjs/common';\nimport { ApiBadRequestResponse, ApiExtraModels, ApiOkResponse, ApiTags, refs } from '@nestjs/swagger';\nimport { PrismaClient, WebhookRole } from '@prisma/webhook-client';\nimport { isUUID } from 'class-validator';\nimport { WebhookUser } from '../generated/rest/dto/webhook_user';\nimport { WebhookToolsService } from '../services/webhook-tools.service';\nimport { WebhookRequest } from '../types/webhook-request';\nimport { FindManyWebhookUserResponse, UpdateWebhookUserArgs, WebhookUserObject } from '../types/webhook-user-object';\nimport { WEBHOOK_FEATURE } from '../webhook.constants';\nimport { CheckWebhookRole, CurrentWebhookRequest, CurrentWebhookUser } from '../webhook.decorators';\nimport { WebhookError } from '../webhook.errors';\n\n@ApiExtraModels(WebhookError)\n@ApiBadRequestResponse({\n  schema: { allOf: refs(WebhookError) },\n})\n@ApiTags('webhook')\n@CheckWebhookRole([WebhookRole.Admin])\n@Controller('/webhook/users')\nexport class WebhookUsersController {\n  constructor(\n    @InjectPrismaClient(WEBHOOK_FEATURE)\n    private readonly prismaClient: PrismaClient,\n    private readonly prismaToolsService: PrismaToolsService,\n    private readonly webhookToolsService: WebhookToolsService\n  ) {}\n\n  @Get()\n  @ApiOkResponse({ type: FindManyWebhookUserResponse })\n  async findMany(@CurrentWebhookRequest() webhookRequest: WebhookRequest, @CurrentWebhookUser() webhookUser: WebhookUser, @Query() args: FindManyArgs) {\n    const { take, skip, curPage, perPage } = this.prismaToolsService.getFirstSkipFromCurPerPage({\n      curPage: args.curPage,\n      perPage: args.perPage,\n    });\n    const searchText = args.searchText;\n    const result = await this.prismaClient.$transaction(async (prisma) => {\n      return {\n        webhookUsers: await prisma.webhookUser.findMany({\n          where: {\n            ...(isUUID(searchText)\n              ? {\n                  OR: [{ id: { equals: searchText } }, { externalTenantId: { equals: searchText } }, { externalUserId: { equals: searchText } }],\n                }\n              : {}),\n            ...this.webhookToolsService.externalTenantIdQuery(webhookUser, webhookRequest.externalTenantId),\n          },\n          take,\n          skip,\n          orderBy: { createdAt: 'desc' },\n        }),\n        totalResults: await prisma.webhookUser.count({\n          where: {\n            ...(isUUID(searchText)\n              ? {\n                  OR: [{ id: { equals: searchText } }, { externalTenantId: { equals: searchText } }, { externalUserId: { equals: searchText } }],\n                }\n              : {}),\n            ...this.webhookToolsService.externalTenantIdQuery(webhookUser, webhookRequest.externalTenantId),\n          },\n        }),\n      };\n    });\n    return {\n      webhookUsers: result.webhookUsers,\n      meta: {\n        totalResults: result.totalResults,\n        curPage,\n        perPage,\n      },\n    };\n  }\n\n  @Put(':id')\n  @ApiOkResponse({ type: WebhookUserObject })\n  async updateOne(@CurrentWebhookRequest() webhookRequest: WebhookRequest, @CurrentWebhookUser() webhookUser: WebhookUser, @Param('id', new ParseUUIDPipe()) id: string, @Body() args: UpdateWebhookUserArgs) {\n    return await this.prismaClient.webhookUser.update({\n      data: { ...args },\n      where: {\n        id,\n        ...this.webhookToolsService.externalTenantIdQuery(webhookUser, webhookRequest.externalTenantId),\n      },\n    });\n  }\n\n  @Delete(':id')\n  @ApiOkResponse({ type: StatusResponse })\n  async deleteOne(@CurrentWebhookRequest() webhookRequest: WebhookRequest, @CurrentWebhookUser() webhookUser: WebhookUser, @Param('id', new ParseUUIDPipe()) id: string) {\n    await this.prismaClient.webhookUser.delete({\n      where: {\n        id,\n        ...this.webhookToolsService.externalTenantIdQuery(webhookUser, webhookRequest.externalTenantId),\n      },\n    });\n    return { message: 'ok' };\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ type: WebhookUserObject })\n  async findOne(@CurrentWebhookRequest() webhookRequest: WebhookRequest, @CurrentWebhookUser() webhookUser: WebhookUser, @Param('id', new ParseUUIDPipe()) id: string) {\n    return await this.prismaClient.webhookUser.findFirstOrThrow({\n      where: {\n        id,\n        ...this.webhookToolsService.externalTenantIdQuery(webhookUser, webhookRequest.externalTenantId),\n      },\n    });\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Module Services"})}),"\n",(0,o.jsxs)(n.p,{children:["Events are sent from the code using the ",(0,o.jsx)(n.code,{children:"sendEvent"})," method of the ",(0,o.jsx)(n.code,{children:"WebhookService"})," service."]}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/services/webhook.service.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { Injectable } from '@nestjs/common';\nimport { Subject } from 'rxjs';\nimport { WebhookConfiguration } from '../webhook.configuration';\nimport { WebhookError, WebhookErrorEnum } from '../webhook.errors';\n\n@Injectable()\nexport class WebhookService<TEventName extends string = string, TEventBody = object> {\n  events$ = new Subject<{\n    eventName: TEventName;\n    eventBody: TEventBody;\n  }>();\n\n  constructor(private readonly webhookConfiguration: WebhookConfiguration) {}\n\n  async sendEvent(eventName: TEventName, eventBody: TEventBody) {\n    const event = this.webhookConfiguration.events.find((e) => e.eventName === eventName);\n    if (!event) {\n      throw new WebhookError(WebhookErrorEnum.EVENT_NOT_FOUND);\n    }\n    this.events$.next({ eventName, eventBody });\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"The module also has a service with additional utilities, the service is available only within the services and controllers of this module."}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/services/webhook-tools.service.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { Injectable } from '@nestjs/common';\nimport { WebhookUser } from '../generated/rest/dto/webhook_user';\n\n@Injectable()\nexport class WebhookToolsService {\n  externalTenantIdQuery(\n    webhookUser: Pick<WebhookUser, 'userRole' | 'externalTenantId'> | null,\n    externalTenantId: string\n  ): {\n    externalTenantId: string;\n  } {\n    const q =\n      webhookUser?.userRole === 'User'\n        ? {\n            externalTenantId: webhookUser.externalTenantId,\n          }\n        : { externalTenantId };\n    if (!q.externalTenantId) {\n      return {} as {\n        externalTenantId: string;\n      };\n    }\n    return q;\n  }\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Event processing occurs asynchronously in the ",(0,o.jsx)(n.code,{children:"WebhookServiceBootstrap"})," service, listening for new events starts after the application starts, various module parameters are also created in this service at startup."]}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/services/webhook-bootstrap.service.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { isInfrastructureMode } from '@nestjs-mod/common';\nimport { InjectPrismaClient } from '@nestjs-mod/prisma';\nimport { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger, OnApplicationBootstrap, OnModuleDestroy } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/webhook-client';\nimport { AxiosHeaders } from 'axios';\nimport { randomUUID } from 'crypto';\nimport { concatMap, firstValueFrom, Subscription, timeout, TimeoutError } from 'rxjs';\nimport { WebhookConfiguration } from '../webhook.configuration';\nimport { WEBHOOK_FEATURE } from '../webhook.constants';\nimport { WebhookEnvironments } from '../webhook.environments';\nimport { WebhookService } from './webhook.service';\n\n@Injectable()\nexport class WebhookServiceBootstrap implements OnApplicationBootstrap, OnModuleDestroy {\n  private readonly logger = new Logger(WebhookServiceBootstrap.name);\n  private eventsRef?: Subscription;\n\n  constructor(\n    @InjectPrismaClient(WEBHOOK_FEATURE)\n    private readonly prismaClient: PrismaClient,\n    private readonly webhookEnvironments: WebhookEnvironments,\n    private readonly webhookConfiguration: WebhookConfiguration,\n    private readonly httpService: HttpService,\n    private readonly webhookService: WebhookService\n  ) {}\n\n  onModuleDestroy() {\n    if (this.eventsRef) {\n      this.eventsRef.unsubscribe();\n      this.eventsRef = undefined;\n    }\n  }\n\n  async onApplicationBootstrap() {\n    if (isInfrastructureMode()) {\n      return;\n    }\n\n    await this.createDefaultUsers();\n\n    this.subscribeToEvents();\n  }\n\n  private subscribeToEvents() {\n    this.eventsRef = this.webhookService.events$\n      .pipe(\n        concatMap(async ({ eventName, eventBody }) => {\n          this.logger.debug({ eventName, eventBody });\n\n          const webhooks = await this.prismaClient.webhook.findMany({\n            where: { eventName: { contains: eventName }, enabled: true },\n          });\n\n          for (const webhook of webhooks) {\n            const webhookLog = await this.prismaClient.webhookLog.create({\n              data: {\n                externalTenantId: webhook.externalTenantId,\n                request: eventBody as object,\n                responseStatus: '',\n                webhookStatus: 'Pending',\n                response: {},\n                webhookId: webhook.id,\n              },\n            });\n            try {\n              await this.prismaClient.webhookLog.update({\n                where: { id: webhookLog.id },\n                data: { webhookStatus: 'Process' },\n              });\n              const request = await firstValueFrom(\n                this.httpService\n                  .post(webhook.endpoint, eventBody, {\n                    ...(webhook.headers\n                      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        { headers: new AxiosHeaders(webhook.headers as any) }\n                      : {}),\n                  })\n                  .pipe(timeout(webhook.requestTimeout || 5000))\n              );\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              let response: any, responseStatus: string;\n              try {\n                response = request.data;\n                responseStatus = request.statusText;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              } catch (err: any) {\n                response = String(err.message);\n                responseStatus = 'unhandled';\n              }\n              await this.prismaClient.webhookLog.update({\n                where: { id: webhookLog.id },\n                data: { responseStatus, response, webhookStatus: 'Success' },\n              });\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            } catch (err: any) {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              let response: any, responseStatus: string;\n              try {\n                response = err.response?.data || String(err.message);\n                responseStatus = err.response?.statusText;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              } catch (err2: any) {\n                response = String(err2.message);\n                responseStatus = 'unhandled';\n              }\n              try {\n                await this.prismaClient.webhookLog.update({\n                  where: { id: webhookLog.id },\n                  data: {\n                    responseStatus,\n                    response,\n                    webhookStatus: err instanceof TimeoutError ? 'Timeout' : 'Error',\n                  },\n                });\n              } catch (err) {\n                //\n              }\n            }\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  private async createDefaultUsers() {\n    try {\n      if (this.webhookEnvironments.superAdminExternalUserId) {\n        const existsUser = await this.prismaClient.webhookUser.findFirst({\n          where: {\n            externalUserId: this.webhookEnvironments.superAdminExternalUserId,\n            userRole: 'Admin',\n          },\n        });\n        if (!existsUser) {\n          await this.prismaClient.webhookUser.create({\n            data: {\n              externalTenantId: randomUUID(),\n              externalUserId: this.webhookEnvironments.superAdminExternalUserId,\n              userRole: 'Admin',\n            },\n          });\n        }\n      }\n    } catch (err) {\n      this.logger.error(err, (err as Error).stack);\n    }\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Filter for module errors"})}),"\n",(0,o.jsxs)(n.p,{children:["To convert module errors to an ",(0,o.jsx)(n.code,{children:"Http"})," error, create a ",(0,o.jsx)(n.code,{children:"WebhookExceptionsFilter"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/webhook.filter.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { ArgumentsHost, Catch, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\nimport { WebhookError } from './webhook.errors';\n\n@Catch()\nexport class WebhookExceptionsFilter extends BaseExceptionFilter {\n  private logger = new Logger(WebhookExceptionsFilter.name);\n\n  override catch(exception: WebhookError | HttpException, host: ArgumentsHost) {\n    if (exception instanceof WebhookError) {\n      super.catch(\n        new HttpException(\n          {\n            code: exception.code,\n            message: exception.message,\n            metadata: exception.metadata,\n          },\n          HttpStatus.BAD_REQUEST\n        ),\n        host\n      );\n    } else {\n      this.logger.error(exception, exception.stack);\n      super.catch(exception, host);\n    }\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Module Defender"})}),"\n",(0,o.jsxs)(n.p,{children:["The verification and creation of users takes place in ",(0,o.jsx)(n.code,{children:"WebhookGuard"}),", in addition, the roles of the module users are also checked here."]}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/webhook.guard.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { getRequestFromExecutionContext } from '@nestjs-mod/common';\nimport { InjectPrismaClient } from '@nestjs-mod/prisma';\nimport { CanActivate, ExecutionContext, Injectable, Logger } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { PrismaClient, WebhookRole } from '@prisma/webhook-client';\nimport { isUUID } from 'class-validator';\nimport { WebhookRequest } from './types/webhook-request';\nimport { WebhookConfiguration } from './webhook.configuration';\nimport { WEBHOOK_FEATURE } from './webhook.constants';\nimport { CheckWebhookRole, SkipWebhookGuard } from './webhook.decorators';\nimport { WebhookEnvironments } from './webhook.environments';\nimport { WebhookError, WebhookErrorEnum } from './webhook.errors';\n\n@Injectable()\nexport class WebhookGuard implements CanActivate {\n  private logger = new Logger(WebhookGuard.name);\n\n  constructor(\n    @InjectPrismaClient(WEBHOOK_FEATURE)\n    private readonly prismaClient: PrismaClient,\n    private readonly reflector: Reflector,\n    private readonly webhookEnvironments: WebhookEnvironments,\n    private readonly webhookConfiguration: WebhookConfiguration\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise<boolean> {\n    try {\n      const { skipWebhookGuard, checkWebhookRole } = this.getHandlersReflectMetadata(context);\n\n      if (skipWebhookGuard) {\n        return true;\n      }\n\n      const req = this.getRequestFromExecutionContext(context);\n      const externalUserId = this.getExternalUserIdFromRequest(req);\n      const externalTenantId = this.getExternalTenantIdFromRequest(req);\n\n      await this.tryGetCurrentSuperAdminUserWithExternalUserId(req, externalUserId);\n      await this.tryGetOrCreateCurrentUserWithExternalUserId(req, externalTenantId, externalUserId);\n\n      this.throwErrorIfCurrentUserNotSet(req);\n      this.throwErrorIfCurrentUserNotHaveNeededRoles(checkWebhookRole, req);\n    } catch (err) {\n      this.throwAllGuardErrorsIfItNeeded(err);\n    }\n    return true;\n  }\n\n  private throwAllGuardErrorsIfItNeeded(err: unknown) {\n    if (!this.webhookEnvironments.skipGuardErrors) {\n      throw err;\n    } else {\n      this.logger.error(err, (err as Error).stack);\n    }\n  }\n\n  private throwErrorIfCurrentUserNotHaveNeededRoles(checkWebhookRole: WebhookRole[] | undefined, req: WebhookRequest) {\n    if (checkWebhookRole && req.webhookUser && !checkWebhookRole?.includes(req.webhookUser.userRole)) {\n      throw new WebhookError(WebhookErrorEnum.FORBIDDEN);\n    }\n  }\n\n  private throwErrorIfCurrentUserNotSet(req: WebhookRequest) {\n    if (!req.webhookUser) {\n      throw new WebhookError(WebhookErrorEnum.USER_NOT_FOUND);\n    }\n  }\n\n  private async tryGetOrCreateCurrentUserWithExternalUserId(req: WebhookRequest, externalTenantId: string | undefined, externalUserId: string) {\n    if (!req.webhookUser) {\n      if (!externalTenantId || !isUUID(externalTenantId)) {\n        throw new WebhookError(WebhookErrorEnum.EXTERNAL_TENANT_ID_NOT_SET);\n      }\n      if (this.webhookEnvironments.autoCreateUser) {\n        req.webhookUser = await this.prismaClient.webhookUser.upsert({\n          create: { externalTenantId, externalUserId, userRole: 'User' },\n          update: {},\n          where: {\n            externalTenantId_externalUserId: {\n              externalTenantId,\n              externalUserId,\n            },\n          },\n        });\n      } else {\n        req.webhookUser = await this.prismaClient.webhookUser.findFirst({\n          where: {\n            externalTenantId,\n            externalUserId,\n          },\n        });\n      }\n    }\n  }\n\n  private async tryGetCurrentSuperAdminUserWithExternalUserId(req: WebhookRequest, externalUserId: string) {\n    if (this.webhookEnvironments.superAdminExternalUserId) {\n      req.webhookUser = await this.prismaClient.webhookUser.findFirst({\n        where: {\n          AND: [\n            { externalUserId },\n            {\n              externalUserId: this.webhookEnvironments.superAdminExternalUserId,\n            },\n          ],\n          userRole: 'Admin',\n        },\n      });\n    }\n  }\n\n  private getExternalTenantIdFromRequest(req: WebhookRequest) {\n    const externalTenantId = req.externalTenantId || this.webhookEnvironments.checkHeaders ? this.webhookConfiguration.externalTenantIdHeaderName && req.headers?.[this.webhookConfiguration.externalTenantIdHeaderName] : undefined;\n    if (externalTenantId) {\n      req.externalTenantId = externalTenantId;\n    }\n    return externalTenantId;\n  }\n\n  private getExternalUserIdFromRequest(req: WebhookRequest) {\n    const externalUserId = req.externalUserId || this.webhookEnvironments.checkHeaders ? this.webhookConfiguration.externalUserIdHeaderName && req.headers?.[this.webhookConfiguration.externalUserIdHeaderName] : undefined;\n    if (externalUserId) {\n      req.externalUserId = externalUserId;\n    }\n\n    if (!externalUserId || !isUUID(externalUserId)) {\n      throw new WebhookError(WebhookErrorEnum.EXTERNAL_USER_ID_NOT_SET);\n    }\n    return externalUserId;\n  }\n\n  private getRequestFromExecutionContext(context: ExecutionContext) {\n    const req = getRequestFromExecutionContext(context) as WebhookRequest;\n    req.headers = req.headers || {};\n    return req;\n  }\n\n  private getHandlersReflectMetadata(context: ExecutionContext) {\n    const skipWebhookGuard = (typeof context.getHandler === 'function' && this.reflector.get(SkipWebhookGuard, context.getHandler())) || (typeof context.getClass === 'function' && this.reflector.get(SkipWebhookGuard, context.getClass())) || undefined;\n\n    const checkWebhookRole = (typeof context.getHandler === 'function' && this.reflector.get(CheckWebhookRole, context.getHandler())) || (typeof context.getClass === 'function' && this.reflector.get(CheckWebhookRole, context.getClass())) || undefined;\n    return { skipWebhookGuard, checkWebhookRole };\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"NestJS-mod module"})}),"\n",(0,o.jsxs)(n.p,{children:["Unlike ",(0,o.jsx)(n.code,{children:"PrismaToolsModule"})," (example: SERVER_USE_FILTERS), the environment variables of the current module will have a prefix (example: SERVER_WEBHOOK_USE_FILTERS), this is done by overriding ",(0,o.jsx)(n.code,{children:"getFeatureDotEnvPropertyNameFormatter"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Turning off the ",(0,o.jsx)(n.code,{children:"Guard"})," and ",(0,o.jsx)(n.code,{children:"Filter"})," on the controllers occurs by wrapping them in special decorators when the module is connected."]}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"libs/feature/webhook/src/lib/webhook.module.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { PrismaToolsModule } from '@nestjs-mod-fullstack/prisma-tools';\nimport { createNestModule, getFeatureDotEnvPropertyNameFormatter, NestModuleCategory } from '@nestjs-mod/common';\nimport { PrismaModule } from '@nestjs-mod/prisma';\nimport { HttpModule } from '@nestjs/axios';\nimport { UseFilters, UseGuards } from '@nestjs/common';\nimport { ApiHeaders } from '@nestjs/swagger';\nimport { WebhookUsersController } from './controllers/webhook-users.controller';\nimport { WebhookController } from './controllers/webhook.controller';\nimport { WebhookServiceBootstrap } from './services/webhook-bootstrap.service';\nimport { WebhookService } from './services/webhook.service';\nimport { WebhookConfiguration } from './webhook.configuration';\nimport { WEBHOOK_FEATURE, WEBHOOK_MODULE } from './webhook.constants';\nimport { WebhookEnvironments } from './webhook.environments';\nimport { WebhookExceptionsFilter } from './webhook.filter';\nimport { WebhookGuard } from './webhook.guard';\nimport { WebhookToolsService } from './services/webhook-tools.service';\n\nexport const { WebhookModule } = createNestModule({\n  moduleName: WEBHOOK_MODULE,\n  moduleCategory: NestModuleCategory.feature,\n  staticEnvironmentsModel: WebhookEnvironments,\n  staticConfigurationModel: WebhookConfiguration,\n  imports: [\n    HttpModule,\n    PrismaModule.forFeature({\n      contextName: WEBHOOK_FEATURE,\n      featureModuleName: WEBHOOK_FEATURE,\n    }),\n    PrismaToolsModule.forFeature({\n      featureModuleName: WEBHOOK_FEATURE,\n    }),\n  ],\n  providers: [WebhookToolsService, WebhookServiceBootstrap],\n  controllers: [WebhookUsersController, WebhookController],\n  sharedProviders: [WebhookService],\n  wrapForRootAsync: (asyncModuleOptions) => {\n    if (!asyncModuleOptions) {\n      asyncModuleOptions = {};\n    }\n    const FomatterClass = getFeatureDotEnvPropertyNameFormatter(WEBHOOK_FEATURE);\n    Object.assign(asyncModuleOptions, {\n      environmentsOptions: {\n        propertyNameFormatters: [new FomatterClass()],\n        name: WEBHOOK_FEATURE,\n      },\n    });\n\n    return { asyncModuleOptions };\n  },\n  preWrapApplication: async ({ current }) => {\n    const staticEnvironments = current.staticEnvironments as WebhookEnvironments;\n    const staticConfiguration = current.staticConfiguration as WebhookConfiguration;\n\n    for (const ctrl of [WebhookController, WebhookUsersController]) {\n      if (staticEnvironments.useFilters) {\n        UseFilters(WebhookExceptionsFilter)(ctrl);\n      }\n      if (staticEnvironments.useGuards) {\n        UseGuards(WebhookGuard)(ctrl);\n      }\n      if (staticEnvironments.checkHeaders && staticConfiguration.externalUserIdHeaderName && staticConfiguration.externalTenantIdHeaderName) {\n        ApiHeaders([\n          {\n            name: staticConfiguration.externalUserIdHeaderName,\n            allowEmptyValue: true,\n          },\n          {\n            name: staticConfiguration.externalTenantIdHeaderName,\n            allowEmptyValue: true,\n          },\n        ])(ctrl);\n      }\n    }\n  },\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"15-we-add-the-webhookmodule-and-prismatoolsmodule-modules-to-the-start-file-of-the-project-and-pass-the-necessary-parameters-to-them",children:'15. We add the "WebhookModule" and "PrismaToolsModule" modules to the start file of the project and pass the necessary parameters to them'}),"\n",(0,o.jsxs)(n.p,{children:["Updating the file ",(0,o.jsx)(n.em,{children:"apps/server/src/main.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { PrismaToolsModule } from '@nestjs-mod-fullstack/prisma-tools';\nimport {\n  WEBHOOK_FEATURE,\n  WEBHOOK_FOLDER,\n  WebhookModule,\n} from '@nestjs-mod-fullstack/webhook';\n\n// ...\n\nbootstrapNestApplication({\n  modules: {\n    // ...\n    core: [\n      PrismaToolsModule.forRoot(),\n      PrismaModule.forRoot({\n        contextName: appFeatureName,\n        staticConfiguration: {\n          featureName: appFeatureName,\n          schemaFile: join(\n            appFolder,\n            'src',\n            'prisma',\n            `${appFeatureName}-${PRISMA_SCHEMA_FILE}`\n          ),\n          prismaModule: isInfrastructureMode()\n            ? import(`@nestjs-mod/prisma`)\n            : import(`@prisma/app-client`),\n          addMigrationScripts: false,\n        },\n      }),\n      PrismaModule.forRoot({\n        contextName: WEBHOOK_FEATURE,\n        staticConfiguration: {\n          featureName: WEBHOOK_FEATURE,\n          schemaFile: join(\n            rootFolder,\n            WEBHOOK_FOLDER,\n            'src',\n            'prisma',\n            PRISMA_SCHEMA_FILE\n          ),\n          prismaModule: isInfrastructureMode()\n            ? import(`@nestjs-mod/prisma`)\n            : import(`@prisma/webhook-client`),\n          addMigrationScripts: false,\n          nxProjectJsonFile: join(\n            rootFolder,\n            WEBHOOK_FOLDER,\n            PROJECT_JSON_FILE\n          ),\n        },\n      }),\n    ],\n    feature: [\n      AppModule.forRoot(),\n      WebhookModule.forRoot({\n        staticConfiguration: {\n          events: ['create', 'update', 'delete'].map((key) => ({\n            eventName: `app-demo.${key}`,\n            description: `${key}`,\n            example: {\n              id: 'e4be9194-8c41-4058-bf70-f52a30bccbeb',\n              name: 'demo name',\n              createdAt: '2024-10-02T18:49:07.992Z',\n              updatedAt: '2024-10-02T18:49:07.992Z',\n            },\n          })),\n        },\n      }),\n    ],\n  })\n"})}),"\n",(0,o.jsx)(n.h3,{id:"16-adding-the-web-hook-moduleforfeature-to-the-application-module-appmodule-so-that-the-modules-services-can-run-webhooks",children:'16. Adding the "Web hook Module.forFeature()" to the application module "AppModule" so that the module\'s services can run webhooks'}),"\n",(0,o.jsxs)(n.p,{children:["Updating the file ",(0,o.jsx)(n.em,{children:"apps/server/src/app/app.module.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { createNestModule, NestModuleCategory } from '@nestjs-mod/common';\n\nimport { PrismaModule } from '@nestjs-mod/prisma';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { WebhookModule } from '@nestjs-mod-fullstack/webhook';\n\nexport const { AppModule } = createNestModule({\n  moduleName: 'AppModule',\n  moduleCategory: NestModuleCategory.feature,\n  imports: [\n    WebhookModule.forFeature({\n      featureModuleName: 'app',\n    }),\n    PrismaModule.forFeature({\n      contextName: 'app',\n      featureModuleName: 'app',\n    }),\n    ...(process.env.DISABLE_SERVE_STATIC\n      ? []\n      : [\n          ServeStaticModule.forRoot({\n            rootPath: join(__dirname, '..', 'client', 'browser'),\n          }),\n        ]),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"17-we-add-the-webhookservice-service-to-the-appcontroller-controller-and-call-the-sendevent-method-for-the-data-we-want-to-send-via-webhooks",children:'17. We add the "WebhookService" service to the "AppController" controller and call the "sendEvent" method for the data we want to send via webhooks'}),"\n",(0,o.jsxs)(n.p,{children:["Updating the file ",(0,o.jsx)(n.em,{children:"apps/server/src/app/app.controller.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { Controller, Delete, Get, Param, ParseUUIDPipe, Post, Put } from '@nestjs/common';\n\nimport { WebhookService } from '@nestjs-mod-fullstack/webhook';\nimport { InjectPrismaClient } from '@nestjs-mod/prisma';\nimport { ApiCreatedResponse, ApiOkResponse, ApiProperty } from '@nestjs/swagger';\nimport { PrismaClient as AppPrismaClient } from '@prisma/app-client';\nimport { randomUUID } from 'crypto';\nimport { AppService } from './app.service';\nimport { AppDemo } from './generated/rest/dto/app_demo';\n\nexport class AppData {\n  @ApiProperty({ type: String })\n  message!: string;\n}\n\nenum AppDemoEventName {\n  'app-demo.create' = 'app-demo.create',\n  'app-demo.update' = 'app-demo.update',\n  'app-demo.delete' = 'app-demo.delete',\n}\n\n@Controller()\nexport class AppController {\n  constructor(\n    @InjectPrismaClient('app')\n    private readonly appPrismaClient: AppPrismaClient,\n    private readonly appService: AppService,\n    private readonly webhookService: WebhookService<AppDemoEventName, AppDemo>\n  ) {}\n\n  @Get()\n  @ApiOkResponse({ type: AppData })\n  getData() {\n    return this.appService.getData();\n  }\n\n  @Post('/demo')\n  @ApiCreatedResponse({ type: AppDemo })\n  async demoCreateOne() {\n    return await this.appPrismaClient.appDemo\n      .create({\n        data: { name: 'demo name' + randomUUID() },\n      })\n      .then(async (result) => {\n        await this.webhookService.sendEvent(AppDemoEventName['app-demo.create'], result);\n        return result;\n      });\n  }\n\n  @Get('/demo/:id')\n  @ApiOkResponse({ type: AppDemo })\n  async demoFindOne(@Param('id', new ParseUUIDPipe()) id: string) {\n    return await this.appPrismaClient.appDemo.findFirstOrThrow({\n      where: { id },\n    });\n  }\n\n  @Delete('/demo/:id')\n  @ApiOkResponse({ type: AppDemo })\n  async demoDeleteOne(@Param('id', new ParseUUIDPipe()) id: string) {\n    return await this.appPrismaClient.appDemo.delete({ where: { id } }).then(async (result) => {\n      await this.webhookService.sendEvent(AppDemoEventName['app-demo.delete'], result);\n      return result;\n    });\n  }\n\n  @Put('/demo/:id')\n  @ApiOkResponse({ type: AppDemo })\n  async demoUpdateOne(@Param('id', new ParseUUIDPipe()) id: string) {\n    return await this.appPrismaClient.appDemo.update({ data: { name: 'new demo name' + randomUUID() }, where: { id } }).then(async (result) => {\n      await this.webhookService.sendEvent(AppDemoEventName['app-demo.update'], result);\n      return result;\n    });\n  }\n\n  @Get('/demo')\n  @ApiOkResponse({ type: AppDemo, isArray: true })\n  async demoFindMany() {\n    return await this.appPrismaClient.appDemo.findMany();\n  }\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"18-adding-e2e-tests-for-crud-methods-under-the-user-role",children:'18. Adding E2E tests for CRUD methods under the "User" role'}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"apps/server-e2e/src/server/webhook-crud-as-user.spec.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { Configuration, WebhookApi, WebhookErrorEnum } from '@nestjs-mod-fullstack/app-rest-sdk';\nimport { getRandomExternalHeaders } from '@nestjs-mod-fullstack/testing';\n\ndescribe('CRUD operations with Webhook as \"User\" role', () => {\n  const webhookApi = new WebhookApi(new Configuration({ basePath: '/api' }));\n  const user1Headers = getRandomExternalHeaders();\n  const user2Headers = getRandomExternalHeaders();\n\n  let createEventName: string;\n\n  afterAll(async () => {\n    const { data: manyWebhooks } = await webhookApi.webhookControllerFindMany(user1Headers['x-external-user-id'], user1Headers['x-external-tenant-id']);\n    for (const webhook of manyWebhooks.webhooks) {\n      await webhookApi.webhookControllerUpdateOne(\n        webhook.id,\n        {\n          enabled: false,\n        },\n        user1Headers['x-external-user-id'],\n        user1Headers['x-external-tenant-id']\n      );\n    }\n    //\n\n    const { data: manyWebhooks2 } = await webhookApi.webhookControllerFindMany(user2Headers['x-external-user-id'], user2Headers['x-external-tenant-id']);\n    for (const webhook of manyWebhooks2.webhooks) {\n      await webhookApi.webhookControllerUpdateOne(\n        webhook.id,\n        {\n          enabled: false,\n        },\n        user2Headers['x-external-user-id'],\n        user2Headers['x-external-tenant-id']\n      );\n    }\n  });\n\n  it('should return a list of available event names', async () => {\n    const { data: events } = await webhookApi.webhookControllerEvents(user1Headers['x-external-user-id'], user1Headers['x-external-tenant-id']);\n    createEventName = events.find((e) => e.eventName.includes('create'))?.eventName || 'create';\n    expect(events.map((e) => e.eventName)).toEqual(['app-demo.create', 'app-demo.update', 'app-demo.delete']);\n  });\n\n  it('should return error \"WEBHOOK-002\" about empty user', async () => {\n    await expect(webhookApi.webhookControllerProfile(undefined, user1Headers['x-external-tenant-id'])).rejects.toHaveProperty('response.data', {\n      code: WebhookErrorEnum._002,\n      message: 'User ID not set',\n    });\n  });\n\n  it('should return error \"WEBHOOK-003\" about empty tenant', async () => {\n    await expect(webhookApi.webhookControllerProfile(user1Headers['x-external-user-id'], undefined)).rejects.toHaveProperty('response.data', {\n      code: WebhookErrorEnum._003,\n      message: 'Tenant ID not set',\n    });\n  });\n\n  it('should return profile of webhook auto created user1', async () => {\n    const { data: profile } = await webhookApi.webhookControllerProfile(user1Headers['x-external-user-id'], user1Headers['x-external-tenant-id']);\n    expect(profile).toMatchObject({\n      externalTenantId: user1Headers['x-external-tenant-id'],\n      externalUserId: user1Headers['x-external-user-id'],\n      userRole: 'User',\n    });\n  });\n\n  it('should return profile of webhook auto created user2', async () => {\n    const { data: profile } = await webhookApi.webhookControllerProfile(user2Headers['x-external-user-id'], user2Headers['x-external-tenant-id']);\n    expect(profile).toMatchObject({\n      externalTenantId: user2Headers['x-external-tenant-id'],\n      externalUserId: user2Headers['x-external-user-id'],\n      userRole: 'User',\n    });\n  });\n\n  it('should create new webhook as user1', async () => {\n    const { data: newWebhook } = await webhookApi.webhookControllerCreateOne(\n      {\n        enabled: false,\n        endpoint: 'http://example.com',\n        eventName: createEventName,\n      },\n      user1Headers['x-external-user-id'],\n      user1Headers['x-external-tenant-id']\n    );\n    expect(newWebhook).toMatchObject({\n      enabled: false,\n      endpoint: 'http://example.com',\n      eventName: createEventName,\n    });\n  });\n\n  it('should create new webhook as user2', async () => {\n    const { data: newWebhook } = await webhookApi.webhookControllerCreateOne(\n      {\n        enabled: false,\n        endpoint: 'http://example.com',\n        eventName: createEventName,\n      },\n      user2Headers['x-external-user-id'],\n      user2Headers['x-external-tenant-id']\n    );\n    expect(newWebhook).toMatchObject({\n      enabled: false,\n      endpoint: 'http://example.com',\n      eventName: createEventName,\n    });\n  });\n\n  it('should read all webhooks', async () => {\n    const { data: manyWebhooks } = await webhookApi.webhookControllerFindMany(user1Headers['x-external-user-id'], user1Headers['x-external-tenant-id']);\n    expect(manyWebhooks).toMatchObject({\n      meta: { curPage: 1, perPage: 5, totalResults: 1 },\n      webhooks: [\n        {\n          enabled: false,\n          endpoint: 'http://example.com',\n          eventName: createEventName,\n        },\n      ],\n    });\n  });\n\n  it('should read one webhook by id', async () => {\n    const { data: manyWebhooks } = await webhookApi.webhookControllerFindMany(user1Headers['x-external-user-id'], user1Headers['x-external-tenant-id']);\n    const { data: oneWebhook } = await webhookApi.webhookControllerFindOne(\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      manyWebhooks.webhooks.find((w) => w.eventName === createEventName)!.id,\n      user1Headers['x-external-user-id'],\n      user1Headers['x-external-tenant-id']\n    );\n    expect(oneWebhook).toMatchObject({\n      enabled: false,\n      endpoint: 'http://example.com',\n      eventName: createEventName,\n    });\n  });\n\n  it('should update webhook endpoint', async () => {\n    const { data: manyWebhooks } = await webhookApi.webhookControllerFindMany(user1Headers['x-external-user-id'], user1Headers['x-external-tenant-id']);\n    const { data: updatedWebhook } = await webhookApi.webhookControllerUpdateOne(\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      manyWebhooks.webhooks.find((w) => w.eventName === createEventName)!.id,\n      {\n        endpoint: 'http://example.com/new',\n      },\n      user1Headers['x-external-user-id'],\n      user1Headers['x-external-tenant-id']\n    );\n    expect(updatedWebhook).toMatchObject({\n      enabled: false,\n      endpoint: 'http://example.com/new',\n      eventName: createEventName,\n    });\n  });\n\n  it('should delete updated webhook', async () => {\n    const { data: manyWebhooks } = await webhookApi.webhookControllerFindMany(user1Headers['x-external-user-id'], user1Headers['x-external-tenant-id']);\n    const { data: deletedWebhook } = await webhookApi.webhookControllerDeleteOne(\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      manyWebhooks.webhooks.find((w) => w.eventName === createEventName)!.id,\n      user1Headers['x-external-user-id'],\n      user1Headers['x-external-tenant-id']\n    );\n    expect(deletedWebhook).toMatchObject({ message: 'ok' });\n\n    const { data: manyWebhooksAfterDeleteOne } = await webhookApi.webhookControllerFindMany(user1Headers['x-external-user-id'], user1Headers['x-external-tenant-id']);\n    expect(manyWebhooksAfterDeleteOne).toMatchObject({\n      meta: { curPage: 1, perPage: 5, totalResults: 0 },\n      webhooks: [],\n    });\n  });\n});\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"apps/server-e2e/src/server/webhook-crud-as-user.spec.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { Configuration, DefaultApi, WebhookApi } from '@nestjs-mod-fullstack/app-rest-sdk';\nimport { getRandomExternalHeaders } from '@nestjs-mod-fullstack/testing';\nimport { randomUUID } from 'crypto';\n\nimport express, { Express } from 'express';\nimport { Server } from 'http';\nimport { AddressInfo } from 'net';\nimport { setTimeout } from 'timers/promises';\n\ndescribe('CRUD and business operations with WebhookLog as \"User\" role', () => {\n  jest.setTimeout(60000);\n  const appId = randomUUID();\n\n  const appHandler = '/api/callback-user';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const appHandlerLogs: any[] = [];\n\n  let app: Express;\n  let server: Server;\n  let endpoint: string;\n  let wrongEndpoint: string;\n\n  const webhookApi = new WebhookApi(new Configuration({ basePath: '/api' }));\n  const defaultApi = new DefaultApi(new Configuration({ basePath: '/api' }));\n\n  const headers = getRandomExternalHeaders();\n\n  let createEventName: string;\n  let updateEventName: string;\n  let deleteEventName: string;\n\n  beforeAll(() => {\n    app = express();\n    app.use(express.json());\n    app.post(appHandler, async (req, res) => {\n      if (req.headers['app-id'] === appId) {\n        appHandlerLogs.push(req.body);\n      }\n      res.send(req.body);\n    });\n    server = app.listen(0);\n    endpoint = `http://localhost:${(server.address() as AddressInfo).port}${appHandler}`;\n    wrongEndpoint = `http://localhost:${(server.address() as AddressInfo).port}${appHandler}-is-wrong`;\n  });\n\n  afterAll(async () => {\n    const { data: manyWebhooks } = await webhookApi.webhookControllerFindMany(headers['x-external-user-id'], headers['x-external-tenant-id']);\n    for (const webhook of manyWebhooks.webhooks) {\n      await webhookApi.webhookControllerUpdateOne(\n        webhook.id,\n        {\n          enabled: false,\n        },\n        headers['x-external-user-id'],\n        headers['x-external-tenant-id']\n      );\n    }\n    server.close();\n  });\n\n  it('should return a list of available event names', async () => {\n    const { data: events } = await webhookApi.webhookControllerEvents(headers['x-external-user-id'], headers['x-external-tenant-id']);\n    createEventName = events.find((e) => e.eventName.includes('create'))?.eventName || 'create';\n    updateEventName = events.find((e) => e.eventName.includes('update'))?.eventName || 'update';\n    deleteEventName = events.find((e) => e.eventName.includes('delete'))?.eventName || 'delete';\n\n    expect(events.map((e) => e.eventName)).toEqual(['app-demo.create', 'app-demo.update', 'app-demo.delete']);\n  });\n\n  it('should create new webhooks', async () => {\n    const { data: newWebhook1 } = await webhookApi.webhookControllerCreateOne(\n      {\n        enabled: true,\n        endpoint,\n        eventName: createEventName,\n        headers: { 'app-id': appId },\n      },\n      headers['x-external-user-id'],\n      headers['x-external-tenant-id']\n    );\n    expect(newWebhook1).toMatchObject({\n      enabled: true,\n      endpoint,\n      eventName: createEventName,\n    });\n\n    //////\n\n    const { data: newWebhook2 } = await webhookApi.webhookControllerCreateOne(\n      {\n        enabled: true,\n        endpoint,\n        eventName: deleteEventName,\n        headers: { 'app-id': appId },\n      },\n      headers['x-external-user-id'],\n      headers['x-external-tenant-id']\n    );\n    expect(newWebhook2).toMatchObject({\n      enabled: true,\n      endpoint,\n      eventName: deleteEventName,\n    });\n    //////\n\n    const { data: newWebhook3 } = await webhookApi.webhookControllerCreateOne(\n      {\n        enabled: true,\n        endpoint: wrongEndpoint,\n        eventName: updateEventName,\n        headers: { 'app-id': appId },\n      },\n      headers['x-external-user-id'],\n      headers['x-external-tenant-id']\n    );\n    expect(newWebhook3).toMatchObject({\n      enabled: true,\n      endpoint: wrongEndpoint,\n      eventName: updateEventName,\n    });\n  });\n\n  it('should create webhook log info after create app-demo', async () => {\n    const { data } = await defaultApi.appControllerDemoCreateOne();\n\n    // wait event processing\n    await setTimeout(1000);\n\n    expect(data).toEqual(appHandlerLogs[0]);\n    expect(appHandlerLogs).toHaveLength(1);\n\n    const { data: findMany } = await defaultApi.appControllerDemoFindMany();\n    expect(findMany.filter((d) => d.id === appHandlerLogs[0].id)).toHaveLength(1);\n  });\n\n  it('should create webhook log info after update app-demo', async () => {\n    await defaultApi.appControllerDemoUpdateOne(appHandlerLogs[0].id);\n\n    // wait event processing\n    await setTimeout(1000);\n\n    expect(appHandlerLogs).toHaveLength(1);\n\n    const { data: findMany } = await defaultApi.appControllerDemoFindMany();\n\n    // wait event processing\n    await setTimeout(1000);\n\n    expect(findMany.filter((d) => d.id === appHandlerLogs[0].id)).toHaveLength(1);\n  });\n\n  it('should create webhook log info after delete app-demo', async () => {\n    const { data } = await defaultApi.appControllerDemoDeleteOne(appHandlerLogs[0].id);\n\n    // wait event processing\n    await setTimeout(1000);\n\n    expect(data).not.toEqual(appHandlerLogs[0]);\n    expect(appHandlerLogs).toHaveLength(2);\n\n    const { data: findMany } = await defaultApi.appControllerDemoFindMany();\n    expect(findMany.filter((d) => d.id === appHandlerLogs[0].id)).toHaveLength(0);\n  });\n\n  it('should read all created webhook logs for \"create\" event', async () => {\n    const { data: manyWebhooks } = await webhookApi.webhookControllerFindMany(headers['x-external-user-id'], headers['x-external-tenant-id']);\n    const { data: manyWebhookLogs } = await webhookApi.webhookControllerFindManyLogs(\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      manyWebhooks.webhooks.find((w) => w.eventName === createEventName)!.id,\n      headers['x-external-user-id'],\n      headers['x-external-tenant-id']\n    );\n\n    expect(manyWebhookLogs).toMatchObject({\n      webhookLogs: [\n        {\n          responseStatus: 'OK',\n          webhookStatus: 'Success',\n          webhookId: manyWebhooks.webhooks.find((w) => w.eventName === createEventName)?.id,\n          externalTenantId: headers['x-external-tenant-id'],\n        },\n      ],\n      meta: { totalResults: 1, curPage: 1, perPage: 5 },\n    });\n  });\n\n  it('should read all created webhook logs for \"delete\" event', async () => {\n    const { data: manyWebhooks } = await webhookApi.webhookControllerFindMany(headers['x-external-user-id'], headers['x-external-tenant-id']);\n    const { data: manyWebhookLogs } = await webhookApi.webhookControllerFindManyLogs(\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      manyWebhooks.webhooks.find((w) => w.eventName === deleteEventName)!.id,\n      headers['x-external-user-id'],\n      headers['x-external-tenant-id']\n    );\n\n    expect(manyWebhookLogs).toMatchObject({\n      webhookLogs: [\n        {\n          responseStatus: 'OK',\n          webhookStatus: 'Success',\n          webhookId: manyWebhooks.webhooks.find((w) => w.eventName === deleteEventName)?.id,\n          externalTenantId: headers['x-external-tenant-id'],\n        },\n      ],\n      meta: { totalResults: 1, curPage: 1, perPage: 5 },\n    });\n  });\n  it('should read all created webhook logs for \"update\" event', async () => {\n    const { data: manyWebhooks } = await webhookApi.webhookControllerFindMany(headers['x-external-user-id'], headers['x-external-tenant-id']);\n    const { data: manyWebhookLogs } = await webhookApi.webhookControllerFindManyLogs(\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      manyWebhooks.webhooks.find((w) => w.eventName === updateEventName)!.id,\n      headers['x-external-user-id'],\n      headers['x-external-tenant-id']\n    );\n\n    expect(manyWebhookLogs).toMatchObject({\n      webhookLogs: [\n        {\n          responseStatus: 'Not Found',\n          response: '<!DOCTYPE html>\\n' + '<html lang=\"en_\\n' + '<head>\\n' + '<meta charset=\"utf-8_\\n' + '<title>Error</title>\\n' + '</head>\\n' + '<body>\\n' + '<pre>Cannot POST /api/callback-user-is-wrong</pre>\\n' + '</body>\\n' + '</html>\\n',\n          webhookStatus: 'Error',\n          webhookId: manyWebhooks.webhooks.find((w) => w.eventName === updateEventName)?.id,\n          externalTenantId: headers['x-external-tenant-id'],\n        },\n      ],\n      meta: { totalResults: 1, curPage: 1, perPage: 5 },\n    });\n  });\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"19-adding-e2e-tests-for-crud-methods-under-the-admin-role",children:'19. Adding E2E tests for CRUD methods under the "Admin" role'}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"apps/server-e2e/src/server/webhook-crud-as-admin.spec.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { Configuration, WebhookApi } from '@nestjs-mod-fullstack/app-rest-sdk';\nimport { getRandomExternalHeaders } from '@nestjs-mod-fullstack/testing';\n\ndescribe('CRUD operations with Webhook as \"Admin\" role', () => {\n  const webhookApi = new WebhookApi(new Configuration({ basePath: '/api' }));\n  const user1Headers = getRandomExternalHeaders();\n  const adminHeaders = {\n    ...getRandomExternalHeaders(),\n    ['x-external-user-id']: process.env.SERVER_WEBHOOK_SUPER_ADMIN_EXTERNAL_USER_ID,\n  };\n\n  let createEventName: string;\n\n  beforeAll(async () => {\n    const { data: events } = await webhookApi.webhookControllerEvents(user1Headers['x-external-user-id'], user1Headers['x-external-tenant-id']);\n    createEventName = events.find((e) => e.eventName.includes('create'))?.eventName || 'create';\n    expect(events.map((e) => e.eventName)).toEqual(['app-demo.create', 'app-demo.update', 'app-demo.delete']);\n  });\n\n  afterAll(async () => {\n    const { data: manyWebhooks } = await webhookApi.webhookControllerFindMany(user1Headers['x-external-user-id'], user1Headers['x-external-tenant-id']);\n    for (const webhook of manyWebhooks.webhooks) {\n      await webhookApi.webhookControllerUpdateOne(\n        webhook.id,\n        {\n          enabled: false,\n        },\n        user1Headers['x-external-user-id'],\n        user1Headers['x-external-tenant-id']\n      );\n    }\n    //\n\n    const { data: manyWebhooks2 } = await webhookApi.webhookControllerFindMany(adminHeaders['x-external-user-id'], adminHeaders['x-external-tenant-id']);\n    for (const webhook of manyWebhooks2.webhooks) {\n      await webhookApi.webhookControllerUpdateOne(\n        webhook.id,\n        {\n          enabled: false,\n        },\n        adminHeaders['x-external-user-id'],\n        adminHeaders['x-external-tenant-id']\n      );\n    }\n  });\n\n  it('should create new webhook as user1', async () => {\n    const { data: newWebhook } = await webhookApi.webhookControllerCreateOne(\n      {\n        enabled: false,\n        endpoint: 'http://example.com',\n        eventName: createEventName,\n      },\n      user1Headers['x-external-user-id'],\n      user1Headers['x-external-tenant-id']\n    );\n    expect(newWebhook).toMatchObject({\n      enabled: false,\n      endpoint: 'http://example.com',\n      eventName: createEventName,\n    });\n  });\n\n  it('should create new webhook as admin', async () => {\n    const { data: newWebhook } = await webhookApi.webhookControllerCreateOne(\n      {\n        enabled: false,\n        endpoint: 'http://example.com',\n        eventName: createEventName,\n      },\n      adminHeaders['x-external-user-id'],\n      adminHeaders['x-external-tenant-id']\n    );\n    expect(newWebhook).toMatchObject({\n      enabled: false,\n      endpoint: 'http://example.com',\n      eventName: createEventName,\n    });\n  });\n\n  it('should read one webhooks as user', async () => {\n    const { data: manyWebhooks } = await webhookApi.webhookControllerFindMany(user1Headers['x-external-user-id'], user1Headers['x-external-tenant-id']);\n    expect(manyWebhooks).toMatchObject({\n      meta: { curPage: 1, perPage: 5, totalResults: 1 },\n      webhooks: [\n        {\n          enabled: false,\n          endpoint: 'http://example.com',\n          eventName: createEventName,\n        },\n      ],\n    });\n  });\n\n  it('should read all webhooks as admin', async () => {\n    const { data: manyWebhooks } = await webhookApi.webhookControllerFindMany(adminHeaders['x-external-user-id']);\n    expect(manyWebhooks.meta.totalResults).toBeGreaterThan(1);\n    expect(manyWebhooks).toMatchObject({\n      meta: { curPage: 1, perPage: 5 },\n    });\n  });\n});\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Creating a file ",(0,o.jsx)(n.em,{children:"apps/server-e2e/src/server/webhook-user-crud-as-admin.spec.ts"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"import { Configuration, WebhookApi, WebhookErrorEnum } from '@nestjs-mod-fullstack/app-rest-sdk';\nimport { getRandomExternalHeaders } from '@nestjs-mod-fullstack/testing';\n\ndescribe('CRUD operations with WebhookUser as \"Admin\" role', () => {\n  const webhookApi = new WebhookApi(new Configuration({ basePath: '/api' }));\n  const user1Headers = getRandomExternalHeaders();\n  const adminHeaders = {\n    ...getRandomExternalHeaders(),\n    ['x-external-user-id']: process.env.SERVER_WEBHOOK_SUPER_ADMIN_EXTERNAL_USER_ID,\n  };\n\n  beforeAll(async () => {\n    // on any request we create new user\n    await webhookApi.webhookControllerEvents(adminHeaders['x-external-user-id'], adminHeaders['x-external-tenant-id']);\n\n    // on any request we create new user\n    await webhookApi.webhookControllerEvents(user1Headers['x-external-user-id'], user1Headers['x-external-tenant-id']);\n  });\n\n  afterAll(async () => {\n    const { data: manyWebhooks } = await webhookApi.webhookControllerFindMany(adminHeaders['x-external-user-id'], adminHeaders['x-external-tenant-id']);\n    for (const webhook of manyWebhooks.webhooks) {\n      await webhookApi.webhookControllerUpdateOne(\n        webhook.id,\n        {\n          enabled: false,\n        },\n        adminHeaders['x-external-user-id'],\n        adminHeaders['x-external-tenant-id']\n      );\n    }\n  });\n\n  it('should return error when we try read webhook users as user', async () => {\n    await expect(webhookApi.webhookUsersControllerFindMany(user1Headers['x-external-user-id'], user1Headers['x-external-tenant-id'])).rejects.toHaveProperty('response.data', {\n      code: WebhookErrorEnum._001,\n      message: 'Forbidden',\n    });\n  });\n\n  it('should update webhook user role to admin as admin', async () => {\n    const { data: userProfile } = await webhookApi.webhookControllerProfile(user1Headers['x-external-user-id'], user1Headers['x-external-tenant-id']);\n    const { data: newWebhook } = await webhookApi.webhookUsersControllerUpdateOne(userProfile.id, { userRole: 'Admin' }, adminHeaders['x-external-user-id']);\n    expect(newWebhook).toMatchObject({\n      userRole: 'Admin',\n    });\n  });\n\n  it('should read webhook users as user', async () => {\n    const webhookUsersControllerFindManyResult = await webhookApi.webhookUsersControllerFindMany(user1Headers['x-external-user-id'], user1Headers['x-external-tenant-id']);\n    expect(webhookUsersControllerFindManyResult.data.webhookUsers[0]).toMatchObject({\n      userRole: 'Admin',\n    });\n  });\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"20-we-start-generating-additional-code-for-the-infrastructure-restart-the-application-and-run-verification-through-e2e-tests",children:"20. We start generating additional code for the infrastructure, restart the application and run verification through E2E tests"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Commands"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm run pm2-full:dev:stop\nnpm run manual:prepare\nnpm run pm2-full:dev:start\nnpm run pm2-full:dev:test:e2e\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Console output"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'$ npm run pm2-full:dev:stop\n\n> @nestjs-mod-fullstack/source@0.0.8 pm2-full:dev:stop\n> npm run docker-compose:stop-prod:server && npm run pm2:dev:stop\n\n\n> @nestjs-mod-fullstack/source@0.0.8 docker-compose:stop-prod:server\n> export COMPOSE_INTERACTIVE_NO_CLI=1 && docker compose -f ./apps/server/docker-compose-prod.yml --env-file ./apps/server/docker-compose-prod.env down\n\nWARN[0000] /home/endy/Projects/nestjs-mod/nestjs-mod-fullstack/apps/server/docker-compose-prod.yml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion\n[+] Running 2/2\n \u2714 Container server-postgre-sql   Removed                                                                                                              10.2s\n \u2714 Network server_server-network  Removed                                                                                                               0.1s\n\n> @nestjs-mod-fullstack/source@0.0.8 pm2:dev:stop\n> ./node_modules/.bin/pm2 delete all\n\n[PM2] Applying action deleteProcessId on app [all](ids: [ 0, 1 ])\n[PM2] [client](1) \u2713\n[PM2] [server](0) \u2713\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 id \u2502 name      \u2502 namespace   \u2502 version \u2502 mode    \u2502 pid      \u2502 uptime \u2502 \u21ba    \u2502 status    \u2502 cpu      \u2502 mem      \u2502 user     \u2502 watching \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n[PM2][WARN] Current process list is not synchronized with saved list. App server client differs. Type \'pm2 save\' to synchronize.\n\n$ npm run manual:prepare\n\n> @nestjs-mod-fullstack/source@0.0.8 manual:prepare\n> npm run generate && npm run docs:infrastructure && npm run test\n\n\n> @nestjs-mod-fullstack/source@0.0.8 generate\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=generate --skip-nx-cache=true && npm run make-ts-list && npm run lint:fix\n\n\n   \u2714  nx run webhook:generate (2s)\n   \u2714  nx run server:generate (17s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target generate for 2 projects (17s)\n\n\n> @nestjs-mod-fullstack/source@0.0.8 make-ts-list\n> ./node_modules/.bin/rucken make-ts-list\n\n\n> @nestjs-mod-fullstack/source@0.0.8 lint:fix\n> npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=lint --fix\n\n\n> @nestjs-mod-fullstack/source@0.0.8 tsc:lint\n> ./node_modules/.bin/tsc --noEmit -p tsconfig.base.json\n\n\n   \u2714  nx run server:lint (1s)\n   \u2714  nx run app-angular-rest-sdk:lint (1s)\n   \u2714  nx run server-e2e:lint (1s)\n   \u2714  nx run client:lint (1s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target lint for 4 projects (3s)\n\n      With additional flags:\n        --fix=true\n\n\n> @nestjs-mod-fullstack/source@0.0.8 docs:infrastructure\n> export NESTJS_MODE=infrastructure && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source,client* --all -t=serve --parallel=false -- --watch=false --inspect=false\n\n\n NX   Running target serve for project server:\n\n- server\n\nWith additional flags:\n  --watch=false\n  --inspect=false\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n> nx run server:serve:development --watch=false --inspect=false\n\nchunk (runtime: main) main.js (main) 98.6 KiB [entry] [rendered]\nwebpack compiled successfully (d2ebec4a135c5c51)\n[19:19:21.382] INFO (328666): Starting Nest application...\n    context: "NestFactory"\n[19:19:21.383] INFO (328666): DefaultNestApp dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): ProjectUtilsSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DefaultNestApplicationInitializerSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DefaultNestApplicationInitializerShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): NestjsPinoLoggerModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): NestjsPinoLoggerModuleShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): TerminusHealthCheckModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DefaultNestApplicationListenerSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DefaultNestApplicationListenerShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): PrismaToolsModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): PrismaModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): PrismaModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): AppModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): AppModuleShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): WebhookModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): PrismaModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): WebhookModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): PrismaModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): PrismaToolsModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): InfrastructureMarkdownReportGeneratorSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): Pm2Settings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): Pm2Shared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DockerComposeSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DockerComposePostgreSQLSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DockerCompose dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DockerComposePostgreSQL dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DockerComposePostgreSQLSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DockerComposePostgreSQLShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): FlywaySettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): FlywayShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DockerComposePostgreSQL dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): PrismaModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): PrismaModuleShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): ProjectUtilsSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): PrismaModuleSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): PrismaModuleShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): ProjectUtilsSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): InfrastructureMarkdownReportGeneratorSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): InfrastructureMarkdownReportStorage dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): InfrastructureMarkdownReportStorageSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DockerCompose dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): FlywaySettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): FlywayShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): FlywaySettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): FlywayShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DefaultNestApplicationListenerSettings dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DefaultNestApplicationListenerShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): HttpModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): WebhookModuleShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DockerComposeShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): InfrastructureMarkdownReportStorageShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): ProjectUtils dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DefaultNestApplicationInitializer dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DefaultNestApplicationListener dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): PrismaToolsModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): PrismaModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): PrismaModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): InfrastructureMarkdownReportGenerator dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DockerComposePostgreSQL dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): Flyway dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): Flyway dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DefaultNestApplicationListener dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): NestjsPinoLoggerModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): TerminusModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): TerminusModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): ServeStaticModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): ProjectUtilsShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): PrismaToolsModuleShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): InfrastructureMarkdownReportGeneratorShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): Pm2 dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DockerCompose dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.383] INFO (328666): DockerComposePostgreSQL dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.384] INFO (328666): PrismaModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.384] INFO (328666): ProjectUtilsShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.384] INFO (328666): PrismaModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.384] INFO (328666): ProjectUtilsShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.384] INFO (328666): InfrastructureMarkdownReportGeneratorShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.384] INFO (328666): Flyway dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.384] INFO (328666): Flyway dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.384] INFO (328666): InfrastructureMarkdownReportGenerator dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.384] INFO (328666): LoggerModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.384] INFO (328666): DockerComposePostgreSQLShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.384] INFO (328666): PrismaModuleShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.384] INFO (328666): PrismaModuleShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.384] INFO (328666): TerminusHealthCheckModuleShared dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.384] INFO (328666): TerminusHealthCheckModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.384] INFO (328666): AppModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.384] INFO (328666): WebhookModule dependencies initialized\n    context: "InstanceLoader"\n[19:19:21.411] INFO (328666): TerminusHealthCheckController {/api/health}:\n    context: "RoutesResolver"\n[19:19:21.412] INFO (328666): Mapped {/api/health, GET} route\n    context: "RouterExplorer"\n[19:19:21.412] INFO (328666): AppController {/api}:\n    context: "RoutesResolver"\n[19:19:21.412] INFO (328666): Mapped {/api, GET} route\n    context: "RouterExplorer"\n[19:19:21.412] INFO (328666): Mapped {/api/demo, POST} route\n    context: "RouterExplorer"\n[19:19:21.413] INFO (328666): Mapped {/api/demo/:id, GET} route\n    context: "RouterExplorer"\n[19:19:21.413] INFO (328666): Mapped {/api/demo/:id, DELETE} route\n    context: "RouterExplorer"\n[19:19:21.413] INFO (328666): Mapped {/api/demo/:id, PUT} route\n    context: "RouterExplorer"\n[19:19:21.413] INFO (328666): Mapped {/api/demo, GET} route\n    context: "RouterExplorer"\n[19:19:21.413] INFO (328666): WebhookController {/api/webhook}:\n    context: "RoutesResolver"\n[19:19:21.414] INFO (328666): Mapped {/api/webhook/profile, GET} route\n    context: "RouterExplorer"\n[19:19:21.414] INFO (328666): Mapped {/api/webhook/events, GET} route\n    context: "RouterExplorer"\n[19:19:21.414] INFO (328666): Mapped {/api/webhook, POST} route\n    context: "RouterExplorer"\n[19:19:21.415] INFO (328666): Mapped {/api/webhook/:id, PUT} route\n    context: "RouterExplorer"\n[19:19:21.415] INFO (328666): Mapped {/api/webhook/:id, DELETE} route\n    context: "RouterExplorer"\n[19:19:21.415] INFO (328666): Mapped {/api/webhook/:id, GET} route\n    context: "RouterExplorer"\n[19:19:21.415] INFO (328666): Mapped {/api/webhook, GET} route\n    context: "RouterExplorer"\n[19:19:21.415] INFO (328666): Mapped {/api/webhook/:id/logs, GET} route\n    context: "RouterExplorer"\n[19:19:21.415] INFO (328666): WebhookUsersController {/api/webhook/users}:\n    context: "RoutesResolver"\n[19:19:21.415] INFO (328666): Mapped {/api/webhook/users/:id, PUT} route\n    context: "RouterExplorer"\n[19:19:21.415] INFO (328666): Mapped {/api/webhook/users/:id, DELETE} route\n    context: "RouterExplorer"\n[19:19:21.416] INFO (328666): Mapped {/api/webhook/users/:id, GET} route\n    context: "RouterExplorer"\n[19:19:21.416] INFO (328666): Mapped {/api/webhook/users, GET} route\n    context: "RouterExplorer"\n[19:19:21.417] INFO (328666): Connected to database!\n    context: "PrismaClient"\n[19:19:21.418] INFO (328666): Connected to database!\n    context: "PrismaClient"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target serve for project server\n\n\n\n> @nestjs-mod-fullstack/source@0.0.8 test\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=test --skip-nx-cache=true --passWithNoTests --output-style=stream-without-prefixes\n\n\n\n> nx run common:test --passWithNoTests\n\n\n> nx run prisma-tools:test --passWithNoTests\n\n\n> nx run webhook:test --passWithNoTests\n\n NX   Running target test for 8 projects\n   \u2714  nx run prisma-tools:test (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n   \u2714  nx run common:test (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 8 projects\n   \u2714  nx run webhook:test (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n   \u2714  nx run app-angular-rest-sdk:test (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n   \u2714  nx run app-rest-sdk:test (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 8 projects\n   \u2714  nx run testing:test (2s)\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 8 projects\n\n      With additional flags:\n        --passWithNoTests=true\n\n   \u2192  Executing 2/2 remaining tasks in parallel...\n   \u2714  nx run client:test (5s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target test for 8 projects\n\n      With additional flags:\n   \u2714  nx run server:test (6s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target test for 8 projects (9s)\n\n      With additional flags:\n        --passWithNoTests=true\n\n$ npm run pm2-full:dev:start\n\n> @nestjs-mod-fullstack/source@0.0.8 pm2-full:dev:start\n> npm run generate && npm run docker-compose:start-prod:server && npm run db:create-and-fill && npm run pm2:dev:start\n\n\n> @nestjs-mod-fullstack/source@0.0.8 generate\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=generate --skip-nx-cache=true && npm run make-ts-list && npm run lint:fix\n\n\n   \u2714  nx run webhook:generate (2s)\n   \u2714  nx run server:generate (14s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target generate for 2 projects (14s)\n\n\n> @nestjs-mod-fullstack/source@0.0.8 make-ts-list\n> ./node_modules/.bin/rucken make-ts-list\n\n\n> @nestjs-mod-fullstack/source@0.0.8 lint:fix\n> npm run tsc:lint && ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=lint --fix\n\n\n> @nestjs-mod-fullstack/source@0.0.8 tsc:lint\n> ./node_modules/.bin/tsc --noEmit -p tsconfig.base.json\n\n\n   \u2714  nx run app-angular-rest-sdk:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run server-e2e:lint  [existing outputs match the cache, left as is]\n   \u2714  nx run client:lint  [existing outputs match the cache, left as is]\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target lint for 4 projects (119ms)\n\n      With additional flags:\n        --fix=true\n\nNx read the output from the cache instead of running the command for 4 out of 4 tasks.\n\n\n> @nestjs-mod-fullstack/source@0.0.8 docker-compose:start-prod:server\n> export COMPOSE_INTERACTIVE_NO_CLI=1 && docker compose -f ./apps/server/docker-compose-prod.yml --env-file ./apps/server/docker-compose-prod.env --compatibility up -d\n\nWARN[0000] /home/endy/Projects/nestjs-mod/nestjs-mod-fullstack/apps/server/docker-compose-prod.yml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion\n[+] Running 2/2\n \u2714 Network server_server-network  Created                                                                                                                               0.1s\n \u2714 Container server-postgre-sql   Started                                                                                                                               0.3s\n\n> @nestjs-mod-fullstack/source@0.0.8 db:create-and-fill\n> npm run db:create && npm run flyway:migrate\n\n\n> @nestjs-mod-fullstack/source@0.0.8 db:create\n> ./node_modules/.bin/nx run-many -t=db-create\n\n\n   \u2714  nx run webhook:db-create (712ms)\n   \u2714  nx run server:db-create (713ms)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target db-create for 2 projects (745ms)\n\n\n> @nestjs-mod-fullstack/source@0.0.8 flyway:migrate\n> ./node_modules/.bin/nx run-many -t=flyway-migrate\n\n\n   \u2714  nx run webhook:flyway-migrate (2s)\n   \u2714  nx run server:flyway-migrate (2s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target flyway-migrate for 2 projects (2s)\n\n\n> @nestjs-mod-fullstack/source@0.0.8 pm2:dev:start\n> ./node_modules/.bin/pm2 start ./ecosystem.config.json && npm run wait-on -- --log http://localhost:3000/api/health --log http://localhost:4200\n\n[PM2][WARN] Applications server, client not running, starting...\n[PM2] App [server] launched (1 instances)\n[PM2] App [client] launched (1 instances)\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 id \u2502 name      \u2502 namespace   \u2502 version \u2502 mode    \u2502 pid      \u2502 uptime \u2502 \u21ba    \u2502 status    \u2502 cpu      \u2502 mem      \u2502 user     \u2502 watching \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1  \u2502 client    \u2502 default     \u2502 N/A     \u2502 fork    \u2502 330772   \u2502 0s     \u2502 0    \u2502 online    \u2502 0%       \u2502 13.1mb   \u2502 endy     \u2502 disabled \u2502\n\u2502 0  \u2502 server    \u2502 default     \u2502 N/A     \u2502 fork    \u2502 330771   \u2502 0s     \u2502 0    \u2502 online    \u2502 0%       \u2502 25.2mb   \u2502 endy     \u2502 disabled \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n> @nestjs-mod-fullstack/source@0.0.8 wait-on\n> ./node_modules/.bin/wait-on --timeout=240000 --interval=1000 --window --verbose --log http://localhost:3000/api/health --log http://localhost:4200\n\nwaiting for 2 resources: http://localhost:3000/api/health, http://localhost:4200\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\nmaking HTTP(S) head request to  url:http://localhost:4200 ...\n  HTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\n  HTTP(S) error for http://localhost:4200 Error: connect ECONNREFUSED 127.0.0.1:4200\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\n  HTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\nmaking HTTP(S) head request to  url:http://localhost:4200 ...\n  HTTP(S) error for http://localhost:4200 Error: connect ECONNREFUSED 127.0.0.1:4200\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\n  HTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\nmaking HTTP(S) head request to  url:http://localhost:4200 ...\n  HTTP(S) error for http://localhost:4200 Error: connect ECONNREFUSED 127.0.0.1:4200\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\n  HTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\nmaking HTTP(S) head request to  url:http://localhost:4200 ...\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\nmaking HTTP(S) head request to  url:http://localhost:4200 ...\n  HTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\n  HTTP(S) error for http://localhost:4200 AxiosError: Request failed with status code 404\n  HTTP(S) error for http://localhost:4200 AxiosError: Request failed with status code 404\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\nmaking HTTP(S) head request to  url:http://localhost:4200 ...\n  HTTP(S) error for http://localhost:3000/api/health Error: connect ECONNREFUSED 127.0.0.1:3000\n  HTTP(S) error for http://localhost:4200 AxiosError: Request failed with status code 404\nmaking HTTP(S) head request to  url:http://localhost:3000/api/health ...\nmaking HTTP(S) head request to  url:http://localhost:4200 ...\n  HTTP(S) error for http://localhost:4200 AxiosError: Request failed with status code 404\n  HTTP(S) result for http://localhost:3000/api/health: {\n  status: 200,\n  statusText: \'OK\',\n  headers: Object [AxiosHeaders] {\n    \'x-powered-by\': \'Express\',\n    vary: \'Origin\',\n    \'access-control-allow-credentials\': \'true\',\n    \'x-request-id\': \'ee9519ae-fd7d-45cb-847a-7218ab59b6a3\',\n    \'cache-control\': \'no-cache, no-store, must-revalidate\',\n    \'content-type\': \'application/json; charset=utf-8\',\n    \'content-length\': \'107\',\n    etag: \'W/"6b-ouXVoNOXyOxnMfI7caewF8/p97A"\',\n    date: \'Thu, 03 Oct 2024 15:22:00 GMT\',\n    connection: \'keep-alive\',\n    \'keep-alive\': \'timeout=5\'\n  },\n  data: \'\'\n}\nwaiting for 1 resources: http://localhost:4200\nmaking HTTP(S) head request to  url:http://localhost:4200 ...\n  HTTP(S) result for http://localhost:4200: {\n  status: 200,\n  statusText: \'OK\',\n  headers: Object [AxiosHeaders] {\n    \'x-powered-by\': \'Express\',\n    \'access-control-allow-origin\': \'*\',\n    \'accept-ranges\': \'bytes\',\n    \'content-type\': \'text/html; charset=utf-8\',\n    \'content-length\': \'586\',\n    date: \'Thu, 03 Oct 2024 15:22:32 GMT\',\n    connection: \'keep-alive\',\n    \'keep-alive\': \'timeout=5\'\n  },\n  data: \'\'\n}\nwait-on(330809) complete\n\n$  npm run pm2-full:dev:test:e2e\n\n> @nestjs-mod-fullstack/source@0.0.8 pm2-full:dev:test:e2e\n> npm run test:e2e\n\n\n> @nestjs-mod-fullstack/source@0.0.8 test:e2e\n> ./node_modules/.bin/nx run-many --exclude=@nestjs-mod-fullstack/source --all -t=e2e --skip-nx-cache=true --output-style=stream-without-prefixes\n\n\n\n> nx run client-e2e:e2e\n\n> playwright test\n\n NX   Running target e2e for 2 projects\n\n\n NX   Running target e2e for 2 projects\n\n   \u2192  Executing 1/2 remaining tasks...\n\n   \u2826  nx run client-e2e:e2e\n  Slow test file: [webkit] \u203a example.spec.ts (21.4s)\n  Consider splitting slow test files to speed up parallel execution\n   \u2714  nx run client-e2e:e2e (26s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n\n\n\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target e2e for 2 projects\n\n   \u2192  Executing 1/1 remaining tasks...\n\n   \u280b  nx run server-e2e:e2e\n\n   \u2714  1/1 succeeded [0 read from cache]\n\nnode:internal/child_process/serialization:159\n    const string = JSONStringify(message) + \'\\n\';\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Running target e2e for 2 projects\n\n   \u2192  Executing 1/1 remaining tasks...\n\n   \u2714  nx run server-e2e:e2e (12s)\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n NX   Successfully ran target e2e for 2 projects (38s)\n'})}),"\n",(0,o.jsx)(n.h3,{id:"conclusion",children:"Conclusion"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"createNestModule"})," utility from the ",(0,o.jsx)(n.code,{children:"@nestjs-mod/common"})," package provides various module configuration options for ",(0,o.jsx)(n.code,{children:"NestJS-mod"})," and ",(0,o.jsx)(n.code,{children:"NestJS"})," applications, this allows us not to invent our own configuration options."]}),"\n",(0,o.jsxs)(n.p,{children:["Since the ",(0,o.jsx)(n.code,{children:"WebhookModule"})," module has its own database, it can be moved to a separate microservice or reused in various projects."]}),"\n",(0,o.jsx)(n.h3,{id:"plans",children:"Plans"}),"\n",(0,o.jsxs)(n.p,{children:["In the next post, I will write a frontend for the webhooks module in ",(0,o.jsx)(n.code,{children:"Angular"}),"..."]}),"\n",(0,o.jsx)(n.h3,{id:"links",children:"Links"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://nestjs.com",children:"https://nestjs.com"})," - the official website of the framework"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://nestjs-mod.com",children:"https://nestjs-mod.com"})," - the official website of additional utilities"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://fullstack.nestjs-mod.com",children:"https://fullstack.nestjs-mod.com"})," - website from the post"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack"})," - the project from the post"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/compare/460257364bb4ce8e23fe761fbc9ca7462bc89b61..ec8de9d574a6dbcef3c3339e876ce156a3974aae",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack/compare/460257364bb4ce8e23fe761fbc9ca7462bc89b61..ec8de9d574a6dbcef3c3339e876ce156a3974aae"})," - current changes"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"#nestjs #webhook #nestjsmod #fullstack\n#2024-10-06"})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var o=t(6540);const r={},s=o.createContext(r);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);