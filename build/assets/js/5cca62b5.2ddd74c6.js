"use strict";(self.webpackChunknestjs_mod_com=self.webpackChunknestjs_mod_com||[]).push([[2900],{597:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>u});var t=r(4848),o=r(8453);const s={},i="\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 https://authorizer.dev \u0432 \u0444\u0443\u043b\u0441\u0442\u0435\u043a \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043d\u0430 NestJS \u0438 Angular",a={id:"ru-posts/fullstack/2024-11-08",title:"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 https://authorizer.dev \u0432 \u0444\u0443\u043b\u0441\u0442\u0435\u043a \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043d\u0430 NestJS \u0438 Angular",description:"\u0412 \u044d\u0442\u043e\u0439 \u0441\u0442\u0430\u0442\u044c\u0435 \u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0443 \u0432 \u043f\u0440\u043e\u0435\u043a\u0442 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u0441\u0435\u0440\u0432\u0435\u0440 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 https://authorizer.dev \u0438 \u043d\u0430\u043f\u0438\u0448\u0443 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0431\u044d\u043a\u0435\u043d\u0434 \u0438 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434 \u043c\u043e\u0434\u0443\u043b\u0438 \u0434\u043b\u044f \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0438 \u0441 \u043d\u0438\u043c.",source:"@site/docs/ru-posts/fullstack/2024-11-08.md",sourceDirName:"ru-posts/fullstack",slug:"/ru-posts/fullstack/2024-11-08",permalink:"/docs/ru-posts/fullstack/2024-11-08",draft:!1,unlisted:!1,editUrl:"https://github.com/nestjs-mod/nestjs-mod.com/blob/master/docs/ru-posts/fullstack/2024-11-08.md",tags:[],version:"current",frontMatter:{},sidebar:"ruPostsSidebar",previous:{title:"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0434\u043b\u044f \u043c\u043e\u0434\u0443\u043b\u044f Webhook \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Angular",permalink:"/docs/ru-posts/fullstack/2024-10-25"},next:{title:"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0433\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430 https://min.io \u0432 \u0444\u0443\u043b\u0441\u0442\u0435\u043a \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043d\u0430 NestJS \u0438 Angular",permalink:"/docs/ru-posts/fullstack/2024-11-15"}},l={},u=[{value:"1. \u0421\u043e\u0437\u0434\u0430\u0435\u043c Angular-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u043f\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438",id:"1-\u0441\u043e\u0437\u0434\u0430\u0435\u043c-angular-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443-\u043f\u043e-\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438",level:3},{value:"2. \u0421\u043e\u0437\u0434\u0430\u0435\u043c NestJS-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u043f\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438",id:"2-\u0441\u043e\u0437\u0434\u0430\u0435\u043c-nestjs-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443-\u043f\u043e-\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438",level:3},{value:"3. \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438",id:"3-\u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c-\u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438",level:3},{value:"4. \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0432 \u0431\u044d\u043a\u0435\u043d\u0434",id:"4-\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c-\u043d\u043e\u0432\u044b\u0435-\u043c\u043e\u0434\u0443\u043b\u0438-\u0432-\u0431\u044d\u043a\u0435\u043d\u0434",level:3},{value:"5. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430 \u043f\u043e \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435",id:"5-\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c-\u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e-\u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e-\u043a\u043e\u0434\u0430-\u043f\u043e-\u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435",level:3},{value:"6. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432\u0435\u0441\u044c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0439 \u043a\u043e\u0434 \u0432 \u043c\u043e\u0434\u0443\u043b\u044c AuthModule (NestJS-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430)",id:"6-\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c-\u0432\u0435\u0441\u044c-\u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0439-\u043a\u043e\u0434-\u0432-\u043c\u043e\u0434\u0443\u043b\u044c-authmodule-nestjs-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430",level:3},{value:"7. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043b\u043e\u0433\u0438\u043a\u0443 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u043c\u043e\u0434\u0443\u043b\u044f WebhookModule",id:"7-\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c-\u043b\u043e\u0433\u0438\u043a\u0443-\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e-\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f-\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439-\u0434\u043b\u044f-\u043c\u043e\u0434\u0443\u043b\u044f-webhookmodule",level:3},{value:"8. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432\u0435\u0441\u044c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0439 \u043a\u043e\u0434 \u0432 Angular-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u043f\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438",id:"8-\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c-\u0432\u0435\u0441\u044c-\u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0439-\u043a\u043e\u0434-\u0432-angular-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443-\u043f\u043e-\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438",level:3},{value:"9. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u0435\u0440\u0432\u0438\u0441 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0432 Angular-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435",id:"9-\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c-\u0441\u0435\u0440\u0432\u0438\u0441-\u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438-\u0432-angular-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435",level:3},{value:"10. \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e Angular-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f",id:"10-\u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c-\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e-angular-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f",level:3},{value:"11. \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b\u044b \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 docker-compose \u0438 kubernetes",id:"11-\u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c-\u0444\u0430\u0439\u043b\u044b-\u0438-\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c-\u043d\u043e\u0432\u044b\u0435-\u0434\u043b\u044f-\u0437\u0430\u043f\u0443\u0441\u043a\u0430-docker-compose-\u0438-kubernetes",level:3},{value:"12. \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c E2E-\u0442\u0435\u0441\u0442\u044b",id:"12-\u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c-e2e-\u0442\u0435\u0441\u0442\u044b",level:3},{value:"\u0417\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435",id:"\u0437\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435",level:3},{value:"\u041f\u043b\u0430\u043d\u044b",id:"\u043f\u043b\u0430\u043d\u044b",level:3},{value:"\u0421\u0441\u044b\u043b\u043a\u0438",id:"\u0441\u0441\u044b\u043b\u043a\u0438",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"\u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f-\u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e-\u0441\u0435\u0440\u0432\u0435\u0440\u0430-\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438-httpsauthorizerdev-\u0432-\u0444\u0443\u043b\u0441\u0442\u0435\u043a-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435-\u043d\u0430-nestjs-\u0438-angular",children:["\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0432\u043d\u0435\u0448\u043d\u0435\u0433\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 ",(0,t.jsx)(n.a,{href:"https://authorizer.dev",children:"https://authorizer.dev"})," \u0432 \u0444\u0443\u043b\u0441\u0442\u0435\u043a \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043d\u0430 NestJS \u0438 Angular"]}),"\n",(0,t.jsxs)(n.p,{children:["\u0412 \u044d\u0442\u043e\u0439 \u0441\u0442\u0430\u0442\u044c\u0435 \u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0443 \u0432 \u043f\u0440\u043e\u0435\u043a\u0442 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u0441\u0435\u0440\u0432\u0435\u0440 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 ",(0,t.jsx)(n.a,{href:"https://authorizer.dev",children:"https://authorizer.dev"})," \u0438 \u043d\u0430\u043f\u0438\u0448\u0443 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0431\u044d\u043a\u0435\u043d\u0434 \u0438 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434 \u043c\u043e\u0434\u0443\u043b\u0438 \u0434\u043b\u044f \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0438 \u0441 \u043d\u0438\u043c."]}),"\n",(0,t.jsxs)(n.p,{children:["\u041a\u043e\u0434 \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0431\u0440\u0430\u043d \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0447\u0435\u0440\u0435\u0437 ",(0,t.jsx)(n.code,{children:"Docker Compose"})," \u0438 ",(0,t.jsx)(n.code,{children:"Kubernetes"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"1-\u0441\u043e\u0437\u0434\u0430\u0435\u043c-angular-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443-\u043f\u043e-\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438",children:"1. \u0421\u043e\u0437\u0434\u0430\u0435\u043c Angular-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u043f\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438"}),"\n",(0,t.jsxs)(n.p,{children:["\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0443\u0441\u0442\u0443\u044e ",(0,t.jsx)(n.code,{children:"Angular"}),"-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u0441 \u0444\u043e\u0440\u043c\u0430\u043c\u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0441\u0435\u0440\u0432\u0438\u0441\u044b \u0438 ",(0,t.jsx)(n.code,{children:"Guards"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"\u041a\u043e\u043c\u0430\u043d\u0434\u044b"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create Angular library\n./node_modules/.bin/nx g @nx/angular:library --name=auth-angular --buildable --publishable --directory=libs/core/auth-angular --simpleName=true --strict=true --prefix= --standalone=true --selector= --changeDetection=OnPush --importPath=@nestjs-mod-fullstack/auth-angular\n\n# Change file with test options\nrm -rf libs/core/auth-angular/src/test-setup.ts\ncp apps/client/src/test-setup.ts libs/core/auth-angular/src/test-setup.ts\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"\u0412\u044b\u0432\u043e\u0434 \u043a\u043e\u043d\u0441\u043e\u043b\u0438"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'$ ./node_modules/.bin/nx g @nx/angular:library --name=auth-angular --buildable --publishable --directory=libs/core/auth-angular --simpleName=true --strict=true --prefix= --standalone=true --selector= --changeDetection=OnPush --importPath=@nestjs-mod-fullstack/auth-angular\n\n NX  Generating @nx/angular:library\n\nCREATE libs/core/auth-angular/project.json\nCREATE libs/core/auth-angular/README.md\nCREATE libs/core/auth-angular/ng-package.json\nCREATE libs/core/auth-angular/package.json\nCREATE libs/core/auth-angular/tsconfig.json\nCREATE libs/core/auth-angular/tsconfig.lib.json\nCREATE libs/core/auth-angular/tsconfig.lib.prod.json\nCREATE libs/core/auth-angular/src/index.ts\nCREATE libs/core/auth-angular/jest.config.ts\nCREATE libs/core/auth-angular/src/test-setup.ts\nCREATE libs/core/auth-angular/tsconfig.spec.json\nCREATE libs/core/auth-angular/src/lib/auth-angular/auth-angular.component.css\nCREATE libs/core/auth-angular/src/lib/auth-angular/auth-angular.component.html\nCREATE libs/core/auth-angular/src/lib/auth-angular/auth-angular.component.spec.ts\nCREATE libs/core/auth-angular/src/lib/auth-angular/auth-angular.component.ts\nCREATE libs/core/auth-angular/.eslintrc.json\nUPDATE tsconfig.base.json\n\n NX   \ud83d\udc40 View Details of auth-angular\n\nRun "nx show project auth-angular" to view details about this project.\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-\u0441\u043e\u0437\u0434\u0430\u0435\u043c-nestjs-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443-\u043f\u043e-\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438",children:"2. \u0421\u043e\u0437\u0434\u0430\u0435\u043c NestJS-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u043f\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438"}),"\n",(0,t.jsxs)(n.p,{children:["\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0443\u0441\u0442\u0443\u044e ",(0,t.jsx)(n.code,{children:"NestJS"}),"-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"\u041a\u043e\u043c\u0430\u043d\u0434\u044b"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./node_modules/.bin/nx g @nestjs-mod/schematics:library auth --buildable --publishable --directory=libs/core/auth --simpleName=true --projectNameAndRootFormat=as-provided --strict=true\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"\u0412\u044b\u0432\u043e\u0434 \u043a\u043e\u043d\u0441\u043e\u043b\u0438"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ ./node_modules/.bin/nx g @nestjs-mod/schematics:library auth --buildable --publishable --directory=libs/core/auth --simpleName=true --projectNameAndRootFormat=as-provided --strict=true\n\n NX  Generating @nestjs-mod/schematics:library\n\nCREATE libs/core/auth/tsconfig.json\nCREATE libs/core/auth/src/index.ts\nCREATE libs/core/auth/tsconfig.lib.json\nCREATE libs/core/auth/README.md\nCREATE libs/core/auth/package.json\nCREATE libs/core/auth/project.json\nCREATE libs/core/auth/.eslintrc.json\nCREATE libs/core/auth/jest.config.ts\nCREATE libs/core/auth/tsconfig.spec.json\nUPDATE tsconfig.base.json\nCREATE libs/core/auth/src/lib/auth.configuration.ts\nCREATE libs/core/auth/src/lib/auth.constants.ts\nCREATE libs/core/auth/src/lib/auth.environments.ts\nCREATE libs/core/auth/src/lib/auth.module.ts\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-\u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c-\u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438",children:"3. \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438"}),"\n",(0,t.jsxs)(n.p,{children:["\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c ",(0,t.jsx)(n.code,{children:"JS"}),"-\u043a\u043b\u0438\u0435\u043d\u0442 \u0438 ",(0,t.jsx)(n.code,{children:"NestJS"}),"-\u043c\u043e\u0434\u0443\u043b\u044c \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c ",(0,t.jsx)(n.code,{children:"authorizer"})," \u0441 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0430 \u0438 \u0431\u044d\u043a\u0435\u043d\u0434\u0430.\n\u0412 \u0442\u0435\u0441\u0442\u0430\u0445 \u043c\u044b \u0447\u0430\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u0434\u043b\u044f \u0431\u044b\u0441\u0442\u0440\u043e\u0439 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0442\u0430\u043a\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043f\u0430\u043a\u0435\u0442 ",(0,t.jsx)(n.code,{children:"@faker-js/faker"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"\u041a\u043e\u043c\u0430\u043d\u0434\u044b"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install --save @nestjs-mod/authorizer @authorizerdev/authorizer-js @faker-js/faker\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"\u0412\u044b\u0432\u043e\u0434 \u043a\u043e\u043d\u0441\u043e\u043b\u0438"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"$ npm install --save @nestjs-mod/authorizer @authorizerdev/authorizer-js @faker-js/faker\n\nadded 3 packages, removed 371 packages, and audited 2787 packages in 18s\n\n344 packages are looking for funding\n  run `npm fund` for details\n\n34 vulnerabilities (3 low, 12 moderate, 19 high)\n\nTo address issues that do not require attention, run:\n  npm audit fix\n\nTo address all issues (including breaking changes), run:\n  npm audit fix --force\n\nRun `npm audit` for details.\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c-\u043d\u043e\u0432\u044b\u0435-\u043c\u043e\u0434\u0443\u043b\u0438-\u0432-\u0431\u044d\u043a\u0435\u043d\u0434",children:"4. \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0432 \u0431\u044d\u043a\u0435\u043d\u0434"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"apps/server/src/main.ts"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"\nimport {\n  AuthorizerModule,\n  AuthorizerUser,\n  CheckAccessOptions,\n  defaultAuthorizerCheckAccessValidator,AUTHORIZER_ENV_PREFIX\n} from '@nestjs-mod/authorizer';\n// ...\nimport {\n  DOCKER_COMPOSE_FILE,\n  DockerCompose,\n  DockerComposeAuthorizer,\n  DockerComposePostgreSQL,\n} from '@nestjs-mod/docker-compose';\n// ...\n\nimport { ExecutionContext } from '@nestjs/common';\n// ...\nbootstrapNestApplication({\n  modules: {\n   // ...\n\n    core: [\n      AuthorizerModule.forRoot({\n        staticConfiguration: {\n          extraHeaders: {\n            'x-authorizer-url': `http://localhost:${process.env.SERVER_AUTHORIZER_EXTERNAL_CLIENT_PORT}`,\n          },\n          checkAccessValidator: async (\n            authorizerUser?: AuthorizerUser,\n            options?: CheckAccessOptions,\n            ctx?: ExecutionContext\n          ) => {\n            if (\n              typeof ctx?.getClass === 'function' &&\n              typeof ctx?.getHandler === 'function' &&\n              ctx?.getClass().name === 'TerminusHealthCheckController' &&\n              ctx?.getHandler().name === 'check'\n            ) {\n              return true;\n            }\n\n            return defaultAuthorizerCheckAccessValidator(\n              authorizerUser,\n              options\n            );\n          },\n        },\n      }),\n    ],\n    infrastructure: [\n      DockerComposePostgreSQL.forFeature({\n        featureModuleName: AUTHORIZER_ENV_PREFIX,\n      }),\n      DockerComposeAuthorizer.forRoot({\n        staticEnvironments: {\n          databaseUrl: '%SERVER_AUTHORIZER_INTERNAL_DATABASE_URL%',\n        },\n        staticConfiguration: {\n          image: 'lakhansamani/authorizer:1.4.4',\n          disableStrongPassword: 'true',\n          disableEmailVerification: 'true',\n          featureName: AUTHORIZER_ENV_PREFIX,\n          organizationName: 'NestJSModFullstack',\n          dependsOnServiceNames: {\n            'postgre-sql': 'service_healthy',\n            redis: 'service_healthy',\n          },\n          isEmailServiceEnabled: 'true',\n          isSmsServiceEnabled: 'false',\n          env: 'development',\n        },\n      }),\n    ]}\n    );\n"})}),"\n",(0,t.jsx)(n.h3,{id:"5-\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c-\u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e-\u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e-\u043a\u043e\u0434\u0430-\u043f\u043e-\u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435",children:"5. \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430 \u043f\u043e \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"\u041a\u043e\u043c\u0430\u043d\u0434\u044b"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run docs:infrastructure\n"})}),"\n",(0,t.jsx)(n.h3,{id:"6-\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c-\u0432\u0435\u0441\u044c-\u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0439-\u043a\u043e\u0434-\u0432-\u043c\u043e\u0434\u0443\u043b\u044c-authmodule-nestjs-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430",children:"6. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432\u0435\u0441\u044c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0439 \u043a\u043e\u0434 \u0432 \u043c\u043e\u0434\u0443\u043b\u044c AuthModule (NestJS-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430)"}),"\n",(0,t.jsx)(n.p,{children:"\u041f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0434\u0443\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0435\u0433\u043e \u0435\u043c\u0430\u0439\u043b \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f, \u0435\u0441\u043b\u0438 \u043d\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043b\u0438, \u0442\u043e \u0430\u0434\u043c\u0438\u043d \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u043d."}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"libs/core/auth/src/lib/auth.environments.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { EnvModel, EnvModelProperty } from '@nestjs-mod/common';\nimport { IsNotEmpty } from 'class-validator';\n\n@EnvModel()\nexport class AuthEnvironments {\n  @EnvModelProperty({\n    description: 'Global admin username',\n    default: 'admin@example.com',\n  })\n  adminEmail?: string;\n\n  @EnvModelProperty({\n    description: 'Global admin username',\n    default: 'admin',\n  })\n  @IsNotEmpty()\n  adminUsername?: string;\n\n  @EnvModelProperty({\n    description: 'Global admin password',\n  })\n  adminPassword?: string;\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0432\u044b\u0437\u043e\u0432\u0430 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0441\u043a\u0438\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043c\u0435\u0442\u043e\u0434 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0430\u0434\u043c\u0438\u043d\u0430, \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0438 \u0441\u0442\u0430\u0440\u0442\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0438 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0430\u0434\u043c\u0438\u043d\u0430 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e."}),"\n",(0,t.jsxs)(n.p,{children:["\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"libs/core/auth/src/lib/services/auth-authorizer.service.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { AuthorizerService } from '@nestjs-mod/authorizer';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { AuthError } from '../auth.errors';\n\n@Injectable()\nexport class AuthAuthorizerService {\n  private logger = new Logger(AuthAuthorizerService.name);\n\n  constructor(private readonly authorizerService: AuthorizerService) {}\n\n  authorizerClientID() {\n    return this.authorizerService.config.clientID;\n  }\n\n  async createAdmin(user: { username?: string; password: string; email: string }) {\n    const signupUserResult = await this.authorizerService.signup({\n      nickname: user.username,\n      password: user.password,\n      confirm_password: user.password,\n      email: user.email.toLowerCase(),\n      roles: ['admin'],\n    });\n    if (signupUserResult.errors.length > 0) {\n      this.logger.error(signupUserResult.errors[0].message, signupUserResult.errors[0].stack);\n      if (!signupUserResult.errors[0].message.includes('has already signed up')) {\n        throw new AuthError(signupUserResult.errors[0].message);\n      }\n    } else {\n      if (!signupUserResult.data?.user) {\n        throw new AuthError('Failed to create a user');\n      }\n\n      await this.verifyUser({\n        externalUserId: signupUserResult.data.user.id,\n        email: signupUserResult.data.user.email,\n      });\n\n      this.logger.debug(`Admin with email: ${signupUserResult.data.user.email} successfully created!`);\n    }\n  }\n\n  async verifyUser({ externalUserId, email }: { externalUserId: string; email: string }) {\n    await this.updateUser(externalUserId, { email_verified: true, email });\n    return this;\n  }\n\n  async updateUser(\n    externalUserId: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    params: Partial<Record<string, any>>\n  ) {\n    if (Object.keys(params).length > 0) {\n      const paramsForUpdate = Object.entries(params)\n        .map(([key, value]) => (typeof value === 'boolean' ? `${key}: ${value}` : `${key}: \"${value}\"`))\n        .join(',');\n      const updateUserResult = await this.authorizerService.graphqlQuery({\n        query: `mutation {\n  _update_user(params: { \n      id: \"${externalUserId}\", ${paramsForUpdate} }) {\n    id\n  }\n}`,\n      });\n\n      if (updateUserResult.errors.length > 0) {\n        this.logger.error(updateUserResult.errors[0].message, updateUserResult.errors[0].stack);\n        throw new AuthError(updateUserResult.errors[0].message);\n      }\n    }\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u0435\u0440\u0432\u0438\u0441 \u0441 ",(0,t.jsx)(n.code,{children:"OnModuleInit"}),"-\u0445\u0443\u043a\u043e\u043c \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u0440\u0438 \u0441\u0442\u0430\u0440\u0442\u0435 \u043c\u043e\u0434\u0443\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0434\u0435\u0444\u043e\u043b\u0442\u043d\u043e\u0433\u043e \u0430\u0434\u043c\u0438\u043d\u0430, \u0435\u0441\u043b\u0438 \u0435\u0433\u043e \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442."]}),"\n",(0,t.jsxs)(n.p,{children:["\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"libs/core/auth/src/lib/services/auth-authorizer-bootstrap.service.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { isInfrastructureMode } from '@nestjs-mod/common';\nimport { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { AuthAuthorizerService } from './auth-authorizer.service';\nimport { AuthEnvironments } from '../auth.environments';\n\n@Injectable()\nexport class AuthAuthorizerBootstrapService implements OnModuleInit {\n  private logger = new Logger(AuthAuthorizerBootstrapService.name);\n\n  constructor(private readonly authAuthorizerService: AuthAuthorizerService, private readonly authEnvironments: AuthEnvironments) {}\n\n  async onModuleInit() {\n    this.logger.debug('onModuleInit');\n    if (!isInfrastructureMode()) {\n      try {\n        await this.createAdmin();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      } catch (err: any) {\n        this.logger.error(err, err.stack);\n      }\n    }\n  }\n\n  private async createAdmin() {\n    try {\n      if (this.authEnvironments.adminEmail && this.authEnvironments.adminPassword) {\n        await this.authAuthorizerService.createAdmin({\n          username: this.authEnvironments.adminUsername,\n          password: this.authEnvironments.adminPassword,\n          email: this.authEnvironments.adminEmail,\n        });\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (err: any) {\n      this.logger.error(err, err.stack);\n    }\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0435 \u0441\u0435\u0440\u0432\u0438\u0441\u044b \u0432 ",(0,t.jsx)(n.code,{children:"AuthModule"}),", \u0432 \u044d\u0442\u043e\u043c \u043c\u043e\u0434\u0443\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0439 ",(0,t.jsx)(n.code,{children:"Guard"})," \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0442\u043e\u043a\u0435\u043d\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435 \u043b\u044e\u0431\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0431\u044d\u043a\u0435\u043d\u0434\u0430, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0444\u0438\u043b\u044c\u0442\u0440 \u0434\u043b\u044f \u0442\u0440\u0430\u043d\u0441\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0448\u0438\u0431\u043e\u043a \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438."]}),"\n",(0,t.jsxs)(n.p,{children:["\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u043e\u0434\u0443\u043b\u044f \u0431\u0443\u0434\u0443\u0442 \u0438\u043c\u0435\u0442\u044c \u043f\u0440\u0435\u0444\u0438\u043a\u0441 ",(0,t.jsx)(n.code,{children:"AUTH_"}),", \u0434\u043b\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u0430 \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043e\u043f\u0446\u0438\u044e ",(0,t.jsx)(n.code,{children:"propertyNameFormatters"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f: ",(0,t.jsx)(n.code,{children:"SERVER_AUTH_ADMIN_EMAIL"}),", ",(0,t.jsx)(n.code,{children:"SERVER_AUTH_ADMIN_USERNAME"}),", ",(0,t.jsx)(n.code,{children:"SERVER_AUTH_ADMIN_PASSWORD"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"libs/core/auth/src/lib/auth.module.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { AuthorizerGuard, AuthorizerModule } from '@nestjs-mod/authorizer';\nimport { createNestModule, getFeatureDotEnvPropertyNameFormatter, NestModuleCategory } from '@nestjs-mod/common';\nimport { APP_FILTER, APP_GUARD } from '@nestjs/core';\nimport { AUTH_FEATURE, AUTH_MODULE } from './auth.constants';\nimport { AuthEnvironments } from './auth.environments';\nimport { AuthExceptionsFilter } from './auth.filter';\nimport { AuthorizerController } from './controllers/authorizer.controller';\nimport { AuthAuthorizerBootstrapService } from './services/auth-authorizer-bootstrap.service';\nimport { AuthAuthorizerService } from './services/auth-authorizer.service';\n\nexport const { AuthModule } = createNestModule({\n  moduleName: AUTH_MODULE,\n  moduleCategory: NestModuleCategory.feature,\n  staticEnvironmentsModel: AuthEnvironments,\n  imports: [\n    AuthorizerModule.forFeature({\n      featureModuleName: AUTH_FEATURE,\n    }),\n  ],\n  controllers: [AuthorizerController],\n  providers: [{ provide: APP_GUARD, useClass: AuthorizerGuard }, { provide: APP_FILTER, useClass: AuthExceptionsFilter }, AuthAuthorizerService, AuthAuthorizerBootstrapService],\n  wrapForRootAsync: (asyncModuleOptions) => {\n    if (!asyncModuleOptions) {\n      asyncModuleOptions = {};\n    }\n    const FomatterClass = getFeatureDotEnvPropertyNameFormatter(AUTH_FEATURE);\n    Object.assign(asyncModuleOptions, {\n      environmentsOptions: {\n        propertyNameFormatters: [new FomatterClass()],\n        name: AUTH_FEATURE,\n      },\n    });\n\n    return { asyncModuleOptions };\n  },\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"7-\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c-\u043b\u043e\u0433\u0438\u043a\u0443-\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e-\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f-\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439-\u0434\u043b\u044f-\u043c\u043e\u0434\u0443\u043b\u044f-webhookmodule",children:"7. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043b\u043e\u0433\u0438\u043a\u0443 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0434\u043b\u044f \u043c\u043e\u0434\u0443\u043b\u044f WebhookModule"}),"\n",(0,t.jsxs)(n.p,{children:["\u0422\u0430\u043a \u043a\u0430\u043a \u0433\u0430\u0440\u0434 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435 \u043b\u044e\u0431\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432, \u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043c\u043e\u0434\u0443\u043b\u044f ",(0,t.jsx)(n.code,{children:"WebhookModule"}),", \u0442\u043e \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u043c\u043e\u0434\u0443\u043b\u044f ",(0,t.jsx)(n.code,{children:"WebhookModule"})," \u0432 \u043c\u043e\u043c\u0435\u043d\u0442 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0442\u043e\u043a\u0435\u043d\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438."]}),"\n",(0,t.jsxs)(n.p,{children:["\u041c\u0435\u0442\u043e\u0434 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432\u044b\u043d\u0435\u0441\u0435\u043c \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0438\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043f\u0440\u0438 \u0438\u043c\u043f\u043e\u0440\u0442\u0435 \u043c\u043e\u0434\u0443\u043b\u044f \u043a\u0430\u043a \u0444\u0438\u0447\u0430 ",(0,t.jsx)(n.code,{children:"WebhookModule.forFeature()"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"libs/feature/webhook/src/lib/services/webhook-users.service.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { InjectPrismaClient } from '@nestjs-mod/prisma';\nimport { Injectable } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/webhook-client';\nimport { omit } from 'lodash/fp';\nimport { randomUUID } from 'node:crypto';\nimport { CreateWebhookUserArgs, WebhookUserObject } from '../types/webhook-user-object';\nimport { WEBHOOK_FEATURE } from '../webhook.constants';\n\n@Injectable()\nexport class WebhookUsersService {\n  constructor(\n    @InjectPrismaClient(WEBHOOK_FEATURE)\n    private readonly prismaClient: PrismaClient\n  ) {}\n\n  async createUser(user: Omit<CreateWebhookUserArgs, 'id'>) {\n    const data = {\n      externalTenantId: randomUUID(),\n      userRole: 'User',\n      ...omit(['id', 'createdAt', 'updatedAt', 'Webhook_Webhook_createdByToWebhookUser', 'Webhook_Webhook_updatedByToWebhookUser'], user),\n    } as WebhookUserObject;\n    const existsUser = await this.prismaClient.webhookUser.findFirst({\n      where: {\n        externalTenantId: user.externalTenantId,\n        externalUserId: user.externalUserId,\n      },\n    });\n    if (!existsUser) {\n      return await this.prismaClient.webhookUser.create({\n        data,\n      });\n    }\n    return existsUser;\n  }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u042d\u043a\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u0441\u0435\u0440\u0432\u0438\u0441 \u0438\u0437 \u043c\u043e\u0434\u0443\u043b\u044f \u0438 \u043f\u0440\u0438\u0437\u043c\u0430 \u043c\u043e\u0434\u0443\u043b\u044c \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u043d \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442."}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"libs/feature/webhook/src/lib/webhook.module.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { PrismaToolsModule } from '@nestjs-mod-fullstack/prisma-tools';\nimport { createNestModule, getFeatureDotEnvPropertyNameFormatter, NestModuleCategory } from '@nestjs-mod/common';\nimport { PrismaModule } from '@nestjs-mod/prisma';\nimport { HttpModule } from '@nestjs/axios';\nimport { UseFilters, UseGuards } from '@nestjs/common';\nimport { ApiHeaders } from '@nestjs/swagger';\nimport { WebhookUsersController } from './controllers/webhook-users.controller';\nimport { WebhookController } from './controllers/webhook.controller';\nimport { WebhookServiceBootstrap } from './services/webhook-bootstrap.service';\nimport { WebhookToolsService } from './services/webhook-tools.service';\nimport { WebhookUsersService } from './services/webhook-users.service';\nimport { WebhookService } from './services/webhook.service';\nimport { WebhookConfiguration, WebhookStaticConfiguration } from './webhook.configuration';\nimport { WEBHOOK_FEATURE, WEBHOOK_MODULE } from './webhook.constants';\nimport { WebhookEnvironments } from './webhook.environments';\nimport { WebhookExceptionsFilter } from './webhook.filter';\nimport { WebhookGuard } from './webhook.guard';\n\nexport const { WebhookModule } = createNestModule({\n  moduleName: WEBHOOK_MODULE,\n  moduleCategory: NestModuleCategory.feature,\n  staticEnvironmentsModel: WebhookEnvironments,\n  staticConfigurationModel: WebhookStaticConfiguration,\n  configurationModel: WebhookConfiguration,\n  imports: [\n    HttpModule,\n    PrismaModule.forFeature({\n      contextName: WEBHOOK_FEATURE,\n      featureModuleName: WEBHOOK_FEATURE,\n    }),\n    PrismaToolsModule.forFeature({\n      featureModuleName: WEBHOOK_FEATURE,\n    }),\n  ],\n  sharedImports: [\n    PrismaModule.forFeature({\n      contextName: WEBHOOK_FEATURE,\n      featureModuleName: WEBHOOK_FEATURE,\n    }),\n  ],\n  providers: [WebhookToolsService, WebhookServiceBootstrap],\n  controllers: [WebhookUsersController, WebhookController],\n  sharedProviders: [WebhookService, WebhookUsersService],\n  wrapForRootAsync: (asyncModuleOptions) => {\n    if (!asyncModuleOptions) {\n      asyncModuleOptions = {};\n    }\n    const FomatterClass = getFeatureDotEnvPropertyNameFormatter(WEBHOOK_FEATURE);\n    Object.assign(asyncModuleOptions, {\n      environmentsOptions: {\n        propertyNameFormatters: [new FomatterClass()],\n        name: WEBHOOK_FEATURE,\n      },\n    });\n\n    return { asyncModuleOptions };\n  },\n  preWrapApplication: async ({ current }) => {\n    const staticEnvironments = current.staticEnvironments as WebhookEnvironments;\n    const staticConfiguration = current.staticConfiguration as WebhookStaticConfiguration;\n\n    for (const ctrl of [WebhookController, WebhookUsersController]) {\n      if (staticEnvironments.useFilters) {\n        UseFilters(WebhookExceptionsFilter)(ctrl);\n      }\n      if (staticEnvironments.useGuards) {\n        UseGuards(WebhookGuard)(ctrl);\n      }\n      if (staticConfiguration.externalUserIdHeaderName && staticConfiguration.externalTenantIdHeaderName) {\n        ApiHeaders([\n          {\n            name: staticConfiguration.externalUserIdHeaderName,\n            allowEmptyValue: true,\n          },\n          {\n            name: staticConfiguration.externalTenantIdHeaderName,\n            allowEmptyValue: true,\n          },\n        ])(ctrl);\n      }\n    }\n  },\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043c\u043e\u0434\u0443\u043b\u044f ",(0,t.jsx)(n.code,{children:"AuthorizerModule"}),", \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u0438\u0437 \u043c\u043e\u0434\u0443\u043b\u044f ",(0,t.jsx)(n.code,{children:"WebhookModule"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"apps/server/src/main.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"//...\n\nbootstrapNestApplication({\n  modules: {\n    //...\n    core: [\n      AuthorizerModule.forRootAsync({\n        imports: [WebhookModule.forFeature({ featureModuleName: AUTH_FEATURE })],\n        inject: [WebhookUsersService],\n        configurationFactory: (webhookUsersService: WebhookUsersService) => {\n          return {\n            extraHeaders: {\n              'x-authorizer-url': `http://localhost:${process.env.SERVER_AUTHORIZER_EXTERNAL_CLIENT_PORT}`,\n            },\n            checkAccessValidator: async (authorizerUser?: AuthorizerUser, options?: CheckAccessOptions, ctx?: ExecutionContext) => {\n              if (typeof ctx?.getClass === 'function' && typeof ctx?.getHandler === 'function' && ctx?.getClass().name === 'TerminusHealthCheckController' && ctx?.getHandler().name === 'check') {\n                return true;\n              }\n\n              const result = await defaultAuthorizerCheckAccessValidator(authorizerUser, options);\n\n              if (ctx && authorizerUser?.id) {\n                const webhookUser = await webhookUsersService.createUser({\n                  externalUserId: authorizerUser?.id,\n                  externalTenantId: authorizerUser?.id,\n                  userRole: authorizerUser.roles?.includes('admin') ? 'Admin' : 'User',\n                });\n                const req: WebhookRequest = getRequestFromExecutionContext(ctx);\n                req.externalTenantId = webhookUser.externalTenantId;\n              }\n\n              return result;\n            },\n          };\n        },\n      }),\n      //...\n    ],\n    //...\n  },\n  //...\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"8-\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c-\u0432\u0435\u0441\u044c-\u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0439-\u043a\u043e\u0434-\u0432-angular-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443-\u043f\u043e-\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438",children:"8. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432\u0435\u0441\u044c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0439 \u043a\u043e\u0434 \u0432 Angular-\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u043f\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438"}),"\n",(0,t.jsxs)(n.p,{children:["\u042d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e ",(0,t.jsx)(n.code,{children:"DI"})," \u043e\u0442 ",(0,t.jsx)(n.code,{children:"Angular"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"libs/core/auth-angular/src/lib/services/authorizer.service.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { Authorizer, ConfigType } from '@authorizerdev/authorizer-js';\n\nexport const AUTHORIZER_URL = new InjectionToken<string>('AuthorizerURL');\n\n@Injectable({ providedIn: 'root' })\nexport class AuthorizerService extends Authorizer {\n  constructor(\n    @Inject(AUTHORIZER_URL)\n    private readonly authorizerURL: string\n  ) {\n    super({\n      authorizerURL:\n        // need for override from e2e-tests\n        localStorage.getItem('authorizerURL') ||\n        // use from environments\n        authorizerURL,\n      clientID: '',\n      redirectURL: window.location.origin,\n    } as ConfigType);\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u0412\u0441\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432 ",(0,t.jsx)(n.code,{children:"AuthService"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"libs/core/auth-angular/src/lib/services/auth.service.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Injectable } from '@angular/core';\nimport { AuthToken, LoginInput, SignupInput, User } from '@authorizerdev/authorizer-js';\nimport { mapGraphqlErrors } from '@nestjs-mod-fullstack/common-angular';\nimport { BehaviorSubject, catchError, from, map, of, tap } from 'rxjs';\nimport { AuthorizerService } from './authorizer.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  profile$ = new BehaviorSubject<User | undefined>(undefined);\n  tokens$ = new BehaviorSubject<AuthToken | undefined>(undefined);\n\n  constructor(private readonly authorizerService: AuthorizerService) {}\n\n  getAuthorizerClientID() {\n    return this.authorizerService.config.clientID;\n  }\n\n  setAuthorizerClientID(clientID: string) {\n    this.authorizerService.config.clientID = clientID;\n  }\n\n  signUp(data: SignupInput) {\n    return from(\n      this.authorizerService.signup({\n        ...data,\n        email: data.email?.toLowerCase(),\n      })\n    ).pipe(\n      mapGraphqlErrors(),\n      map((result) => {\n        this.setProfileAndTokens(result);\n        return {\n          profile: result?.user,\n          tokens: this.tokens$.value,\n        };\n      })\n    );\n  }\n\n  signIn(data: LoginInput) {\n    return from(\n      this.authorizerService.login({\n        ...data,\n        email: data.email?.toLowerCase(),\n      })\n    ).pipe(\n      mapGraphqlErrors(),\n      map((result) => {\n        this.setProfileAndTokens(result);\n        return {\n          profile: result?.user,\n          tokens: this.tokens$.value,\n        };\n      })\n    );\n  }\n\n  signOut() {\n    return from(this.authorizerService.logout(this.getAuthorizationHeaders())).pipe(\n      mapGraphqlErrors(),\n      tap(() => {\n        this.clearProfileAndTokens();\n      })\n    );\n  }\n\n  refreshToken() {\n    return from(this.authorizerService.browserLogin()).pipe(\n      mapGraphqlErrors(),\n      tap((result) => {\n        this.setProfileAndTokens(result);\n      }),\n      catchError((err) => {\n        console.error(err);\n        this.clearProfileAndTokens();\n        return of(null);\n      })\n    );\n  }\n\n  clearProfileAndTokens() {\n    this.setProfileAndTokens({} as AuthToken);\n  }\n\n  setProfileAndTokens(result: AuthToken | undefined) {\n    this.tokens$.next(result as AuthToken);\n    this.profile$.next(result?.user);\n  }\n\n  getAuthorizationHeaders() {\n    if (!this.tokens$.value?.access_token) {\n      return undefined;\n    }\n    return {\n      Authorization: `Bearer ${this.tokens$.value.access_token}`,\n    };\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u0427\u0430\u0441\u0442\u044c \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438\u043c\u0435\u044e\u0442 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u043f\u043e \u0440\u043e\u043b\u044f\u043c, \u0434\u043b\u044f \u0430\u043a\u0442\u0438\u0432\u0430\u0446\u0438\u0438 \u0442\u0430\u043a\u043e\u0439 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c ",(0,t.jsx)(n.code,{children:"Guard"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"libs/core/auth-angular/src/lib/services/auth-guard.service.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { of } from 'rxjs';\nimport { AuthService } from './auth.service';\nexport const AUTH_GUARD_DATA_ROUTE_KEY = 'authGuardData';\n\nexport class AuthGuardData {\n  roles?: string[];\n\n  constructor(options?: AuthGuardData) {\n    Object.assign(this, options);\n  }\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuardService implements CanActivate {\n  constructor(private readonly authAuthService: AuthService) {}\n  canActivate(route: ActivatedRouteSnapshot) {\n    if (route.data[AUTH_GUARD_DATA_ROUTE_KEY] instanceof AuthGuardData) {\n      const authGuardData = route.data[AUTH_GUARD_DATA_ROUTE_KEY];\n      const authUser = this.authAuthService.profile$.value;\n      const authGuardDataRoles = (authGuardData.roles || []).map((role) => role.toLowerCase());\n      return of(Boolean((authUser && authGuardDataRoles.length > 0 && authGuardDataRoles.some((r) => authUser.roles?.includes(r))) || (authGuardDataRoles.length === 0 && !authUser?.roles)));\n    }\n    return of(true);\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0443 \u0444\u043e\u0440\u043c\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 ",(0,t.jsx)(n.em,{children:"libs/core/auth-angular/src/lib/forms/auth-sign-up-form/auth-sign-up-form.component.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { AsyncPipe, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Inject, Input, OnInit, Optional, Output } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, UntypedFormGroup } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AuthToken, SignupInput } from '@authorizerdev/authorizer-js';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { FormlyFieldConfig, FormlyModule } from '@ngx-formly/core';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { NZ_MODAL_DATA } from 'ng-zorro-antd/modal';\nimport { BehaviorSubject, catchError, of, tap } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\n\n@UntilDestroy()\n@Component({\n  standalone: true,\n  imports: [FormlyModule, NzFormModule, NzInputModule, NzButtonModule, FormsModule, ReactiveFormsModule, AsyncPipe, NgIf, RouterModule],\n  selector: 'auth-sign-up-form',\n  templateUrl: './auth-sign-up-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthSignUpFormComponent implements OnInit {\n  @Input()\n  hideButtons?: boolean;\n\n  @Output()\n  afterSignUp = new EventEmitter<AuthToken>();\n\n  form = new UntypedFormGroup({});\n  formlyModel$ = new BehaviorSubject<object | null>(null);\n  formlyFields$ = new BehaviorSubject<FormlyFieldConfig[] | null>(null);\n\n  constructor(\n    @Optional()\n    @Inject(NZ_MODAL_DATA)\n    private readonly nzModalData: AuthSignUpFormComponent,\n    private readonly authService: AuthService,\n    private readonly nzMessageService: NzMessageService\n  ) {}\n\n  ngOnInit(): void {\n    Object.assign(this, this.nzModalData);\n    this.setFieldsAndModel({ password: '', confirm_password: '' });\n  }\n\n  setFieldsAndModel(data: SignupInput = { password: '', confirm_password: '' }) {\n    this.formlyFields$.next([\n      {\n        key: 'email',\n        type: 'input',\n        validation: {\n          show: true,\n        },\n        props: {\n          label: `auth.form.email`,\n          placeholder: 'email',\n          required: true,\n        },\n      },\n      {\n        key: 'password',\n        type: 'input',\n        validation: {\n          show: true,\n        },\n        props: {\n          label: `auth.form.password`,\n          placeholder: 'password',\n          required: true,\n          type: 'password',\n        },\n      },\n      {\n        key: 'confirm_password',\n        type: 'input',\n        validation: {\n          show: true,\n        },\n        props: {\n          label: `auth.form.confirm_password`,\n          placeholder: 'confirm_password',\n          required: true,\n          type: 'password',\n        },\n      },\n    ]);\n    this.formlyModel$.next(this.toModel(data));\n  }\n\n  submitForm(): void {\n    if (this.form.valid) {\n      const value = this.toJson(this.form.value);\n      this.authService\n        .signUp({ ...value })\n        .pipe(\n          tap((result) => {\n            if (result.tokens) {\n              this.afterSignUp.next(result.tokens);\n              this.nzMessageService.success('Success');\n            }\n          }),\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          catchError((err: any) => {\n            console.error(err);\n            this.nzMessageService.error(err.message);\n            return of(null);\n          }),\n          untilDestroyed(this)\n        )\n        .subscribe();\n    } else {\n      console.log(this.form.controls);\n      this.nzMessageService.warning('Validation errors');\n    }\n  }\n\n  private toModel(data: SignupInput): object | null {\n    return {\n      email: data['email'],\n      password: data['password'],\n      confirm_password: data['confirm_password'],\n    };\n  }\n\n  private toJson(data: SignupInput) {\n    return {\n      email: data['email'],\n      password: data['password'],\n      confirm_password: data['confirm_password'],\n    };\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0448\u0430\u0431\u043b\u043e\u043d \u0444\u043e\u0440\u043c\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 ",(0,t.jsx)(n.em,{children:"libs/core/auth-angular/src/lib/forms/auth-sign-up-form/auth-sign-up-form.component.html"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'@if (formlyFields$ | async; as formlyFields) {\n<form nz-form [formGroup]="form" (ngSubmit)="submitForm()_\n  <formly-form [model]="formlyModel$ | async" [fields]="formlyFields" [form]="form_ </formly-form>\n  @if (!hideButtons) {\n  <nz-form-control>\n    <div class="flex justify-between_\n      <div>\n        <button nz-button nzType="default" type="button" [routerLink]="\'/sign-in\'_Sign-in</button>\n      </div>\n      <button nz-button nzType="primary" type="submit" [disabled]="!form.valid_Sign-up</button>\n    </div>\n  </nz-form-control>\n  }\n</form>\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0443 \u0444\u043e\u0440\u043c\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 ",(0,t.jsx)(n.em,{children:"libs/core/auth-angular/src/lib/forms/auth-sign-in-form/auth-sign-in-form.component.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { AsyncPipe, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Inject, Input, OnInit, Optional, Output } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, UntypedFormGroup } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AuthToken, LoginInput } from '@authorizerdev/authorizer-js';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { FormlyFieldConfig, FormlyModule } from '@ngx-formly/core';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzMessageService } from 'ng-zorro-antd/message';\nimport { NZ_MODAL_DATA } from 'ng-zorro-antd/modal';\nimport { BehaviorSubject, catchError, of, tap } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\n\n@UntilDestroy()\n@Component({\n  standalone: true,\n  imports: [FormlyModule, NzFormModule, NzInputModule, NzButtonModule, FormsModule, ReactiveFormsModule, AsyncPipe, NgIf, RouterModule],\n  selector: 'auth-sign-in-form',\n  templateUrl: './auth-sign-in-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthSignInFormComponent implements OnInit {\n  @Input()\n  hideButtons?: boolean;\n\n  @Output()\n  afterSignIn = new EventEmitter<AuthToken>();\n\n  form = new UntypedFormGroup({});\n  formlyModel$ = new BehaviorSubject<object | null>(null);\n  formlyFields$ = new BehaviorSubject<FormlyFieldConfig[] | null>(null);\n\n  constructor(\n    @Optional()\n    @Inject(NZ_MODAL_DATA)\n    private readonly nzModalData: AuthSignInFormComponent,\n    private readonly authService: AuthService,\n    private readonly nzMessageService: NzMessageService\n  ) {}\n\n  ngOnInit(): void {\n    Object.assign(this, this.nzModalData);\n    this.setFieldsAndModel({ password: '' });\n  }\n\n  setFieldsAndModel(data: LoginInput = { password: '' }) {\n    this.formlyFields$.next([\n      {\n        key: 'email',\n        type: 'input',\n        validation: {\n          show: true,\n        },\n        props: {\n          label: `auth.form.email`,\n          placeholder: 'email',\n          required: true,\n        },\n      },\n      {\n        key: 'password',\n        type: 'input',\n        validation: {\n          show: true,\n        },\n        props: {\n          label: `auth.form.password`,\n          placeholder: 'password',\n          required: true,\n          type: 'password',\n        },\n      },\n    ]);\n    this.formlyModel$.next(this.toModel(data));\n  }\n\n  submitForm(): void {\n    if (this.form.valid) {\n      const value = this.toJson(this.form.value);\n      this.authService\n        .signIn(value)\n        .pipe(\n          tap((result) => {\n            if (result.tokens) {\n              this.afterSignIn.next(result.tokens);\n              this.nzMessageService.success('Success');\n            }\n          }),\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          catchError((err: any) => {\n            console.error(err);\n            this.nzMessageService.error(err.message);\n            return of(null);\n          }),\n          untilDestroyed(this)\n        )\n        .subscribe();\n    } else {\n      console.log(this.form.controls);\n      this.nzMessageService.warning('Validation errors');\n    }\n  }\n\n  private toModel(data: LoginInput): object | null {\n    return {\n      email: data['email'],\n      password: data['password'],\n    };\n  }\n\n  private toJson(data: LoginInput) {\n    return {\n      email: data['email'],\n      password: data['password'],\n    };\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0448\u0430\u0431\u043b\u043e\u043d \u0444\u043e\u0440\u043c\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 ",(0,t.jsx)(n.em,{children:"libs/core/auth-angular/src/lib/forms/auth-sign-in-form/auth-sign-in-form.component.html"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'@if (formlyFields$ | async; as formlyFields) {\n<form nz-form [formGroup]="form" (ngSubmit)="submitForm()_\n  <formly-form [model]="formlyModel$ | async" [fields]="formlyFields" [form]="form_ </formly-form>\n  @if (!hideButtons) {\n  <nz-form-control>\n    <div class="flex justify-between_\n      <div>\n        <button nz-button nzType="default" type="button" [routerLink]="\'/sign-up\'_Sign-up</button>\n      </div>\n      <button nz-button nzType="primary" type="submit" [disabled]="!form.valid_Sign-in</button>\n    </div>\n  </nz-form-control>\n  }\n</form>\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"9-\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c-\u0441\u0435\u0440\u0432\u0438\u0441-\u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438-\u0432-angular-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435",children:"9. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u0435\u0440\u0432\u0438\u0441 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0432 Angular-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435"}),"\n",(0,t.jsxs)(n.p,{children:["\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u0435\u0440\u0432\u0438\u0441\u0435 \u043c\u044b \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0440\u0435\u0444\u0440\u0435\u0448\u0438\u0442\u044c \u0442\u043e\u043a\u0435\u043d \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c\u0441\u044f \u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430 \u043f\u0440\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438, \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0438 \u0440\u0435\u0444\u0440\u0435\u0448\u0435, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u0442\u043e\u043a\u0435\u043d \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0432 ",(0,t.jsx)(n.code,{children:"sdk"})," \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u044d\u043a\u0435\u043d\u0434\u043e\u043c."]}),"\n",(0,t.jsxs)(n.p,{children:["\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"apps/client/src/app/app-initializer.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { HttpHeaders } from '@angular/common/http';\nimport { DefaultRestService, WebhookRestService } from '@nestjs-mod-fullstack/app-angular-rest-sdk';\nimport { AuthService } from '@nestjs-mod-fullstack/auth-angular';\nimport { catchError, map, mergeMap, of, Subscription, tap, throwError } from 'rxjs';\n\nexport class AppInitializer {\n  private subscribeToTokenUpdatesSubscription?: Subscription;\n\n  constructor(private readonly defaultRestService: DefaultRestService, private readonly webhookRestService: WebhookRestService, private readonly authService: AuthService) {}\n\n  resolve() {\n    this.subscribeToTokenUpdates();\n    return (\n      this.authService.getAuthorizerClientID()\n        ? of(null)\n        : this.defaultRestService.authorizerControllerGetAuthorizerClientID().pipe(\n            map(({ clientID }) => {\n              this.authService.setAuthorizerClientID(clientID);\n              return null;\n            })\n          )\n    ).pipe(\n      mergeMap(() => this.authService.refreshToken()),\n      catchError((err) => {\n        console.error(err);\n        return throwError(() => err);\n      })\n    );\n  }\n\n  private subscribeToTokenUpdates() {\n    if (this.subscribeToTokenUpdatesSubscription) {\n      this.subscribeToTokenUpdatesSubscription.unsubscribe();\n      this.subscribeToTokenUpdatesSubscription = undefined;\n    }\n    this.subscribeToTokenUpdatesSubscription = this.authService.tokens$\n      .pipe(\n        tap(() => {\n          const authorizationHeaders = this.authService.getAuthorizationHeaders();\n          if (authorizationHeaders) {\n            this.defaultRestService.defaultHeaders = new HttpHeaders(authorizationHeaders);\n            this.webhookRestService.defaultHeaders = new HttpHeaders(authorizationHeaders);\n          }\n        })\n      )\n      .subscribe();\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"10-\u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c-\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e-angular-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f",children:"10. \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044e Angular-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f"}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"apps/client/src/app/app.config.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { provideHttpClient } from '@angular/common/http';\nimport { APP_INITIALIZER, ApplicationConfig, ErrorHandler, importProvidersFrom, provideZoneChangeDetection } from '@angular/core';\nimport { provideClientHydration } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { provideRouter } from '@angular/router';\nimport { DefaultRestService, RestClientApiModule, RestClientConfiguration, WebhookRestService } from '@nestjs-mod-fullstack/app-angular-rest-sdk';\nimport { AUTHORIZER_URL, AuthService } from '@nestjs-mod-fullstack/auth-angular';\nimport { WEBHOOK_CONFIGURATION_TOKEN, WebhookConfiguration } from '@nestjs-mod-fullstack/webhook-angular';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyNgZorroAntdModule } from '@ngx-formly/ng-zorro-antd';\nimport { en_US, provideNzI18n } from 'ng-zorro-antd/i18n';\nimport { serverUrl, webhookSuperAdminExternalUserId } from '../environments/environment';\nimport { AppInitializer } from './app-initializer';\nimport { AppErrorHandler } from './app.error-handler';\nimport { appRoutes } from './app.routes';\n\nexport const appConfig = ({ authorizerURL }: { authorizerURL?: string }): ApplicationConfig => {\n  return {\n    providers: [\n      provideClientHydration(),\n      provideZoneChangeDetection({ eventCoalescing: true }),\n      provideRouter(appRoutes),\n      provideHttpClient(),\n      provideNzI18n(en_US),\n      {\n        provide: WEBHOOK_CONFIGURATION_TOKEN,\n        useValue: new WebhookConfiguration({ webhookSuperAdminExternalUserId }),\n      },\n      importProvidersFrom(\n        BrowserAnimationsModule,\n        RestClientApiModule.forRoot(\n          () =>\n            new RestClientConfiguration({\n              basePath: serverUrl,\n            })\n        ),\n        FormlyModule.forRoot(),\n        FormlyNgZorroAntdModule\n      ),\n      { provide: ErrorHandler, useClass: AppErrorHandler },\n      {\n        provide: AUTHORIZER_URL,\n        useValue: authorizerURL,\n      },\n      {\n        provide: APP_INITIALIZER,\n        useFactory: (defaultRestService: DefaultRestService, webhookRestService: WebhookRestService, authService: AuthService) => () => new AppInitializer(defaultRestService, webhookRestService, authService).resolve(),\n        multi: true,\n        deps: [DefaultRestService, WebhookRestService, AuthService],\n      },\n    ],\n  };\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"11-\u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c-\u0444\u0430\u0439\u043b\u044b-\u0438-\u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c-\u043d\u043e\u0432\u044b\u0435-\u0434\u043b\u044f-\u0437\u0430\u043f\u0443\u0441\u043a\u0430-docker-compose-\u0438-kubernetes",children:"11. \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b\u044b \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u043e\u0432\u044b\u0435 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 docker-compose \u0438 kubernetes"}),"\n",(0,t.jsxs)(n.p,{children:["\u041f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432\u043e \u0432\u0441\u0435\u0445 \u0444\u0430\u0439\u043b\u0430\u0445 \u044f \u043d\u0435 \u0431\u0443\u0434\u0443, \u0438\u0445 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043f\u043e \u043a\u043e\u043c\u043c\u0438\u0442\u0443 \u0441 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438 \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0430, \u043d\u0438\u0436\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0439 ",(0,t.jsx)(n.code,{children:"docker-compose-full.yml"})," \u0438 \u0435\u0433\u043e \u0444\u0430\u0439\u043b \u0441 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f."]}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:".docker/docker-compose-full.yml"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"version: '3'\nnetworks:\n  nestjs-mod-fullstack-network:\n    driver: 'bridge'\nservices:\n  nestjs-mod-fullstack-postgre-sql:\n    image: 'bitnami/postgresql:15.5.0'\n    container_name: 'nestjs-mod-fullstack-postgre-sql'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    healthcheck:\n      test:\n        - 'CMD-SHELL'\n        - 'pg_isready -U postgres'\n      interval: '5s'\n      timeout: '5s'\n      retries: 5\n    tty: true\n    restart: 'always'\n    environment:\n      POSTGRESQL_USERNAME: '${SERVER_POSTGRE_SQL_POSTGRESQL_USERNAME}'\n      POSTGRESQL_PASSWORD: '${SERVER_POSTGRE_SQL_POSTGRESQL_PASSWORD}'\n      POSTGRESQL_DATABASE: '${SERVER_POSTGRE_SQL_POSTGRESQL_DATABASE}'\n    volumes:\n      - 'nestjs-mod-fullstack-postgre-sql-volume:/bitnami/postgresql'\n  nestjs-mod-fullstack-authorizer:\n    image: 'lakhansamani/authorizer:1.4.4'\n    container_name: 'nestjs-mod-fullstack-authorizer'\n    ports:\n      - '8000:8080'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    environment:\n      DATABASE_URL: '${SERVER_AUTHORIZER_DATABASE_URL}'\n      DATABASE_TYPE: '${SERVER_AUTHORIZER_DATABASE_TYPE}'\n      DATABASE_NAME: '${SERVER_AUTHORIZER_DATABASE_NAME}'\n      ADMIN_SECRET: '${SERVER_AUTHORIZER_ADMIN_SECRET}'\n      PORT: '${SERVER_AUTHORIZER_PORT}'\n      AUTHORIZER_URL: '${SERVER_AUTHORIZER_URL}'\n      COOKIE_NAME: '${SERVER_AUTHORIZER_COOKIE_NAME}'\n      SMTP_HOST: '${SERVER_AUTHORIZER_SMTP_HOST}'\n      SMTP_PORT: '${SERVER_AUTHORIZER_SMTP_PORT}'\n      SMTP_USERNAME: '${SERVER_AUTHORIZER_SMTP_USERNAME}'\n      SMTP_PASSWORD: '${SERVER_AUTHORIZER_SMTP_PASSWORD}'\n      SENDER_EMAIL: '${SERVER_AUTHORIZER_SENDER_EMAIL}'\n      SENDER_NAME: '${SERVER_AUTHORIZER_SENDER_NAME}'\n      DISABLE_PLAYGROUND: '${SERVER_AUTHORIZER_DISABLE_PLAYGROUND}'\n      ACCESS_TOKEN_EXPIRY_TIME: '${SERVER_AUTHORIZER_ACCESS_TOKEN_EXPIRY_TIME}'\n      DISABLE_STRONG_PASSWORD: '${SERVER_AUTHORIZER_DISABLE_STRONG_PASSWORD}'\n      DISABLE_EMAIL_VERIFICATION: '${SERVER_AUTHORIZER_DISABLE_EMAIL_VERIFICATION}'\n      ORGANIZATION_NAME: '${SERVER_AUTHORIZER_ORGANIZATION_NAME}'\n      IS_SMS_SERVICE_ENABLED: '${SERVER_AUTHORIZER_IS_SMS_SERVICE_ENABLED}'\n      IS_EMAIL_SERVICE_ENABLED: '${SERVER_AUTHORIZER_IS_SMS_SERVICE_ENABLED}'\n      ENV: '${SERVER_AUTHORIZER_ENV}'\n      RESET_PASSWORD_URL: '${SERVER_AUTHORIZER_RESET_PASSWORD_URL}'\n      ROLES: '${SERVER_AUTHORIZER_ROLES}'\n      DEFAULT_ROLES: '${SERVER_AUTHORIZER_DEFAULT_ROLES}'\n      JWT_ROLE_CLAIM: '${SERVER_AUTHORIZER_JWT_ROLE_CLAIM}'\n      ORGANIZATION_LOGO: '${SERVER_AUTHORIZER_ORGANIZATION_LOGO}'\n    tty: true\n    restart: 'always'\n    depends_on:\n      nestjs-mod-fullstack-postgre-sql:\n        condition: service_healthy\n      nestjs-mod-fullstack-postgre-sql-migrations:\n        condition: service_completed_successfully\n  nestjs-mod-fullstack-postgre-sql-migrations:\n    image: 'ghcr.io/nestjs-mod/nestjs-mod-fullstack-migrations:${ROOT_VERSION}'\n    container_name: 'nestjs-mod-fullstack-postgre-sql-migrations'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    tty: true\n    environment:\n      NX_SKIP_NX_CACHE: 'true'\n      SERVER_ROOT_DATABASE_URL: '${SERVER_ROOT_DATABASE_URL}'\n      SERVER_APP_DATABASE_URL: '${SERVER_APP_DATABASE_URL}'\n      SERVER_WEBHOOK_DATABASE_URL: '${SERVER_WEBHOOK_DATABASE_URL}'\n      SERVER_AUTHORIZER_DATABASE_URL: '${SERVER_AUTHORIZER_DATABASE_URL}'\n    depends_on:\n      nestjs-mod-fullstack-postgre-sql:\n        condition: 'service_healthy'\n    working_dir: '/usr/src/app'\n    volumes:\n      - './../apps:/usr/src/app/apps'\n      - './../libs:/usr/src/app/libs'\n  nestjs-mod-fullstack-server:\n    image: 'ghcr.io/nestjs-mod/nestjs-mod-fullstack-server:${SERVER_VERSION}'\n    container_name: 'nestjs-mod-fullstack-server'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    extra_hosts:\n      - 'host.docker.internal:host-gateway'\n    healthcheck:\n      test: ['CMD-SHELL', 'npx -y wait-on --timeout= --interval=1000 --window --verbose --log http://localhost:${SERVER_PORT}/api/health']\n      interval: 30s\n      timeout: 10s\n      retries: 10\n    tty: true\n    environment:\n      SERVER_APP_DATABASE_URL: '${SERVER_APP_DATABASE_URL}'\n      SERVER_PORT: '${SERVER_PORT}'\n      SERVER_WEBHOOK_DATABASE_URL: '${SERVER_WEBHOOK_DATABASE_URL}'\n      SERVER_WEBHOOK_SUPER_ADMIN_EXTERNAL_USER_ID: '${SERVER_WEBHOOK_SUPER_ADMIN_EXTERNAL_USER_ID}'\n      SERVER_AUTH_ADMIN_EMAIL: '${SERVER_AUTH_ADMIN_EMAIL}'\n      SERVER_AUTH_ADMIN_USERNAME: '${SERVER_AUTH_ADMIN_USERNAME}'\n      SERVER_AUTH_ADMIN_PASSWORD: '${SERVER_AUTH_ADMIN_PASSWORD}'\n      NODE_TLS_REJECT_UNAUTHORIZED: '0'\n      SERVER_AUTHORIZER_URL: '${SERVER_AUTHORIZER_URL}'\n      SERVER_AUTHORIZER_REDIRECT_URL: '${SERVER_AUTHORIZER_REDIRECT_URL}'\n      SERVER_AUTHORIZER_AUTHORIZER_URL: '${SERVER_AUTHORIZER_AUTHORIZER_URL}'\n      SERVER_AUTHORIZER_ADMIN_SECRET: '${SERVER_AUTHORIZER_ADMIN_SECRET}'\n    restart: 'always'\n    depends_on:\n      nestjs-mod-fullstack-postgre-sql:\n        condition: service_healthy\n      nestjs-mod-fullstack-postgre-sql-migrations:\n        condition: service_completed_successfully\n  nestjs-mod-fullstack-nginx:\n    image: 'ghcr.io/nestjs-mod/nestjs-mod-fullstack-nginx:${CLIENT_VERSION}'\n    container_name: 'nestjs-mod-fullstack-nginx'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    healthcheck:\n      test: ['CMD-SHELL', 'curl -so /dev/null http://localhost:${NGINX_PORT} || exit 1']\n      interval: 30s\n      timeout: 10s\n      retries: 10\n    environment:\n      SERVER_PORT: '${SERVER_PORT}'\n      NGINX_PORT: '${NGINX_PORT}'\n      CLIENT_AUTHORIZER_URL: '${CLIENT_AUTHORIZER_URL}'\n      CLIENT_WEBHOOK_SUPER_ADMIN_EXTERNAL_USER_ID: '${CLIENT_WEBHOOK_SUPER_ADMIN_EXTERNAL_USER_ID}'\n    restart: 'always'\n    depends_on:\n      nestjs-mod-fullstack-server:\n        condition: service_healthy\n    ports:\n      - '${NGINX_PORT}:${NGINX_PORT}'\n  nestjs-mod-fullstack-e2e-tests:\n    image: 'ghcr.io/nestjs-mod/nestjs-mod-fullstack-e2e-tests:${ROOT_VERSION}'\n    container_name: 'nestjs-mod-fullstack-e2e-tests'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    environment:\n      IS_DOCKER_COMPOSE: 'true'\n      BASE_URL: 'http://nestjs-mod-fullstack-nginx:${NGINX_PORT}'\n      SERVER_AUTHORIZER_URL: 'http://nestjs-mod-fullstack-authorizer:8080'\n      SERVER_URL: 'http://nestjs-mod-fullstack-server:8080'\n      SERVER_AUTH_ADMIN_EMAIL: '${SERVER_AUTH_ADMIN_EMAIL}'\n      SERVER_AUTH_ADMIN_USERNAME: '${SERVER_AUTH_ADMIN_USERNAME}'\n      SERVER_AUTH_ADMIN_PASSWORD: '${SERVER_AUTH_ADMIN_PASSWORD}'\n      SERVER_AUTHORIZER_ADMIN_SECRET: '${SERVER_AUTHORIZER_ADMIN_SECRET}'\n    depends_on:\n      nestjs-mod-fullstack-nginx:\n        condition: service_healthy\n    working_dir: '/usr/src/app'\n    volumes:\n      - './../apps:/usr/src/app/apps'\n      - './../libs:/usr/src/app/libs'\n  nestjs-mod-fullstack-https-portal:\n    image: steveltn/https-portal:1\n    container_name: 'nestjs-mod-fullstack-https-portal'\n    networks:\n      - 'nestjs-mod-fullstack-network'\n    ports:\n      - '80:80'\n      - '443:443'\n    links:\n      - nestjs-mod-fullstack-nginx\n    restart: always\n    environment:\n      STAGE: '${HTTPS_PORTAL_STAGE}'\n      DOMAINS: '${SERVER_DOMAIN} -> http://nestjs-mod-fullstack-nginx:${NGINX_PORT}'\n    depends_on:\n      nestjs-mod-fullstack-nginx:\n        condition: service_healthy\n    volumes:\n      - nestjs-mod-fullstack-https-portal-volume:/var/lib/https-portal\nvolumes:\n  nestjs-mod-fullstack-postgre-sql-volume:\n    name: 'nestjs-mod-fullstack-postgre-sql-volume'\n  nestjs-mod-fullstack-https-portal-volume:\n    name: 'nestjs-mod-fullstack-https-portal-volume'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:".docker/docker-compose-full.env"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"SERVER_PORT=9090\nNGINX_PORT=8080\nSERVER_ROOT_DATABASE_URL=postgres://postgres:postgres_password@nestjs-mod-fullstack-postgre-sql:5432/postgres?schema=public\nSERVER_APP_DATABASE_URL=postgres://app:app_password@nestjs-mod-fullstack-postgre-sql:5432/app?schema=public\nSERVER_WEBHOOK_DATABASE_URL=postgres://webhook:webhook_password@nestjs-mod-fullstack-postgre-sql:5432/webhook?schema=public\nSERVER_POSTGRE_SQL_POSTGRESQL_USERNAME=postgres\nSERVER_POSTGRE_SQL_POSTGRESQL_PASSWORD=postgres_password\nSERVER_POSTGRE_SQL_POSTGRESQL_DATABASE=postgres\nSERVER_DOMAIN=example.com\nHTTPS_PORTAL_STAGE=local # local|stage|production\n\nCLIENT_AUTHORIZER_URL=http://localhost:8000\nSERVER_AUTHORIZER_REDIRECT_URL=http://localhost:8080\nSERVER_AUTH_ADMIN_EMAIL=nestjs-mod-fullstack@site15.ru\nSERVER_AUTH_ADMIN_USERNAME=admin\nSERVER_AUTH_ADMIN_PASSWORD=SbxcbII7RUvCOe9TDXnKhfRrLJW5cGDA\nSERVER_URL=http://localhost:9090/api\nSERVER_AUTHORIZER_URL=http://localhost:8000\nSERVER_AUTHORIZER_ADMIN_SECRET=VfKSfPPljhHBXCEohnitursmgDxfAyiD\nSERVER_AUTHORIZER_DATABASE_TYPE=postgres\nSERVER_AUTHORIZER_DATABASE_URL=postgres://Yk42KA4sOb:B7Ep2MwlRR6fAx0frXGWVTGP850qAxM6@nestjs-mod-fullstack-postgre-sql:5432/authorizer\nSERVER_AUTHORIZER_DATABASE_NAME=authorizer\nSERVER_AUTHORIZER_PORT=8080\nSERVER_AUTHORIZER_AUTHORIZER_URL=http://nestjs-mod-fullstack-authorizer:8080\nSERVER_AUTHORIZER_COOKIE_NAME=authorizer\nSERVER_AUTHORIZER_DISABLE_PLAYGROUND=true\nSERVER_AUTHORIZER_ACCESS_TOKEN_EXPIRY_TIME=30m\nSERVER_AUTHORIZER_DISABLE_STRONG_PASSWORD=true\nSERVER_AUTHORIZER_DISABLE_EMAIL_VERIFICATION=true\nSERVER_AUTHORIZER_ORGANIZATION_NAME=NestJSModFullstack\nSERVER_AUTHORIZER_IS_EMAIL_SERVICE_ENABLED=true\nSERVER_AUTHORIZER_IS_SMS_SERVICE_ENABLED=false\nSERVER_AUTHORIZER_RESET_PASSWORD_URL=/reset-password\nSERVER_AUTHORIZER_ROLES=user,admin\nSERVER_AUTHORIZER_DEFAULT_ROLES=user\nSERVER_AUTHORIZER_JWT_ROLE_CLAIM=role\n"})}),"\n",(0,t.jsx)(n.h3,{id:"12-\u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c-e2e-\u0442\u0435\u0441\u0442\u044b",children:"12. \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c E2E-\u0442\u0435\u0441\u0442\u044b"}),"\n",(0,t.jsx)(n.p,{children:"\u041f\u0440\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 E2E-\u0442\u0435\u0441\u0442\u043e\u0432 \u043c\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430 \u0434\u0443\u0431\u043b\u0438\u0440\u0443\u0435\u0442\u0441\u044f, \u0434\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0443\u0431\u0440\u0430\u0442\u044c \u0434\u0443\u0431\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0443\u0442\u0438\u043b\u0438\u0442\u0443."}),"\n",(0,t.jsxs)(n.p,{children:["\u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"libs/testing/src/lib/utils/rest-client-helper.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { AuthToken, Authorizer } from '@authorizerdev/authorizer-js';\nimport { Configuration, DefaultApi, WebhookApi } from '@nestjs-mod-fullstack/app-rest-sdk';\nimport axios, { AxiosInstance } from 'axios';\nimport { get } from 'env-var';\nimport { GenerateRandomUserResult, generateRandomUser } from './generate-random-user';\nimport { getUrls } from './get-urls';\n\nexport class RestClientHelper {\n  private authorizerClientID!: string;\n\n  authorizationTokens?: AuthToken;\n\n  private webhookApi?: WebhookApi;\n  private defaultApi?: DefaultApi;\n  private authorizer?: Authorizer;\n\n  private defaultApiAxios?: AxiosInstance;\n  private webhookApiAxios?: AxiosInstance;\n\n  randomUser?: GenerateRandomUserResult;\n\n  constructor(\n    private readonly options?: {\n      isAdmin?: boolean;\n      serverUrl?: string;\n      authorizerURL?: string;\n      randomUser?: GenerateRandomUserResult;\n    }\n  ) {\n    this.randomUser = options?.randomUser;\n    this.createApiClients();\n  }\n\n  getGeneratedRandomUser(): Required<GenerateRandomUserResult> {\n    if (!this.randomUser) {\n      throw new Error('this.randomUser not set');\n    }\n    return this.randomUser as Required<GenerateRandomUserResult>;\n  }\n\n  getWebhookApi() {\n    if (!this.webhookApi) {\n      throw new Error('webhookApi not set');\n    }\n    return this.webhookApi;\n  }\n\n  getDefaultApi() {\n    if (!this.defaultApi) {\n      throw new Error('defaultApi not set');\n    }\n    return this.defaultApi;\n  }\n\n  async getAuthorizerClient() {\n    if (!this.authorizerClientID && this.defaultApi) {\n      this.authorizerClientID = (await this.defaultApi.authorizerControllerGetAuthorizerClientID()).data.clientID;\n      if (!this.options?.isAdmin) {\n        this.authorizer = new Authorizer({\n          authorizerURL: this.getAuthorizerUrl(),\n          clientID: this.authorizerClientID,\n          redirectURL: this.getServerUrl(),\n        });\n      } else {\n        this.authorizer = new Authorizer({\n          authorizerURL: this.getAuthorizerUrl(),\n          clientID: this.authorizerClientID,\n          redirectURL: this.getServerUrl(),\n          extraHeaders: {\n            'x-authorizer-admin-secret': get('SERVER_AUTHORIZER_ADMIN_SECRET').required().asString(),\n          },\n        });\n      }\n    }\n    return this.authorizer as Authorizer;\n  }\n\n  async setRoles(roles: string[]) {\n    const _updateUserResult = await (\n      await this.getAuthorizerClient()\n    ).graphqlQuery({\n      query: `mutation {\n  _update_user(\n    params: { id: \"${this.authorizationTokens?.user?.id}\", roles: ${JSON.stringify(roles)} }\n  ) {\n    id\n    roles\n  }\n}`,\n    });\n    if (_updateUserResult.errors.length > 0) {\n      console.error(_updateUserResult.errors);\n      throw new Error(_updateUserResult.errors[0].message);\n    }\n    await this.login();\n\n    return this;\n  }\n\n  async createAndLoginAsUser(options?: Pick<GenerateRandomUserResult, 'email' | 'password'>) {\n    await this.generateRandomUser(options);\n    await this.reg();\n    await this.login(options);\n\n    if (this.options?.isAdmin) {\n      await this.setRoles(['admin', 'user']);\n    }\n\n    return this;\n  }\n\n  async generateRandomUser(options?: Pick<GenerateRandomUserResult, 'email' | 'password'> | undefined) {\n    if (!this.randomUser || options) {\n      this.randomUser = await generateRandomUser(undefined, options);\n    }\n    return this;\n  }\n\n  async reg() {\n    if (!this.randomUser) {\n      this.randomUser = await generateRandomUser();\n    }\n    await (\n      await this.getAuthorizerClient()\n    ).signup({\n      email: this.randomUser.email,\n      confirm_password: this.randomUser.password,\n      password: this.randomUser.password,\n    });\n    return this;\n  }\n\n  async login(options?: Partial<Pick<GenerateRandomUserResult, 'email' | 'password'>>) {\n    if (!this.randomUser) {\n      this.randomUser = await generateRandomUser();\n    }\n    const loginOptions = {\n      email: options?.email || this.randomUser.email,\n      password: options?.password || this.randomUser.password,\n    };\n    const loginResult = await (await this.getAuthorizerClient()).login(loginOptions);\n\n    if (loginResult.errors.length) {\n      throw new Error(loginResult.errors[0].message);\n    }\n\n    this.authorizationTokens = loginResult.data;\n\n    if (this.webhookApiAxios) {\n      Object.assign(this.webhookApiAxios.defaults.headers.common, this.getAuthorizationHeaders());\n    }\n    if (this.defaultApiAxios) {\n      Object.assign(this.defaultApiAxios.defaults.headers.common, this.getAuthorizationHeaders());\n    }\n\n    return this;\n  }\n\n  async logout() {\n    await (await this.getAuthorizerClient()).logout(this.getAuthorizationHeaders());\n    return this;\n  }\n\n  getAuthorizationHeaders() {\n    return {\n      Authorization: `Bearer ${this.authorizationTokens?.access_token}`,\n    };\n  }\n\n  private createApiClients() {\n    this.webhookApiAxios = axios.create();\n    this.defaultApiAxios = axios.create();\n\n    this.webhookApi = new WebhookApi(\n      new Configuration({\n        basePath: this.getServerUrl(),\n      }),\n      undefined,\n      this.webhookApiAxios\n    );\n    this.defaultApi = new DefaultApi(\n      new Configuration({\n        basePath: this.getServerUrl(),\n      }),\n      undefined,\n      this.defaultApiAxios\n    );\n  }\n\n  private getAuthorizerUrl(): string {\n    return this.options?.authorizerURL || getUrls().authorizerUrl;\n  }\n\n  private getServerUrl(): string {\n    return this.options?.serverUrl || getUrls().serverUrl;\n  }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u041e\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432\u043e \u0432\u0441\u0435\u0445 \u0444\u0430\u0439\u043b\u0430\u0445 \u0441 \u0442\u0435\u0441\u0442\u0430\u043c\u0438 \u044f \u043d\u0435 \u0431\u0443\u0434\u0443, \u0434\u043e\u0431\u0430\u0432\u043b\u044e \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0433\u0434\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0441 \u0440\u0430\u0437\u043d\u044b\u043c\u0438 \u0440\u043e\u043b\u044f\u043c\u0438."}),"\n",(0,t.jsxs)(n.p,{children:["\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0444\u0430\u0439\u043b ",(0,t.jsx)(n.em,{children:"apps/server-e2e/src/server/webhook-crud-as-admin.spec.ts"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { RestClientHelper } from '@nestjs-mod-fullstack/testing';\nimport { get } from 'env-var';\n\ndescribe('CRUD operations with Webhook as \"Admin\" role', () => {\n  const user1 = new RestClientHelper();\n  const admin = new RestClientHelper({\n    isAdmin: true,\n  });\n\n  let createEventName: string;\n\n  beforeAll(async () => {\n    await user1.createAndLoginAsUser();\n    await admin.login({\n      email: get('SERVER_AUTH_ADMIN_EMAIL').required().asString(),\n      password: get('SERVER_AUTH_ADMIN_PASSWORD').required().asString(),\n    });\n\n    const { data: events } = await user1.getWebhookApi().webhookControllerEvents();\n    createEventName = events.find((e) => e.eventName.includes('create'))?.eventName || 'create';\n    expect(events.map((e) => e.eventName)).toEqual(['app-demo.create', 'app-demo.update', 'app-demo.delete']);\n  });\n\n  afterAll(async () => {\n    const { data: manyWebhooks } = await user1.getWebhookApi().webhookControllerFindMany();\n    for (const webhook of manyWebhooks.webhooks) {\n      if (webhook.endpoint.startsWith(user1.getGeneratedRandomUser().site)) {\n        await user1.getWebhookApi().webhookControllerUpdateOne(webhook.id, {\n          enabled: false,\n        });\n      }\n    }\n    //\n\n    const { data: manyWebhooks2 } = await admin.getWebhookApi().webhookControllerFindMany();\n    for (const webhook of manyWebhooks2.webhooks) {\n      if (webhook.endpoint.startsWith(admin.getGeneratedRandomUser().site)) {\n        await admin.getWebhookApi().webhookControllerUpdateOne(webhook.id, {\n          enabled: false,\n        });\n      }\n    }\n  });\n\n  it('should create new webhook as user1', async () => {\n    const { data: newWebhook } = await user1.getWebhookApi().webhookControllerCreateOne({\n      enabled: false,\n      endpoint: user1.getGeneratedRandomUser().site,\n      eventName: createEventName,\n    });\n    expect(newWebhook).toMatchObject({\n      enabled: false,\n      endpoint: user1.getGeneratedRandomUser().site,\n      eventName: createEventName,\n    });\n  });\n\n  it('should create new webhook as admin', async () => {\n    const { data: newWebhook } = await admin.getWebhookApi().webhookControllerCreateOne({\n      enabled: false,\n      endpoint: admin.getGeneratedRandomUser().site,\n      eventName: createEventName,\n    });\n    expect(newWebhook).toMatchObject({\n      enabled: false,\n      endpoint: admin.getGeneratedRandomUser().site,\n      eventName: createEventName,\n    });\n  });\n\n  it('should read one webhooks as user', async () => {\n    const { data: manyWebhooks } = await user1.getWebhookApi().webhookControllerFindMany();\n    expect(manyWebhooks).toMatchObject({\n      meta: { curPage: 1, perPage: 5, totalResults: 1 },\n      webhooks: [\n        {\n          enabled: false,\n          endpoint: user1.getGeneratedRandomUser().site,\n          eventName: createEventName,\n        },\n      ],\n    });\n  });\n\n  it('should read all webhooks as admin', async () => {\n    const { data: manyWebhooks } = await admin.getWebhookApi().webhookControllerFindMany();\n    expect(manyWebhooks.meta.totalResults).toBeGreaterThan(1);\n    expect(manyWebhooks).toMatchObject({\n      meta: { curPage: 1, perPage: 5 },\n    });\n  });\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u0437\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435",children:"\u0417\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435"}),"\n",(0,t.jsxs)(n.p,{children:["\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043f\u043e\u0441\u0442\u0435 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0431\u044b\u043b \u0432\u044b\u0431\u0440\u0430\u043d - ",(0,t.jsx)(n.a,{href:"https://authorizer.dev",children:"https://authorizer.dev"}),", \u043d\u043e \u043f\u0440\u0438\u043d\u0446\u0438\u043f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043c\u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0442\u0430\u043a\u043e\u0439 \u0436\u0435 \u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u044b\u043b \u043d\u0430\u043f\u0438\u0441\u0430\u043d \u043d\u0430 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0435 \u0438 \u0431\u044d\u043a\u0435\u043d\u0434\u0435 \u043d\u0435 \u0441\u0438\u043b\u044c\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u0430\u0442\u044c\u0441\u044f."]}),"\n",(0,t.jsx)(n.p,{children:"\u0412\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043e\u0447\u0435\u043d\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0432 \u043f\u043b\u0430\u043d\u0435 \u0432\u043d\u0435\u0434\u0440\u0435\u043d\u0438\u044f \u0432 \u043f\u0440\u043e\u0435\u043a\u0442, \u043d\u043e \u043e\u043d \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u043c\u0443\u0442\u0438\u0442\u0435\u043d\u0430\u043d\u0442\u043d\u043e\u0441\u0442\u044c, \u0442\u0430\u043a \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u0430 \u0442\u0430\u043a\u0430\u044f \u043e\u043f\u0446\u0438\u044f, \u0442\u043e \u043b\u0443\u0447\u0448\u0435 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0434\u0440\u0443\u0433\u043e\u0439 \u0441\u0435\u0440\u0432\u0435\u0440 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0438\u043b\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u0432\u043e\u0439."}),"\n",(0,t.jsx)(n.p,{children:"\u0410\u0432\u0442\u043e \u0440\u0435\u0444\u0440\u0435\u0448\u044c \u0442\u043e\u043a\u0435\u043d\u0430 \u043f\u0440\u0438 \u043e\u0448\u0438\u0431\u043a\u0435 401 \u0432 \u0434\u0430\u043d\u043d\u043e\u0439 \u0432\u0435\u0440\u0441\u0438\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043d\u0435 \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d, \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u0432\u043d\u0435\u0434\u0440\u0435\u043d \u0432 \u0431\u0443\u0434\u0443\u0449\u0438\u0445 \u043f\u043e\u0441\u0442\u0430\u0445."}),"\n",(0,t.jsx)(n.h3,{id:"\u043f\u043b\u0430\u043d\u044b",children:"\u041f\u043b\u0430\u043d\u044b"}),"\n",(0,t.jsxs)(n.p,{children:["\u0423 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0435\u0441\u0442\u044c \u043f\u043e\u043b\u0435 ",(0,t.jsx)(n.code,{children:"picture"}),", \u043d\u043e \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043d\u0435\u0442 \u043c\u0435\u0442\u043e\u0434\u0430 \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u043f\u043e\u0441\u0442\u0435 \u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0443 ",(0,t.jsx)(n.a,{href:"https://min.io/",children:"https://min.io/"})," \u0432 \u043f\u0440\u043e\u0435\u043a\u0442 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u044e \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044e \u0441 NestJS \u0438 Angular..."]}),"\n",(0,t.jsx)(n.h3,{id:"\u0441\u0441\u044b\u043b\u043a\u0438",children:"\u0421\u0441\u044b\u043b\u043a\u0438"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://nestjs.com",children:"https://nestjs.com"})," - \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u0430\u0439\u0442 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://nestjs-mod.com",children:"https://nestjs-mod.com"})," - \u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u0430\u0439\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0443\u0442\u0438\u043b\u0438\u0442"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://fullstack.nestjs-mod.com",children:"https://fullstack.nestjs-mod.com"})," - \u0441\u0430\u0439\u0442 \u0438\u0437 \u043f\u043e\u0441\u0442\u0430"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack"})," - \u043f\u0440\u043e\u0435\u043a\u0442 \u0438\u0437 \u043f\u043e\u0441\u0442\u0430"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/compare/414980df21e585cb798e1ff756300c4547e68a42..2e4639867c55e350f0c52dee4cb581fc624b5f9d",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack/compare/414980df21e585cb798e1ff756300c4547e68a42..2e4639867c55e350f0c52dee4cb581fc624b5f9d"})," - \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/actions/runs/11729520686/artifacts/2159651164",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack/actions/runs/11729520686/artifacts/2159651164"})," - \u0432\u0438\u0434\u0435\u043e \u0442\u0435\u0441\u0442\u043e\u0432"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"#angular #authorizer #nestjsmod #fullstack\n#2024-11-08"})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var t=r(6540);const o={},s=t.createContext(o);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);