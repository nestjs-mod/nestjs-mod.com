"use strict";(self.webpackChunknestjs_mod_com=self.webpackChunknestjs_mod_com||[]).push([[5072],{1522:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var t=n(4848),i=n(8453);const o={},a='How I Deployed a Full-Stack Application with "NestJS" with "Angular" on "Supabase" and "Vercel"',r={id:"en-posts/fullstack/2024-02-14",title:'How I Deployed a Full-Stack Application with "NestJS" with "Angular" on "Supabase" and "Vercel"',description:"I developed a small full-stack application as an example of a REST + WebSockets boilerplate using NestJS and Angular. The application uses PostgreSQL for data storage, Redis for caching, and Minio for file handling. Initially, the target deployment environment was Kubernetes, but to speed up development and MVP testing, I decided to use free cloud services: Supabase for infrastructure and Vercel for deploying the backend and frontend.",source:"@site/docs/en-posts/fullstack/2024-02-14.md",sourceDirName:"en-posts/fullstack",slug:"/en-posts/fullstack/2024-02-14",permalink:"/docs/en-posts/fullstack/2024-02-14",draft:!1,unlisted:!1,editUrl:"https://github.com/nestjs-mod/nestjs-mod.com/blob/master/docs/en-posts/fullstack/2024-02-14.md",tags:[],version:"current",frontMatter:{},sidebar:"enPostsSidebar",previous:{title:"Fullstack",permalink:"/docs/category/fullstack"},next:{title:"Creating an empty project using NestJS-mod",permalink:"/docs/en-posts/fullstack/2024-08-08"}},l={},c=[{value:"1. Problems",id:"1-problems",level:3},{value:"2. Solution",id:"2-solution",level:3},{value:"3. Initial State",id:"3-initial-state",level:3},{value:"4. Current State",id:"4-current-state",level:3},{value:"5. Implementation Steps",id:"5-implementation-steps",level:3},{value:"5.1. Transition to <code>Supabase Database</code>",id:"51-transition-to-supabase-database",level:4},{value:"5.2. Transition to <code>Supabase</code> Instead of <code>Redis</code>",id:"52-transition-to-supabase-instead-of-redis",level:4},{value:"5.3. Transition to <code>Supabase Storage</code>",id:"53-transition-to-supabase-storage",level:4},{value:"5.4. Transition to <code>Supabase Auth</code>",id:"54-transition-to-supabase-auth",level:4},{value:"5.5. Deployment to <code>Vercel</code>",id:"55-deployment-to-vercel",level:4},{value:"5.6. Environment Variables",id:"56-environment-variables",level:4},{value:"5.7. Registration and Authorization in the Cloud",id:"57-registration-and-authorization-in-the-cloud",level:4},{value:"6. Instructions for Running Local Code with External Infrastructure on <code>Supabase</code>",id:"6-instructions-for-running-local-code-with-external-infrastructure-on-supabase",level:3},{value:"6.1. Initialization",id:"61-initialization",level:4},{value:"6.2. Preparation",id:"62-preparation",level:4},{value:"6.3. Running",id:"63-running",level:4},{value:"6.4. Open the Browser",id:"64-open-the-browser",level:4},{value:"6.5. Testing",id:"65-testing",level:4},{value:"6.6. Stopping",id:"66-stopping",level:4},{value:"Conclusion",id:"conclusion",level:3},{value:"Plans",id:"plans",level:3},{value:"Links",id:"links",level:3}];function d(e){const s={a:"a",code:"code",h1:"h1",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"how-i-deployed-a-full-stack-application-with-nestjs-with-angular-on-supabase-and-vercel",children:'How I Deployed a Full-Stack Application with "NestJS" with "Angular" on "Supabase" and "Vercel"'}),"\n",(0,t.jsxs)(s.p,{children:["I developed a small ",(0,t.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack",children:"full-stack"})," application as an example of a ",(0,t.jsx)(s.code,{children:"REST"})," + ",(0,t.jsx)(s.code,{children:"WebSockets"})," boilerplate using ",(0,t.jsx)(s.code,{children:"NestJS"})," and ",(0,t.jsx)(s.code,{children:"Angular"}),". The application uses ",(0,t.jsx)(s.code,{children:"PostgreSQL"})," for data storage, ",(0,t.jsx)(s.code,{children:"Redis"})," for caching, and ",(0,t.jsx)(s.code,{children:"Minio"})," for file handling. Initially, the target deployment environment was ",(0,t.jsx)(s.code,{children:"Kubernetes"}),", but to speed up development and MVP testing, I decided to use free cloud services: ",(0,t.jsx)(s.code,{children:"Supabase"})," for infrastructure and ",(0,t.jsx)(s.code,{children:"Vercel"})," for deploying the backend and frontend."]}),"\n",(0,t.jsx)(s.h3,{id:"1-problems",children:"1. Problems"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Development Infrastructure"}),": For local development, it was necessary to set up ",(0,t.jsx)(s.code,{children:"PostgreSQL"}),", ",(0,t.jsx)(s.code,{children:"Redis"}),", ",(0,t.jsx)(s.code,{children:"Minio"}),", and an authorization server (",(0,t.jsx)(s.code,{children:"Authorizer.dev"}),"). This was time-consuming and resource-intensive."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsxs)(s.strong,{children:["Complexity of Deployment in ",(0,t.jsx)(s.code,{children:"Kubernetes"})]}),": Configuring Docker image builds and deploying to ",(0,t.jsx)(s.code,{children:"Kubernetes"})," took a lot of time, especially if the Docker images were large."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Limited Budget"}),": For small projects or MVP testing, there was no budget for dedicated servers or a full-fledged ",(0,t.jsx)(s.code,{children:"Kubernetes"})," infrastructure."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"2-solution",children:"2. Solution"}),"\n",(0,t.jsxs)(s.p,{children:["I decided to add the ability to deploy the application not only to ",(0,t.jsx)(s.code,{children:"Kubernetes"})," but also to free cloud services like ",(0,t.jsx)(s.code,{children:"Supabase"})," (for databases, storage, and authentication) and ",(0,t.jsx)(s.code,{children:"Vercel"})," (for backend and frontend deployment). This allowed me to speed up the development and testing process while reducing infrastructure costs."]}),"\n",(0,t.jsx)(s.h3,{id:"3-initial-state",children:"3. Initial State"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Backend"}),": ",(0,t.jsx)(s.code,{children:"NestJS"})," with ",(0,t.jsx)(s.code,{children:"REST API"})," and ",(0,t.jsx)(s.code,{children:"WebSockets"})," for broadcasting events (e.g., current server time)."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Frontend"}),": ",(0,t.jsx)(s.code,{children:"Angular"})," for interacting with the backend via ",(0,t.jsx)(s.code,{children:"REST"})," and ",(0,t.jsx)(s.code,{children:"WebSockets"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Infrastructure"}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Locally running services: ",(0,t.jsx)(s.code,{children:"Authorizer.dev"})," for authentication, ",(0,t.jsx)(s.code,{children:"PostgreSQL"})," for the database, ",(0,t.jsx)(s.code,{children:"Redis"})," for caching, and ",(0,t.jsx)(s.code,{children:"Minio"})," for file storage."]}),"\n",(0,t.jsxs)(s.li,{children:["Deployment to ",(0,t.jsx)(s.code,{children:"Kubernetes"})," using Docker images for the backend and frontend."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"PostgreSQL"})," and migrations were run via ",(0,t.jsx)(s.code,{children:"Docker Compose"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"E2E"})," tests were also run via ",(0,t.jsx)(s.code,{children:"Docker Compose"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"4-current-state",children:"4. Current State"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Backend and Frontend"}),": Work locally, but the infrastructure has been fully migrated to ",(0,t.jsx)(s.code,{children:"Supabase"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Cloud Services Used"}),":","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"Supabase Auth"})}),": Replaced the local ",(0,t.jsx)(s.code,{children:"Authorizer.dev"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"Supabase Database"})}),": Replaced the local ",(0,t.jsx)(s.code,{children:"PostgreSQL"})," and ",(0,t.jsx)(s.code,{children:"Redis"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"Supabase Storage"})}),": Replaced the local ",(0,t.jsx)(s.code,{children:"Minio"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Deployment"}),": The backend and frontend are deployed to ",(0,t.jsx)(s.code,{children:"Vercel"}),". Due to ",(0,t.jsx)(s.code,{children:"Vercel"}),"'s serverless architecture, ",(0,t.jsx)(s.code,{children:"WebSockets"})," do not work, so related tests have been disabled."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.code,{children:"CI/CD"})}),": Build and deployment are done via ",(0,t.jsx)(s.code,{children:"GitHub Actions"}),", including applying migrations and running ",(0,t.jsx)(s.code,{children:"E2E"})," tests."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"5-implementation-steps",children:"5. Implementation Steps"}),"\n",(0,t.jsxs)(s.h4,{id:"51-transition-to-supabase-database",children:["5.1. Transition to ",(0,t.jsx)(s.code,{children:"Supabase Database"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Local ",(0,t.jsx)(s.code,{children:"PostgreSQL"})," was replaced with ",(0,t.jsx)(s.code,{children:"Supabase Database"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["For migrations, ",(0,t.jsx)(s.code,{children:"pg-flyway"})," (a mini-version of ",(0,t.jsx)(s.code,{children:"Flyway"})," without ",(0,t.jsx)(s.code,{children:"Java"}),") was used. I didn\u2019t want to lose the functionality of ",(0,t.jsx)(s.code,{children:"Flyway"})," but also didn\u2019t want to install ",(0,t.jsx)(s.code,{children:"Java"})," during deployment. As a result, I created a mini-version of ",(0,t.jsx)(s.code,{children:"flyway"})," \u2014 ",(0,t.jsx)(s.a,{href:"https://www.npmjs.com/package/pg-flyway",children:(0,t.jsx)(s.code,{children:"pg-flyway"})}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["In ",(0,t.jsx)(s.code,{children:"Supabase"}),", you cannot create multiple databases, so migrations are run in a single database using different tables to track migrations. To solve this issue, the migration table name can be passed when running the migrator."]}),"\n",(0,t.jsxs)(s.li,{children:["A single user is used for all databases since ",(0,t.jsx)(s.code,{children:"Supabase"})," does not allow creating new users with database creation rights. This limitation required rethinking the database logic."]}),"\n"]}),"\n",(0,t.jsxs)(s.h4,{id:"52-transition-to-supabase-instead-of-redis",children:["5.2. Transition to ",(0,t.jsx)(s.code,{children:"Supabase"})," Instead of ",(0,t.jsx)(s.code,{children:"Redis"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"Redis"})," was replaced with ",(0,t.jsx)(s.code,{children:"Keyv"})," with ",(0,t.jsx)(s.code,{children:"PostgreSQL"})," support. Since the current project did not have any ",(0,t.jsx)(s.code,{children:"Redis"}),"-specific tasks, I decided to replace ",(0,t.jsx)(s.code,{children:"Redis"})," with an alternative implementation."]}),"\n",(0,t.jsxs)(s.li,{children:["During my research, I noticed that the ",(0,t.jsx)(s.code,{children:"CacheModule"})," for ",(0,t.jsx)(s.code,{children:"NestJS"})," was transitioning to using ",(0,t.jsx)(s.code,{children:"Keyv"}),", so I created my own wrapper, ",(0,t.jsx)(s.a,{href:"https://nestjs-mod.com/docs/packages/core/keyv",children:(0,t.jsx)(s.code,{children:"nestjs-mod/keyv"})}),", which supports both ",(0,t.jsx)(s.code,{children:"Redis"})," and ",(0,t.jsx)(s.code,{children:"PostgreSQL"}),"."]}),"\n",(0,t.jsx)(s.li,{children:"This is not a full replacement; it only works for simple applications where we cache some data."}),"\n"]}),"\n",(0,t.jsxs)(s.h4,{id:"53-transition-to-supabase-storage",children:["5.3. Transition to ",(0,t.jsx)(s.code,{children:"Supabase Storage"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"Minio"})," was replaced with ",(0,t.jsx)(s.code,{children:"Supabase Storage"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["The main changes involved the logic for generating file upload links. Unlike ",(0,t.jsx)(s.code,{children:"Minio"}),", in ",(0,t.jsx)(s.code,{children:"Supabase"}),", buckets and policies are created via the ",(0,t.jsx)(s.code,{children:"GUI"}),", which complicates automation (this was the only method I could find)."]}),"\n",(0,t.jsxs)(s.li,{children:["One issue in the code was that the ",(0,t.jsx)(s.code,{children:"FilesModule"})," was tightly coupled with ",(0,t.jsx)(s.code,{children:"Minio"}),". I had to decouple it and create a configuration to override methods at the application level through integration configuration."]}),"\n"]}),"\n",(0,t.jsxs)(s.h4,{id:"54-transition-to-supabase-auth",children:["5.4. Transition to ",(0,t.jsx)(s.code,{children:"Supabase Auth"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["The local ",(0,t.jsx)(s.code,{children:"Authorizer.dev"})," was replaced with ",(0,t.jsx)(s.code,{children:"Supabase Auth"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["Problems arose immediately since the ",(0,t.jsx)(s.code,{children:"AuthModule"})," was previously based entirely on the logic and code for working with ",(0,t.jsx)(s.code,{children:"Authorizer"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["A new ",(0,t.jsx)(s.code,{children:"NestJS"})," module for working with ",(0,t.jsx)(s.code,{children:"Supabase Auth"})," was written, compatible with the previous implementation. This module was not written from scratch but by copying code from the existing ",(0,t.jsx)(s.a,{href:"https://nestjs-mod.com/docs/packages/core/authorizer",children:(0,t.jsx)(s.code,{children:"nestjs-mod/authorizer"})}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["Currently, this new module resides in this project, but it will eventually be moved to ",(0,t.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod-contrib",children:(0,t.jsx)(s.code,{children:"nestjs-mod/nestjs-mod-contrib"})}),". I\u2019ve had too many issues with existing authorization servers, so I need to write my own custom implementation. Once it\u2019s written and tested for backward compatibility with ",(0,t.jsx)(s.code,{children:"Supabase"})," and ",(0,t.jsx)(s.code,{children:"Authorizer"}),", the ",(0,t.jsx)(s.code,{children:"Supabase"})," implementation will be published as a public ",(0,t.jsx)(s.code,{children:"npm"})," package."]}),"\n"]}),"\n",(0,t.jsxs)(s.h4,{id:"55-deployment-to-vercel",children:["5.5. Deployment to ",(0,t.jsx)(s.code,{children:"Vercel"})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["This step consumed a lot of time. I won\u2019t describe all the issues I encountered, but there were many. Here\u2019s a link to example configurations I found useful: ",(0,t.jsx)(s.a,{href:"https://github.com/vercel/vercel/tree/main/packages/node/test/fixtures",children:"Vercel configuration examples"}),", and here\u2019s my config for ",(0,t.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/blob/master/vercel.json",children:(0,t.jsx)(s.code,{children:"vercel.json"})}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["After setting up deployment to ",(0,t.jsx)(s.code,{children:"Vercel"}),", if you have ",(0,t.jsx)(s.code,{children:"e2e"})," tests, some of them will fail because ",(0,t.jsx)(s.code,{children:"Vercel"})," spins up the application for each request. If the application is not optimized for serverless, like mine, the tests will fail due to slow response times. I solved this by increasing the timeout in the tests."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"56-environment-variables",children:"5.6. Environment Variables"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["This isn\u2019t a major issue, but it exists. When deploying to your own virtual server, the server is impersonal and can be destroyed at any time, and it doesn\u2019t store environment variables. They are all stored in ",(0,t.jsx)(s.code,{children:"CI/CD"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["When using ",(0,t.jsx)(s.code,{children:"Vercel"})," and ",(0,t.jsx)(s.code,{children:"Supabase"}),", there are two additional places where environment variables can be stored. Designing the deployment and launch to account for these variations took a lot of time."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"57-registration-and-authorization-in-the-cloud",children:"5.7. Registration and Authorization in the Cloud"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["I won\u2019t describe the registration process for ",(0,t.jsx)(s.a,{href:"https://supabase.com/dashboard/new",children:(0,t.jsx)(s.code,{children:"Supabase"})})," and ",(0,t.jsx)(s.a,{href:"https://vercel.com/new",children:(0,t.jsx)(s.code,{children:"Vercel"})}),". Instead, I\u2019ll share a short ",(0,t.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/raw/refs/heads/master/steps/2025-02-12/create-supabase-project-and-link-it-to-vercel.mp4",children:"video"})," on how to create applications on ",(0,t.jsx)(s.code,{children:"Supabase"})," and set environment variables in ",(0,t.jsx)(s.code,{children:"Vercel"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.h3,{id:"6-instructions-for-running-local-code-with-external-infrastructure-on-supabase",children:["6. Instructions for Running Local Code with External Infrastructure on ",(0,t.jsx)(s.code,{children:"Supabase"})]}),"\n",(0,t.jsx)(s.h4,{id:"61-initialization",children:"6.1. Initialization"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"git clone git@github.com:nestjs-mod/nestjs-mod-fullstack.git\ncd nestjs-mod-fullstack\nnpm i\ncp ./example-supabase.env ./.env\n"})}),"\n",(0,t.jsx)(s.h4,{id:"62-preparation",children:"6.2. Preparation"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Create an organization and project on ",(0,t.jsx)(s.a,{href:"https://supabase.com/",children:"Supabase"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:['Create a bucket named "images" in the storage (example link: ',(0,t.jsx)(s.a,{href:"https://supabase.com/dashboard/project/XXX/storage/buckets",children:"https://supabase.com/dashboard/project/XXX/storage/buckets"}),")."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:['Create new "S3 Access Keys" with "Access key ID" and "Secret access key" (example link: ',(0,t.jsx)(s.a,{href:"https://supabase.com/dashboard/project/gustcjgbrmmipkizqzso/settings/storage",children:"https://supabase.com/dashboard/project/gustcjgbrmmipkizqzso/settings/storage"}),")."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Open ",(0,t.jsx)(s.code,{children:".env"})," and fill in the empty values."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"# https://supabase.com/dashboard/project/XXX/settings/api - API Settings - Project URL - URL\nSUPABASE_URL=empty_value\n# https://supabase.com/dashboard/project/XXX/settings/database?showConnect=true - Connection String - Direct connection\nPOSTGRES_URL=empty_value\n# https://supabase.com/dashboard/project/XXX/settings/api - API Settings - Project API Keys - anon public\nSUPABASE_ANON_KEY=empty_value\n# https://supabase.com/dashboard/project/gustcjgbrmmipkizqzso/settings/storage - S3 Access Keys - New access key - Access key ID\nSERVER_MINIO_ACCESS_KEY=empty_value\n# https://supabase.com/dashboard/project/gustcjgbrmmipkizqzso/settings/storage - S3 Access Keys - New access key - Secret access key\nSERVER_MINIO_SECRET_KEY=empty_value\n"})}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Create and fill in all necessary new environment keys."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"npx --yes tsx update-files-for-vercel.ts\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"63-running",children:"6.3. Running"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"npm run pm2-supabase-full:dev:start\n"})}),"\n",(0,t.jsx)(s.h4,{id:"64-open-the-browser",children:"6.4. Open the Browser"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"http://localhost:4200",children:"http://localhost:4200"})}),"\n",(0,t.jsx)(s.h4,{id:"65-testing",children:"6.5. Testing"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"npm run pm2-supabase-full:dev:test:e2e\n"})}),"\n",(0,t.jsx)(s.h4,{id:"66-stopping",children:"6.6. Stopping"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"npm run pm2-supabase-full:dev:stop\n"})}),"\n",(0,t.jsx)(s.h3,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(s.p,{children:"Designing and developing the code for this article took me almost two months of part-time work. This makes you think about the necessity of supporting multiple environments for running an application."}),"\n",(0,t.jsxs)(s.p,{children:["I won\u2019t provide code examples here because there were too many ",(0,t.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/compare/ac8ce1e94a24f912f73c5eb1950458ebc77c12d4..2c4ae81cd32a7b186e4b63c567a30ad7e0c2a239",children:"changes"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["Backward compatibility is achieved by substituting the necessary implementation of configurations and different service implementations, both in the ",(0,t.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/tree/master/apps/server/src/app/integrations",children:"backend"})," and the ",(0,t.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/tree/master/apps/client/src/app/integrations",children:"frontend"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["The free version of the cloud infrastructure from ",(0,t.jsx)(s.code,{children:"Supabase"})," is limited in resources and responds slowly. Deployment to such an environment can only be used during the development of the ",(0,t.jsx)(s.code,{children:"MVP"})," version."]}),"\n",(0,t.jsxs)(s.p,{children:["Since the version deployed to ",(0,t.jsx)(s.code,{children:"Vercel"})," works as ",(0,t.jsx)(s.code,{children:"serverless"}),", we don\u2019t have the ability to use internal ",(0,t.jsx)(s.code,{children:"EventEmitter"}),"s or ",(0,t.jsx)(s.code,{children:"RxJS Subject"}),"s that we could emit using background global ",(0,t.jsx)(s.code,{children:"setInterval"}),"s in the code. Such logic needs to be solved differently, using ",(0,t.jsx)(s.code,{children:"Supabase Cron"}),", ",(0,t.jsx)(s.code,{children:"Supabase Queues"}),", or ",(0,t.jsx)(s.code,{children:"Supabase Realtime"}),"."]}),"\n",(0,t.jsx)(s.p,{children:"Implementing support for multiple deployment and launch options is very labor-intensive, and it\u2019s always better to choose a single deployment path for your application."}),"\n",(0,t.jsx)(s.h3,{id:"plans",children:"Plans"}),"\n",(0,t.jsx)(s.p,{children:"Since I need to write a custom authorization service for work that can be extended as needed, in the next post, I will describe the creation of a basic, simple version..."}),"\n",(0,t.jsx)(s.h3,{id:"links",children:"Links"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://nestjs.com",children:"https://nestjs.com"})," - official framework website"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://nestjs-mod.com",children:"https://nestjs-mod.com"})," - official website for additional utilities"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://fullstack.nestjs-mod.com",children:"https://fullstack.nestjs-mod.com"})," - website from the post"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://nestjs-mod-fullstack.vercel.app",children:"https://nestjs-mod-fullstack.vercel.app"})," - website from the post on Vercel"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack"})," - project from the post"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/compare/ac8ce1e94a24f912f73c5eb1950458ebc77c12d4..2c4ae81cd32a7b186e4b63c567a30ad7e0c2a239",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack/compare/ac8ce1e94a24f912f73c5eb1950458ebc77c12d4..2c4ae81cd32a7b186e4b63c567a30ad7e0c2a239"})," - changes"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"https://github.com/nestjs-mod/nestjs-mod-fullstack/actions/runs/13308995633/artifacts/2585972924",children:"https://github.com/nestjs-mod/nestjs-mod-fullstack/actions/runs/13308995633/artifacts/2585972924"})," - video of frontend E2E tests"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"#angular #nestjsmod #supabase #vercel\n#2024-02-14"})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>r});var t=n(6540);const i={},o=t.createContext(i);function a(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);