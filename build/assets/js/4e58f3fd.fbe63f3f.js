"use strict";(self.webpackChunknestjs_mod_com=self.webpackChunknestjs_mod_com||[]).push([[2262],{3020:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=s(4848),t=s(8453);const i={},a="@nestjs-mod/prisma",o={id:"packages/core/prisma/README",title:"@nestjs-mod/prisma",description:"Next-generation Node.js and TypeScript ORM for NestJS-mod (preview version only for Postgres)",source:"@site/docs/packages/core/prisma/README.md",sourceDirName:"packages/core/prisma",slug:"/packages/core/prisma/",permalink:"/docs/packages/core/prisma/",draft:!1,unlisted:!1,editUrl:"https://github.com/nestjs-mod/nestjs-mod.com/blob/master/docs/packages/core/prisma/README.md",tags:[],version:"current",frontMatter:{},sidebar:"packagesSidebar",previous:{title:"@nestjs-mod/minio",permalink:"/docs/packages/core/minio/"},next:{title:"Infrastructure",permalink:"/docs/category/infrastructure"}},d={},l=[{value:"Installation",id:"installation",level:2},{value:"Modules",id:"modules",level:2},{value:"Modules descriptions",id:"modules-descriptions",level:2},{value:"PrismaModule",id:"prismamodule",level:3},{value:"Use in NestJS",id:"use-in-nestjs",level:4},{value:"Use in NestJS-mod",id:"use-in-nestjs-mod",level:4},{value:"Shared providers",id:"shared-providers",level:4},{value:"Environments",id:"environments",level:4},{value:"Static configuration",id:"static-configuration",level:4},{value:"Links",id:"links",level:2},{value:"License",id:"license",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"nestjs-modprisma",children:"@nestjs-mod/prisma"}),"\n",(0,r.jsx)(n.p,{children:"Next-generation Node.js and TypeScript ORM for NestJS-mod (preview version only for Postgres)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://npmjs.org/package/@nestjs-mod/prisma",children:(0,r.jsx)(n.img,{src:"https://badgen.net/npm/v/@nestjs-mod/prisma",alt:"NPM version"})})," ",(0,r.jsx)(n.a,{href:"https://npmjs.org/package/@nestjs-mod/prisma",children:(0,r.jsx)(n.img,{src:"https://badgen.net/npm/dm/@nestjs-mod/prisma",alt:"monthly downloads"})})," ",(0,r.jsx)(n.a,{href:"https://t.me/nestjs_mod",children:(0,r.jsx)(n.img,{src:"https://img.shields.io/badge/group-telegram-blue.svg?maxAge=2592000",alt:"Telegram"})})," ",(0,r.jsx)(n.a,{href:"https://discord.gg/meY7UXaG",children:(0,r.jsx)(n.img,{src:"https://img.shields.io/badge/discord-online-brightgreen.svg",alt:"Discord"})})]}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm i --save-dev prisma\nnpm i --save @prisma/client @nestjs-mod/prisma\n"})}),"\n",(0,r.jsx)(n.h2,{id:"modules",children:"Modules"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Link"}),(0,r.jsx)(n.th,{children:"Category"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"#prismamodule",children:"PrismaModule"})}),(0,r.jsx)(n.td,{children:"core"}),(0,r.jsx)(n.td,{children:"Next-generation Node.js and TypeScript ORM for NestJS-mod (preview version only for Postgres)"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"modules-descriptions",children:"Modules descriptions"}),"\n",(0,r.jsx)(n.h3,{id:"prismamodule",children:"PrismaModule"}),"\n",(0,r.jsx)(n.p,{children:"Next-generation Node.js and TypeScript ORM for NestJS-mod (preview version only for Postgres)"}),"\n",(0,r.jsx)(n.h4,{id:"use-in-nestjs",children:"Use in NestJS"}),"\n",(0,r.jsxs)(n.p,{children:["For add support prisma in NestJS please read ",(0,r.jsx)(n.a,{href:"https://docs.nestjs.com/recipes/prisma#set-up-prisma",children:"https://docs.nestjs.com/recipes/prisma#set-up-prisma"})]}),"\n",(0,r.jsx)(n.p,{children:"Use with forRoot options."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { InjectPrismaClient, PrismaModule } from '@nestjs-mod/prisma';\nimport { NestFactory } from '@nestjs/core';\nimport { randomUUID } from 'crypto';\n\nimport { Injectable, Module } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class AppService {\n  constructor(\n    @InjectPrismaClient()\n    private readonly prismaService: PrismaClient\n  ) {}\n\n  async createUser({ externalUserId }: { externalUserId: string }) {\n    return await this.prismaService.prismaUser.create({ data: { externalUserId } });\n  }\n\n  async getUsers() {\n    return await this.prismaService.prismaUser.findMany();\n  }\n}\n\n@Module({\n  imports: [\n    PrismaModule.forRoot({\n      staticConfiguration: {\n        prismaModule: import(`@prisma/prisma-user-client`),\n        addMigrationScripts: true,\n      },\n    }),\n  ],\n  providers: [AppService],\n})\nexport class AppModule {}\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.listen(3000);\n\n  const service = app.get<AppService>(AppService);\n  const externalUserId = randomUUID();\n  await service.createUser({ externalUserId });\n  console.log(await service.getUsers()); // output: [{ externalUserId: '568a823e-65ea-46ba-aa57-0194ee67e0f9' }]\n}\n\nbootstrap();\n"})}),"\n",(0,r.jsx)(n.p,{children:"An example of access to module services with forFeature."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { InjectPrismaClient, PrismaModule } from '@nestjs-mod/prisma';\nimport { NestFactory } from '@nestjs/core';\nimport { randomUUID } from 'crypto';\n\nimport { Injectable, Module } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class FeatureService {\n  constructor(\n    @InjectPrismaClient()\n    private readonly prismaService: PrismaClient\n  ) {}\n\n  async createUser({ externalUserId }: { externalUserId: string }) {\n    return await this.prismaService.prismaUser.create({ data: { externalUserId } });\n  }\n\n  async getUsers() {\n    return await this.prismaService.prismaUser.findMany();\n  }\n}\n@Module({\n  imports: [\n    PrismaModule.forFeature({\n      featureModuleName: 'FeatureModule',\n    }),\n  ],\n  providers: [FeatureService],\n})\nexport class FeatureModule {}\n\n@Module({\n  imports: [\n    PrismaModule.forRoot({\n      staticConfiguration: {\n        prismaModule: import(`@prisma/prisma-user-client`),\n        addMigrationScripts: true,\n      },\n    }),\n    FeatureModule,\n  ],\n})\nexport class AppModule {}\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.listen(3000);\n\n  const service = app.get<FeatureService>(FeatureService);\n  const externalUserId = randomUUID();\n  await service.createUser({ externalUserId });\n  console.log(await service.getUsers()); // output: [{ externalUserId: '568a823e-65ea-46ba-aa57-0194ee67e0f9' }]\n}\n\nbootstrap();\n"})}),"\n",(0,r.jsx)(n.h4,{id:"use-in-nestjs-mod",children:"Use in NestJS-mod"}),"\n",(0,r.jsxs)(n.p,{children:["An example of using forRoot with parameters, you can see the full example here ",(0,r.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-contrib/tree/master/apps/example-prisma",children:"https://github.com/nestjs-mod/nestjs-mod-contrib/tree/master/apps/example-prisma"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"For Prisma to work, you must first connect the Docker Compose module and the Docker Compose module to work with the database."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import {\n  DefaultNestApplicationInitializer,\n  DefaultNestApplicationListener,\n  InfrastructureMarkdownReportGenerator,\n  PACKAGE_JSON_FILE,\n  ProjectUtils,\n  bootstrapNestApplication,\n  isInfrastructureMode,\n} from '@nestjs-mod/common';\nimport { DOCKER_COMPOSE_FILE, DockerCompose, DockerComposePostgreSQL } from '@nestjs-mod/docker-compose';\nimport { PRISMA_SCHEMA_FILE, PrismaModule } from '@nestjs-mod/prisma';\nimport { join } from 'path';\nimport { userFeatureName } from './app/app.constants';\nimport { AppModule } from './app/app.module';\n\nconst rootFolder = join(__dirname, '..', '..', '..');\nconst appFolder = join(rootFolder, 'apps', 'example-prisma');\n\nbootstrapNestApplication({\n  modules: {\n    system: [\n      ProjectUtils.forRoot({\n        staticConfiguration: {\n          applicationPackageJsonFile: join(appFolder, PACKAGE_JSON_FILE),\n          packageJsonFile: join(rootFolder, PACKAGE_JSON_FILE),\n          envFile: join(rootFolder, '.env'),\n        },\n      }),\n      DefaultNestApplicationInitializer.forRoot(),\n      DefaultNestApplicationListener.forRoot({\n        staticConfiguration: {\n          // When running in infrastructure mode, the backend server does not start.\n          mode: isInfrastructureMode() ? 'silent' : 'listen',\n        },\n      }),\n    ],\n    core: [\n      PrismaModule.forRoot({\n        staticConfiguration: {\n          schemaFile: join(appFolder, 'src', 'prisma', `${userFeatureName}-${PRISMA_SCHEMA_FILE}`),\n          featureName: userFeatureName,\n          prismaModule: isInfrastructureMode()\n            ? import(`@nestjs-mod/prisma`)\n            : // replace to your client after first run docs:infrastructure\n              import(`@nestjs-mod/prisma`),\n          addMigrationScripts: true,\n        },\n      }),\n    ],\n    feature: [AppModule.forRoot()],\n    infrastructure: [\n      InfrastructureMarkdownReportGenerator.forRoot({\n        staticConfiguration: {\n          markdownFile: join(appFolder, 'INFRASTRUCTURE.MD'),\n          skipEmptySettings: true,\n        },\n      }),\n      DockerCompose.forRoot({\n        configuration: {\n          dockerComposeFileVersion: '3',\n          dockerComposeFile: join(appFolder, DOCKER_COMPOSE_FILE),\n        },\n      }),\n      DockerComposePostgreSQL.forRoot(),\n      DockerComposePostgreSQL.forFeature({\n        featureModuleName: userFeatureName,\n      }),\n    ],\n  },\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:["After connecting the module to the application and ",(0,r.jsx)(n.code,{children:"npm run build"})," and starting generation of documentation through ",(0,r.jsx)(n.code,{children:"npm run docs:infrastructure"}),", you will have new files and scripts to run."]}),"\n",(0,r.jsxs)(n.p,{children:["New scripts mostly ",(0,r.jsx)(n.code,{children:"package.json"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    "_____prisma_____": "_____prisma_____",\n    "prisma:migrate-dev-new:example-prisma": "./node_modules/.bin/nx run example-prisma:prisma-migrate-dev --create-only --name=new",\n    "prisma:migrate-dev:example-prisma": "./node_modules/.bin/nx run example-prisma:prisma-migrate-dev --create-only",\n    "prisma:migrate-deploy:example-prisma": "./node_modules/.bin/nx run example-prisma:prisma-migrate-deploy",\n    "prisma:migrate-deploy": "./node_modules/.bin/nx run-many -t=prisma-migrate-deploy",\n    "prisma:pull": "./node_modules/.bin/nx run-many -t=prisma-pull",\n    "prisma:generate": "./node_modules/.bin/nx run-many -t=prisma-generate"\n  },\n  "scriptsComments": {\n    "prisma:pull": ["Generating a prisma schema based on a database"],\n    "prisma:generate": ["Generation of client prisma schema of all applications and modules"],\n    "prisma:migrate-dev:example-prisma": [\n      "Alias for create new migration for example-prisma (example: `npm run prisma:migrate-dev:example-prisma --name=new)`"\n    ],\n    "prisma:migrate-deploy": ["Applying migrations of all applications and modules"],\n    "prisma:migrate-dev-new:example-prisma": ["Command to create new empty migration for example-prisma"],\n    "prisma:migrate-deploy:example-prisma": ["Applying migrations for example-prisma"]\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Additional commands in the nx application ",(0,r.jsx)(n.code,{children:"project.json"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "targets": {\n    "prisma-generate": {\n      "executor": "nx:run-commands",\n      "options": {\n        "commands": [\n          "./node_modules/.bin/prisma generate --schema=./apps/example-prisma/src/prisma/prisma-user-schema.prisma"\n        ],\n        "parallel": false,\n        "envFile": "./.env",\n        "color": true\n      }\n    },\n    "prisma-pull": {\n      "executor": "nx:run-commands",\n      "options": {\n        "commands": [\n          "./node_modules/.bin/prisma db pull --schema=./apps/example-prisma/src/prisma/prisma-user-schema.prisma"\n        ],\n        "parallel": false,\n        "envFile": "./.env",\n        "color": true\n      }\n    },\n    "prisma-migrate-dev": {\n      "executor": "nx:run-commands",\n      "options": {\n        "commands": [\n          "./node_modules/.bin/prisma migrate dev --schema=./apps/example-prisma/src/prisma/prisma-user-schema.prisma"\n        ],\n        "parallel": false,\n        "envFile": "./.env",\n        "color": true\n      }\n    },\n    "prisma-migrate-deploy": {\n      "executor": "nx:run-commands",\n      "options": {\n        "commands": [\n          "./node_modules/.bin/prisma migrate deploy --schema=./apps/example-prisma/src/prisma/prisma-user-schema.prisma"\n        ],\n        "parallel": false,\n        "envFile": "./.env",\n        "color": true\n      }\n    }\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Example of a prisma schema ",(0,r.jsx)(n.code,{children:"schema.prisma"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-prisma",children:'generator client {\n  provider   = "prisma-client-js"\n  engineType = "binary"\n  output     = "../../../../node_modules/@prisma/prisma-user-client"\n}\n\ndatasource db {\n  provider          = "postgres"\n  url               = env("PRISMA_PRISMA_USER_DATABASE_URL")\n  shadowDatabaseUrl = env("PRISMA_PRISMA_USER_SHADOW_DATABASE_URL")\n}\n\nmodel PrismaUser {\n  id             String   @id(map: "PK_PRISMA_USER") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid\n  externalUserId String   @unique(map: "UQ_PRISMA_USER") @db.Uuid\n  createdAt      DateTime @default(now()) @db.Timestamp(6)\n  updatedAt      DateTime @default(now()) @db.Timestamp(6)\n}\n\n'})}),"\n",(0,r.jsx)(n.p,{children:"New environment variable"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"PRISMA_ROOT_DATABASE_URL=postgres://postgres:postgres_password@localhost:5432/postgres?schema=public\nPRISMA_PRISMA_USER_DATABASE_URL=postgres://prisma_user:prisma_user_password@localhost:5432/prisma_user?schema=public\nPRISMA_PRISMA_USER_SHADOW_DATABASE_URL=postgres://prisma_user:prisma_user_password@localhost:5432/shadow_prisma_user?schema=public\n"})}),"\n",(0,r.jsxs)(n.p,{children:["For create all needs prisma clients, please run ",(0,r.jsx)(n.code,{children:"npm run generate"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["When launched in the infrastructure documentation generation mode, the module creates an ",(0,r.jsx)(n.code,{children:".env"})," file with a list of all required variables, as well as an example ",(0,r.jsx)(n.code,{children:"example.env"}),", where you can enter example variable values."]}),"\n",(0,r.jsx)(n.h4,{id:"shared-providers",children:"Shared providers"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"PrismaClientFactoryService"}),", ",(0,r.jsx)(n.code,{children:"PrismaClient"})]}),"\n",(0,r.jsx)(n.h4,{id:"environments",children:"Environments"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Key"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Sources"}),(0,r.jsx)(n.th,{children:"Constraints"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Value"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"databaseUrl"})}),(0,r.jsxs)(n.td,{children:["Connection string for database with credentials (example: postgres://feat",":feat_password","@localhost:5432/feat?schema=public)"]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"obj['databaseUrl']"}),", ",(0,r.jsx)(n.code,{children:"process.env['DATABASE_URL']"})]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"isNotEmpty"})," (databaseUrl should not be empty)"]}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"-"})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"static-configuration",children:"Static configuration"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Key"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Constraints"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Value"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"defaultLogger"})}),(0,r.jsx)(n.td,{children:"Default logger"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"optional"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"-"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"prismaModule"})}),(0,r.jsx)(n.td,{children:"NodeJS module with Prisma modules"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"optional"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"hidden"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"logging"})}),(0,r.jsx)(n.td,{children:"Logging types (all_queries or long_queries)"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"optional"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"long_queries"})}),(0,r.jsx)(n.td,{children:"-"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"maxQueryExecutionTime"})}),(0,r.jsx)(n.td,{children:"Max query execution time for detect long queries"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"optional"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"5000"})}),(0,r.jsx)(n.td,{children:"-"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"pingDatabaseIntervalMs"})}),(0,r.jsx)(n.td,{children:"Ping database interval (0 - disable)"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"optional"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"0"})}),(0,r.jsx)(n.td,{children:"-"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"featureName"})}),(0,r.jsx)(n.td,{children:"Prisma feature name for generate prefix to environments keys (infrastructure)"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"optional"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"-"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"schemaFile"})}),(0,r.jsx)(n.td,{children:"Schema file for prisma (infrastructure)"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"optional"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"-"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"addMigrationScripts"})}),(0,r.jsxs)(n.td,{children:["The option specifies whether it is necessary to create scripts to work with database migrations, for those who use third-party applications to create and apply migrations in the database (infrastructure, example: ",(0,r.jsx)(n.a,{href:"https://flywaydb.org",children:"https://flywaydb.org"}),", ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/db-migrate",children:"https://www.npmjs.com/package/db-migrate"}),")"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"optional"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"true"})}),(0,r.jsx)(n.td,{children:"-"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"customSchemaContent"})}),(0,r.jsx)(n.td,{children:"Unsafe string custom content for add to end of prisma schema file (infrastructure)"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"optional"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"-"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"binaryTargets"})}),(0,r.jsx)(n.td,{children:"Binary targets (infrastructure)"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"optional"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"-"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"engineType"})}),(0,r.jsx)(n.td,{children:"Binary engine type (binary and library)"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"optional"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"-"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"previewFeatures"})}),(0,r.jsx)(n.td,{children:"Preview features (infrastructure)"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"optional"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"-"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"nxProjectJsonFile"})}),(0,r.jsx)(n.td,{children:"Application or library project.json-file (nx)"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"optional"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"-"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"prismaClientFactory"})}),(0,r.jsxs)(n.td,{children:["PrismaClient factory function (example use for ",(0,r.jsx)(n.a,{href:"https://www.prisma.io/docs/orm/overview/databases/postgresql#using-the-node-postgres-driver",children:"https://www.prisma.io/docs/orm/overview/databases/postgresql#using-the-node-postgres-driver"}),")"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"optional"})}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"-"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"#modules",children:"Back to Top"})}),"\n",(0,r.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod",children:"https://github.com/nestjs-mod/nestjs-mod"})," - A collection of utilities for unifying NestJS applications and modules"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-contrib",children:"https://github.com/nestjs-mod/nestjs-mod-contrib"})," - Contrib repository for the NestJS-mod"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-example",children:"https://github.com/nestjs-mod/nestjs-mod-example"})," - Example application built with ",(0,r.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod/tree/master/libs/schematics",children:"@nestjs-mod/schematics"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod/blob/master/apps/example-basic/INFRASTRUCTURE.MD",children:"https://github.com/nestjs-mod/nestjs-mod/blob/master/apps/example-basic/INFRASTRUCTURE.MD"})," - A simple example of infrastructure documentation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-contrib/blob/master/apps/example-prisma/INFRASTRUCTURE.MD",children:"https://github.com/nestjs-mod/nestjs-mod-contrib/blob/master/apps/example-prisma/INFRASTRUCTURE.MD"})," - An extended example of infrastructure documentation with a docker-compose file and a data base."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://dev.to/endykaufman/collection-of-nestjs-mod-utilities-for-unifying-applications-and-modules-on-nestjs-5256",children:"https://dev.to/endykaufman/collection-of-nestjs-mod-utilities-for-unifying-applications-and-modules-on-nestjs-5256"})," - Article about the project NestJS-mod"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://habr.com/ru/articles/788916",children:"https://habr.com/ru/articles/788916"})," - \u041a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u0443\u0442\u0438\u043b\u0438\u0442 NestJS-mod \u0434\u043b\u044f \u0443\u043d\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0438 \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u043d\u0430 NestJS"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,r.jsx)(n.p,{children:"MIT"})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var r=s(6540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);