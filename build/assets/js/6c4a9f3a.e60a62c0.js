"use strict";(self.webpackChunknestjs_mod_com=self.webpackChunknestjs_mod_com||[]).push([[3846],{1888:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var t=s(4848),r=s(8453);const a={},i="@nestjs-mod/pg-flyway",o={id:"packages/infrastructure/pg-flyway/README",title:"@nestjs-mod/pg-flyway",description:"PgFlyway - utility for working with database migrations (site//www.npmjs.com/package/pg-flyway, preview version only for Postgres)",source:"@site/docs/packages/infrastructure/pg-flyway/README.md",sourceDirName:"packages/infrastructure/pg-flyway",slug:"/packages/infrastructure/pg-flyway/",permalink:"/docs/packages/infrastructure/pg-flyway/",draft:!1,unlisted:!1,editUrl:"https://github.com/nestjs-mod/nestjs-mod.com/blob/master/docs/packages/infrastructure/pg-flyway/README.md",tags:[],version:"current",frontMatter:{},sidebar:"packagesSidebar",previous:{title:"@nestjs-mod/flyway",permalink:"/docs/packages/infrastructure/flyway/"},next:{title:"@nestjs-mod/pm2",permalink:"/docs/packages/infrastructure/pm2/"}},l={},d=[{value:"Installation",id:"installation",level:2},{value:"Modules",id:"modules",level:2},{value:"Modules descriptions",id:"modules-descriptions",level:2},{value:"PgFlyway",id:"pgflyway",level:3},{value:"Use in NestJS-mod",id:"use-in-nestjs-mod",level:4},{value:"Environments",id:"environments",level:4},{value:"Static configuration",id:"static-configuration",level:4},{value:"Links",id:"links",level:2},{value:"License",id:"license",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"nestjs-modpg-flyway",children:"@nestjs-mod/pg-flyway"}),"\n",(0,t.jsxs)(n.p,{children:["PgFlyway - utility for working with database migrations (site: ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/pg-flyway",children:"https://www.npmjs.com/package/pg-flyway"}),", preview version only for Postgres)"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://npmjs.org/package/@nestjs-mod/pg-flyway",children:(0,t.jsx)(n.img,{src:"https://badgen.net/npm/v/@nestjs-mod/pg-flyway",alt:"NPM version"})})," ",(0,t.jsx)(n.a,{href:"https://npmjs.org/package/@nestjs-mod/pg-flyway",children:(0,t.jsx)(n.img,{src:"https://badgen.net/npm/dm/@nestjs-mod/pg-flyway",alt:"monthly downloads"})})," ",(0,t.jsx)(n.a,{href:"https://t.me/nestjs_mod",children:(0,t.jsx)(n.img,{src:"https://img.shields.io/badge/group-telegram-blue.svg?maxAge=2592000",alt:"Telegram"})})," ",(0,t.jsx)(n.a,{href:"https://discord.gg/meY7UXaG",children:(0,t.jsx)(n.img,{src:"https://img.shields.io/badge/discord-online-brightgreen.svg",alt:"Discord"})})]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm i --save-dev pg-flyway@1.0.2\nnpm i --save @nestjs-mod/pg-flyway\n"})}),"\n",(0,t.jsx)(n.h2,{id:"modules",children:"Modules"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Link"}),(0,t.jsx)(n.th,{children:"Category"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"#pgflyway",children:"PgFlyway"})}),(0,t.jsx)(n.td,{children:"infrastructure"}),(0,t.jsxs)(n.td,{children:["PgFlyway - utility for working with database migrations (site: ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/pg-flyway",children:"https://www.npmjs.com/package/pg-flyway"}),", preview version only for Postgres)"]})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"modules-descriptions",children:"Modules descriptions"}),"\n",(0,t.jsx)(n.h3,{id:"pgflyway",children:"PgFlyway"}),"\n",(0,t.jsxs)(n.p,{children:["PgFlyway - utility for working with database migrations (site: ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/pg-flyway",children:"https://www.npmjs.com/package/pg-flyway"}),", preview version only for Postgres)"]}),"\n",(0,t.jsx)(n.h4,{id:"use-in-nestjs-mod",children:"Use in NestJS-mod"}),"\n",(0,t.jsxs)(n.p,{children:["An example you can see the full example here ",(0,t.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-contrib/tree/master/apps/example-prisma-pg-flyway",children:"https://github.com/nestjs-mod/nestjs-mod-contrib/tree/master/apps/example-prisma-pg-flyway"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { PACKAGE_JSON_FILE, ProjectUtils, bootstrapNestApplication } from '@nestjs-mod/common';\nimport { DOCKER_COMPOSE_FILE, DockerCompose, DockerComposePostgreSQL } from '@nestjs-mod/docker-compose';\nimport { PgFlyway } from '@nestjs-mod/pg-flyway';\nimport { join } from 'path';\n\nexport const pgflywayPrismaFeatureName = 'pg-flyway-prisma';\n\nconst rootFolder = join(__dirname, '..', '..', '..');\nconst appFolder = join(rootFolder, 'apps', 'example-prisma-pg-flyway');\n\nbootstrapNestApplication({\n  modules: {\n    system: [\n      ProjectUtils.forRoot({\n        staticConfiguration: {\n          applicationPackageJsonFile: join(appFolder, PACKAGE_JSON_FILE),\n          packageJsonFile: join(rootFolder, PACKAGE_JSON_FILE),\n          envFile: join(rootFolder, '.env'),\n        },\n      }),\n    ],\n    infrastructure: [\n      DockerCompose.forRoot({\n        configuration: {\n          dockerComposeFileVersion: '3',\n          dockerComposeFile: join(appFolder, DOCKER_COMPOSE_FILE),\n        },\n      }),\n      DockerComposePostgreSQL.forRoot(),\n      DockerComposePostgreSQL.forFeature({\n        featureModuleName: pgflywayPrismaFeatureName,\n      }),\n      PgFlyway.forRoot({\n        staticConfiguration: {\n          featureName: pgflywayPrismaFeatureName,\n          migrationsFolder: join(appFolder, 'src', 'migrations'),\n        },\n      }),\n    ],\n  },\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["After connecting the module to the application and ",(0,t.jsx)(n.code,{children:"npm run build"})," and starting generation of documentation through ",(0,t.jsx)(n.code,{children:"npm run docs:infrastructure"}),", you will have new files and scripts to run."]}),"\n",(0,t.jsxs)(n.p,{children:["New scripts mostly ",(0,t.jsx)(n.code,{children:"package.json"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    "_____pg-flyway_____": "_____pg-flyway_____",\n    "pg-flyway:create:example-prisma-pg-flyway": "./node_modules/.bin/nx run example-prisma-pg-flyway:pg-flyway-create-migration",\n    "pg-flyway:migrate:example-prisma-pg-flyway": "./node_modules/.bin/nx run example-prisma-pg-flyway:pg-flyway-migrate"\n  },\n  "scriptsComments": {\n    "pg-flyway:create:example-prisma-pg-flyway": [\n      "Command to create new empty migration for example-prisma-pg-flyway, for set name pass name to --args, example: npm run pg-flyway:create:appname --args=Init"\n    ],\n    "pg-flyway:migrate:example-prisma-pg-flyway": ["Applying migrations for example-prisma-pg-flyway"]\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Additional commands in the nx application ",(0,t.jsx)(n.code,{children:"project.json"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "targets": {\n    "pg-flyway-create-migration": {\n      "executor": "nx:run-commands",\n      "options": {\n        "commands": [\n          "export PG_FLYWAY_DATABASE_URL=${EXAMPLE_PRISMA_PG_FLYWAY_PG_FLYWAY_PRISMA_DATABASE_URL} && export PG_FLYWAY_HISTORY_TABLE=__migrations_example_prisma_pg_flyway && export PG_FLYWAY_LOCATIONS=./apps/example-prisma-pg-flyway/src/migrations && ./node_modules/.bin/pg-flyway create --name=${npm_config_args:-NewMigration}"\n        ],\n        "parallel": false,\n        "envFile": "./.env",\n        "color": true\n      }\n    },\n    "pg-flyway-migrate": {\n      "executor": "nx:run-commands",\n      "options": {\n        "commands": [\n          "export PG_FLYWAY_DATABASE_URL=${EXAMPLE_PRISMA_PG_FLYWAY_PG_FLYWAY_PRISMA_DATABASE_URL} && export PG_FLYWAY_HISTORY_TABLE=__migrations_example_prisma_pg_flyway && export PG_FLYWAY_LOCATIONS=./apps/example-prisma-pg-flyway/src/migrations && ./node_modules/.bin/pg-flyway migrate"\n        ],\n        "parallel": false,\n        "envFile": "./.env",\n        "color": true\n      }\n    },\n    "pg-flyway-info": {\n      "executor": "nx:run-commands",\n      "options": {\n        "commands": [\n          "export PG_FLYWAY_DATABASE_URL=${EXAMPLE_PRISMA_PG_FLYWAY_PG_FLYWAY_PRISMA_DATABASE_URL} && export PG_FLYWAY_HISTORY_TABLE=__migrations_example_prisma_pg_flyway && export PG_FLYWAY_LOCATIONS=./apps/example-prisma-pg-flyway/src/migrations && ./node_modules/.bin/pg-flyway info"\n        ],\n        "parallel": false,\n        "envFile": "./.env",\n        "color": true\n      }\n    },\n    "pg-flyway-baseline": {\n      "executor": "nx:run-commands",\n      "options": {\n        "commands": [\n          "export PG_FLYWAY_DATABASE_URL=${EXAMPLE_PRISMA_PG_FLYWAY_PG_FLYWAY_PRISMA_DATABASE_URL} && export PG_FLYWAY_HISTORY_TABLE=__migrations_example_prisma_pg_flyway && export PG_FLYWAY_LOCATIONS=./apps/example-prisma-pg-flyway/src/migrations && ./node_modules/.bin/pg-flyway baseline"\n        ],\n        "parallel": false,\n        "envFile": "./.env",\n        "color": true\n      }\n    },\n    "pg-flyway-validate": {\n      "executor": "nx:run-commands",\n      "options": {\n        "commands": [\n          "export PG_FLYWAY_DATABASE_URL=${EXAMPLE_PRISMA_PG_FLYWAY_PG_FLYWAY_PRISMA_DATABASE_URL} && export PG_FLYWAY_HISTORY_TABLE=__migrations_example_prisma_pg_flyway && export PG_FLYWAY_LOCATIONS=./apps/example-prisma-pg-flyway/src/migrations && ./node_modules/.bin/pg-flyway validate"\n        ],\n        "parallel": false,\n        "envFile": "./.env",\n        "color": true\n      }\n    },\n    "pg-flyway-repair": {\n      "executor": "nx:run-commands",\n      "options": {\n        "commands": [\n          "export PG_FLYWAY_DATABASE_URL=${EXAMPLE_PRISMA_PG_FLYWAY_PG_FLYWAY_PRISMA_DATABASE_URL} && export PG_FLYWAY_HISTORY_TABLE=__migrations_example_prisma_pg_flyway && export PG_FLYWAY_LOCATIONS=./apps/example-prisma-pg-flyway/src/migrations && ./node_modules/.bin/pg-flyway repair"\n        ],\n        "parallel": false,\n        "envFile": "./.env",\n        "color": true\n      }\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"environments",children:"Environments"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Key"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Sources"}),(0,t.jsx)(n.th,{children:"Constraints"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Value"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"databaseUrl"})}),(0,t.jsxs)(n.td,{children:["Connection string for database with credentials (example: postgres://feat",":feat_password","@localhost:5432/feat?schema=public)"]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"obj['databaseUrl']"}),", ",(0,t.jsx)(n.code,{children:"process.env['DATABASE_URL']"})]}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"isNotEmpty"})," (databaseUrl should not be empty)"]}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"-"})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"static-configuration",children:"Static configuration"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Key"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Constraints"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Value"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"featureName"})}),(0,t.jsx)(n.td,{children:"PgFlyway feature name for generate prefix to environments keys"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"optional"})}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"-"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"migrationsFolder"})}),(0,t.jsx)(n.td,{children:"Folder with migrations"}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.strong,{children:"isNotEmpty"})," (migrationsFolder should not be empty)"]}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"-"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"nxProjectJsonFile"})}),(0,t.jsx)(n.td,{children:"Application or library project.json-file (nx)"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"optional"})}),(0,t.jsx)(n.td,{children:"-"}),(0,t.jsx)(n.td,{children:"-"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"#modules",children:"Back to Top"})}),"\n",(0,t.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod",children:"https://github.com/nestjs-mod/nestjs-mod"})," - A collection of utilities for unifying NestJS applications and modules"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-contrib",children:"https://github.com/nestjs-mod/nestjs-mod-contrib"})," - Contrib repository for the NestJS-mod"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-example",children:"https://github.com/nestjs-mod/nestjs-mod-example"})," - Example application built with ",(0,t.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod/tree/master/libs/schematics",children:"@nestjs-mod/schematics"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod/blob/master/apps/example-basic/INFRASTRUCTURE.MD",children:"https://github.com/nestjs-mod/nestjs-mod/blob/master/apps/example-basic/INFRASTRUCTURE.MD"})," - A simple example of infrastructure documentation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/nestjs-mod/nestjs-mod-contrib/blob/master/apps/example-prisma/INFRASTRUCTURE.MD",children:"https://github.com/nestjs-mod/nestjs-mod-contrib/blob/master/apps/example-prisma/INFRASTRUCTURE.MD"})," - An extended example of infrastructure documentation with a docker-compose file and a data base."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://dev.to/endykaufman/collection-of-nestjs-mod-utilities-for-unifying-applications-and-modules-on-nestjs-5256",children:"https://dev.to/endykaufman/collection-of-nestjs-mod-utilities-for-unifying-applications-and-modules-on-nestjs-5256"})," - Article about the project NestJS-mod"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://habr.com/ru/articles/788916",children:"https://habr.com/ru/articles/788916"})," - \u041a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u0443\u0442\u0438\u043b\u0438\u0442 NestJS-mod \u0434\u043b\u044f \u0443\u043d\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0438 \u043c\u043e\u0434\u0443\u043b\u0435\u0439 \u043d\u0430 NestJS"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"license",children:"License"}),"\n",(0,t.jsx)(n.p,{children:"MIT"})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var t=s(6540);const r={},a=t.createContext(r);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);